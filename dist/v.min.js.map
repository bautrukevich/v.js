{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///v.min.js","webpack:///webpack/bootstrap d331ce54e0f93055b206","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_wks.js","webpack:///./src/pattern.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_iterators.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./~/libphonenumber-js/es6/metadata.js","webpack:///./~/libphonenumber-js/es6/parse.js","webpack:///./~/babel-runtime/core-js/get-iterator.js","webpack:///./~/core-js/library/modules/_defined.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/core-js/library/modules/_shared-key.js","webpack:///./~/core-js/library/modules/_to-integer.js","webpack:///./~/core-js/library/modules/_to-iobject.js","webpack:///./~/libphonenumber-js/es6/common.js","webpack:///./~/libphonenumber-js/es6/format.js","webpack:///./src/check.js","webpack:///./~/core-js/library/modules/_cof.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/core-js/library/modules/_iobject.js","webpack:///./~/core-js/library/modules/_iter-define.js","webpack:///./~/core-js/library/modules/_object-keys.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_set-to-string-tag.js","webpack:///./~/core-js/library/modules/_shared.js","webpack:///./~/core-js/library/modules/_to-object.js","webpack:///./~/core-js/library/modules/_uid.js","webpack:///./src/alphanumeric.js","webpack:///./src/digits.js","webpack:///./src/email.js","webpack:///./src/integer.js","webpack:///./src/number.js","webpack:///./src/phone.js","webpack:///./src/express.js","webpack:///./~/babel-runtime/core-js/object/assign.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./~/babel-runtime/helpers/extends.js","webpack:///./~/core-js/library/fn/get-iterator.js","webpack:///./~/core-js/library/fn/object/assign.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_add-to-unscopables.js","webpack:///./~/core-js/library/modules/_array-includes.js","webpack:///./~/core-js/library/modules/_classof.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_html.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_iter-create.js","webpack:///./~/core-js/library/modules/_iter-step.js","webpack:///./~/core-js/library/modules/_library.js","webpack:///./~/core-js/library/modules/_object-assign.js","webpack:///./~/core-js/library/modules/_object-create.js","webpack:///./~/core-js/library/modules/_object-dps.js","webpack:///./~/core-js/library/modules/_object-gops.js","webpack:///./~/core-js/library/modules/_object-gpo.js","webpack:///./~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/core-js/library/modules/_object-pie.js","webpack:///./~/core-js/library/modules/_redefine.js","webpack:///./~/core-js/library/modules/_string-at.js","webpack:///./~/core-js/library/modules/_to-index.js","webpack:///./~/core-js/library/modules/_to-length.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/core.get-iterator-method.js","webpack:///./~/core-js/library/modules/core.get-iterator.js","webpack:///./~/core-js/library/modules/es6.array.iterator.js","webpack:///./~/core-js/library/modules/es6.object.assign.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js","webpack:///./~/core-js/library/modules/es6.string.iterator.js","webpack:///./~/core-js/library/modules/web.dom.iterable.js","webpack:///./~/libphonenumber-js/es6/as you type.js","webpack:///./~/libphonenumber-js/es6/validate.js","webpack:///./~/libphonenumber-js/index.es6.js","webpack:///./~/libphonenumber-js/metadata.min.json","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","v","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","global","window","Math","self","Function","__g","store","uid","Symbol","USE_SYMBOL","$exports","pattern","undefined","_check","_express","expression","check","express","core","version","__e","a","dP","createDesc","key","f","isObject","it","TypeError","anObject","IE8_DOM_DEFINE","toPrimitive","O","P","Attributes","e","get_phone_code","country_metadata","get_national_number_pattern","get_formats","get_national_prefix","get_national_prefix_formatting_rule","get_national_prefix_for_parsing","national_prefix_for_parsing","get_national_prefix_transform_rule","get_national_prefix_is_optional_when_formatting","get_leading_digits","get_format_pattern","format_array","get_format_format","get_format_leading_digits_patterns","get_format_national_prefix_formatting_rule","get_format_national_prefix_is_optional_when_formatting","get_format_national_prefix_is_mandatory_when_formatting","get_format_international_format","get_metadata_by_country_phone_code","country_phone_code","metadata","country_code","country_phone_code_to_countries","countries","get_types","get_type","index","get_type_fixed_line","get_type_mobile","get_type_toll_free","get_type_premium_rate","get_type_personal_number","get_type_voice_mail","get_type_uan","get_type_pager","get_type_voip","get_type_shared_cost","k","g","j","h","b","y","q","r","t","u","w","x","parse","text","options","restrict_to_country","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default","default_options","country","restrict","formatted_phone_number","extract_formatted_phone_number","is_viable_phone_number","_parse_phone_number_a","parse_phone_number_and_country_phone_code","number","is_international","__WEBPACK_IMPORTED_MODULE_3__metadata__","normalize","national_number","strip_national_prefix","did_have_national_prefix","is_national_prefix_required","find_country_code","length","MAX_LENGTH_FOR_NSN","national_number_rule","RegExp","__WEBPACK_IMPORTED_MODULE_2__common__","phone","replace_characters","DIGIT_MAPPINGS","replacements","replaced","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","next","done","character","replacement","toUpperCase","err","return","MIN_LENGTH_FOR_NSN","VALID_PHONE_NUMBER_PATTERN","MAX_INPUT_STRING_LENGTH","starts_at","search","PHONE_NUMBER_START_PATTERN","slice","replace","AFTER_PHONE_NUMBER_END_PATTERN","parse_phone_number","LEADING_PLUS_CHARS_PATTERN","test","MAX_LENGTH_COUNTRY_CODE","national_prefix_pattern","national_prefix_matcher","exec","national_prefix_transform_rule","national_significant_number","any_groups_were_captured","national_phone_number","possible_countries","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","get_number_type","is_of_type","type","format","__WEBPACK_IMPORTED_MODULE_4__format__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__","PLUS_CHARS","VALID_DIGITS","VALID_PUNCTUATION","MIN_LENGTH_PHONE_NUMBER_PATTERN","VALID_PHONE_NUMBER","0","1","2","3","4","5","6","7","8","9","０","１","２","３","４","５","６","７","８","９","٠","١","٢","٣","٤","٥","٦","٧","٨","٩","۰","۱","۲","۳","۴","۵","۶","۷","۸","۹","ctx","hide","PROTOTYPE","$export","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","target","C","arguments","apply","virtual","R","U","shared","ceil","floor","isNaN","IObject","defined","matches_entirely","regular_expression","matched_groups","match","input","third_argument","__WEBPACK_IMPORTED_MODULE_2__parse__","format_national_number","format_national_number_using_format","international","enforce_national_prefix","format_pattern_matcher","national_prefix_formatting_rule","national_prefix_may_be_omitted","FIRST_GROUP_PATTERN","formatted_number","local_to_international_style","format_as","choose_format_for_number","available_formats","_format","last_leading_digits_pattern","__WEBPACK_IMPORTED_MODULE_1__common__","local","trim","toString","document","is","createElement","split","cof","propertyIsEnumerable","LIBRARY","redefine","has","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","Base","NAME","Constructor","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","$keys","enumBugKeys","bitmap","writable","def","tag","stat","SHARED","id","px","random","concat","alphanumeric","_pattern","digits","email","integer","_libphonenumberJs","isValidNumber","flags","instance","_interopRequireDefault","obj","_defineProperty","_defineProperty2","defineProperties","props","descriptor","protoProps","staticProps","_assign","_assign2","assign","$Object","desc","toIObject","toLength","toIndex","IS_INCLUDES","$this","el","fromIndex","ARG","tryGet","T","callee","aFunction","fn","that","documentElement","create","getKeys","gOPS","pIE","toObject","$assign","A","K","forEach","join","aLen","getSymbols","isEnum","dPs","IE_PROTO","Empty","createDict","iframeDocument","iframe","lt","gt","style","display","appendChild","src","contentWindow","open","write","close","Properties","result","getOwnPropertySymbols","ObjectProto","constructor","arrayIndexOf","names","push","toInteger","TO_STRING","pos","String","charCodeAt","charAt","max","min","val","valueOf","classof","getIteratorMethod","getIterator","iterFn","addToUnscopables","step","Array","iterated","_t","_i","_k","Arguments","$at","point","TO_STRING_TAG","collections","Collection","__WEBPACK_IMPORTED_MODULE_0__es6_parse__","__WEBPACK_IMPORTED_MODULE_1__es6_format__","__WEBPACK_IMPORTED_MODULE_2__es6_validate__","__WEBPACK_IMPORTED_MODULE_3__es6_as_you_type__","close_dangling_braces","template","cut_before","retained_template","opening_braces","count_occurences","closing_braces","dangling_braces","symbol","string","count","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","repeat","times","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default","__WEBPACK_IMPORTED_MODULE_4__parse__","__WEBPACK_IMPORTED_MODULE_5__format__","__WEBPACK_IMPORTED_MODULE_6__common__","DUMMY_DIGIT","DUMMY_DIGIT_MATCHER","LONGEST_NATIONAL_PHONE_NUMBER_LENGTH","LONGEST_DUMMY_PHONE_NUMBER","DIGIT_PLACEHOLDER","DIGIT_PLACEHOLDER_MATCHER","DIGIT_PLACEHOLDER_MATCHER_GLOBAL","CHARACTER_CLASS_PATTERN","STANDALONE_DIGIT_PATTERN","ELIGIBLE_FORMAT_PATTERN","MIN_LEADING_DIGITS_LENGTH","VALID_INCOMPLETE_PHONE_NUMBER","VALID_INCOMPLETE_PHONE_NUMBER_PATTERN","as_you_type","default_country","reset","extracted_number","indexOf","process_input","current_output","parsed_input","reset_countriness","valid","determine_the_country","extract_country_phone_code","initialize_phone_number_formats_for_this_country_phone_code","reset_format","previous_national_prefix","national_prefix","extract_national_prefix","matching_formats","formatted_national_phone_number","format_national_phone_number","full_phone_number","next_digits","national_number_formatted_with_previous_format","chosen_format","format_next_national_number_digits","attempt_to_format_complete_phone_number","match_formats_by_leading_digits","choose_another_format","reformat_national_number","reset_country","phone_code","partially_populated_template","last_match_position","filter","sort","leading_digits","index_of_leading_digits_pattern","get_relevant_phone_number_formats","leading_digits_pattern_count","leading_digits_pattern_index","leading_digits_pattern","matcher","validate_format","create_formatting_template","full_number","formatted_national_number","matches","national_number_starts_at","number_pattern","dummy_phone_number_matching_format_pattern","number_format","_national_prefix_formatting_rule","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","digit","is_valid","parsed","__WEBPACK_IMPORTED_MODULE_0__parse__","__WEBPACK_IMPORTED_MODULE_1__metadata__","__WEBPACK_IMPORTED_MODULE_0__metadata_min__","__WEBPACK_IMPORTED_MODULE_0__metadata_min___default","__WEBPACK_IMPORTED_MODULE_1__custom_es6__","is_valid_number","asYouType","context","bind","20","27","30","31","32","33","34","36","39","40","41","43","44","45","46","47","48","49","51","52","53","54","55","56","57","58","60","61","62","63","64","65","66","81","82","84","86","90","91","92","93","94","95","98","211","212","213","216","218","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","260","261","262","263","264","265","266","267","268","269","290","291","297","298","299","350","351","352","353","354","355","356","357","358","359","370","371","372","373","374","375","376","377","378","380","381","382","385","386","387","389","420","421","423","500","501","502","503","504","505","506","507","508","509","590","591","592","593","594","595","596","597","598","599","670","672","673","674","675","676","677","678","679","680","681","682","683","685","686","687","688","689","690","691","692","800","808","850","852","853","855","856","870","878","880","881","882","883","886","888","960","961","962","963","964","965","966","967","968","970","971","972","973","974","975","976","977","979","992","993","994","995","996","998","AC","AD","AE","AF","AG","AI","AL","AM","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TA","TC","TD","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","001","_classCallCheck","_createClass","_alphanumeric","_digits","_email","_integer","_number","_phone","Validator"],"mappings":"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KACA,KACA,gBAGA,uBACA,YAEA,KAEA,KACA,SAGA,2BACA,YAEA,4FACA,0LACA,0MAEA,KACA,SAGA,2BACA,YAEA,QAEA,KACA,SAGA,IACA,MACA,2jBACA,OAEAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,KACA,mBAGA,cACA,MAEA,OAEA,OAGA,iBACA,SAEA,OAIA,mBACA,SAEA,YAIA,2BACA,YAEA,YAIA,2BACA,YAEA,YAIA,sBACA,SAEA,wDAIA,qBACA,SAEA,+FAIA,IACA,OAEAC,IACA,KACA,oBAGA,2BACA,YAEA,UAEA,UAGA,2BACA,YAEA,WAEA,QAGA,yBACA,YAEA,MAEA,QAGA,iCACA,YAEA,gBACA,kBAEA,OAGA,iBACA,SAEA,MACA,QAEA,OAGA,kBACA,SAEA,UAEA,OAGA,qBACA,SAEA,WAEA,OAGA,uBACA,YAEA,WAEA,OAGA,IACA,KACA,KACA,KACA,KACA,MAEA,kFACA,6FACA,yBACA,+BACA,YACA,KACA,KACA,aACA,cAGAC,IACA,MACA,iBAGA,mBACA,WAIAC,IACA,MACA,8DAGA,qBACA,SAEA,wBAIA,cACA,MAEA,OAEA,OAGA,sBACA,SAEA,0BAIA,mBACA,SAEA,oBAIA,IACA,MACA,KACA,KACA,KACA,MAEA,kBACA,wBACA,cACA,iBACA,KACA,KACA,qIAGAC,IACA,MACA,gBAGA,mCACA,eAEA,qCAIA,mCACA,eAEA,SAEA,QAGA,mCACA,eAEA,KAEA,QAGA,IACA,SAEAC,IACA,MACA,kBAGA,2BACA,YAEA,WAIA,2BACA,YAEA,oBAIA,mCACA,eAEA,YAIA,IACA,OAEAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,0CAGA,gBACA,SAEA,OAIA,qBACA,SAEA,aAIA,qBACA,SAEA,4JAIA,qBACA,SAEA,mBAIA,IACA,OAEAC,IACA,KACA,kBAGA,mCACA,eAEA,YAIA,gCACA,eAEA,uBAIA,mCACA,eAEA,qCAIA,2BACA,YAEA,eAIA,IACA,OAEAC,IACA,MACA,iBAGA,mCACA,iBAIAC,IACA,MACA,kCAGA,2BACA,eAEA,OAIA,wBACA,YAEA,OAIA,mBACA,SAEA,uBAIA,2BACA,YAEA,uBAIA,2BACA,YAEA,YAIA,2BACA,YAEA,SAIA,6BACA,YAEA,yCAIA,6BACA,YAEA,qBAIA,IACA,OAEAC,IACA,MACA,kBAGA,mBACA,WAIAC,IACA,MACA,gBAGA,mCACA,iBAIAC,IACA,MACA,yBAGA,mCACA,iBAIAC,IACA,MACA,eAGA,2BACA,aAGA,IACA,KACA,KACA,KACA,KACA,MAEA,+BACA,iCAGAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,kBAGA,0BACA,WAIAC,IACA,MACA,kBAGA,kBACA,SAEA,WAIA,eACA,MAEA,UAIA,IACA,KACA,YAEAC,IACA,MACA,gBAGA,mBACA,SAEA,YAIA,sBACA,YAEA,OAIA,KACA,KACA,KACA,KACA,KACA,MAEA,gDACA,+DAGAC,IACA,KACA,oEAGA,2BACA,YAEA,wDAEA,SAGA,2BACA,YAEA,cAEA,SAGA,mBACA,SAEA,wBAIA,+BACA,YAEA,YAEA,QAGA,IACA,KACA,uDACA,MAEAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,kBAGA,mCACA,eAEA,UAIA,0BACA,YAEA,oBAKAC,IACA,MACA,mBAGA,mBACA,SAEA,WAIA,yBACA,YAEA,OAIA,eACA,SAEA,QAKAC,IACA,MACA,0CAGA,mCACA,eAEA,yBACA,4CAEA,UAGA,mCACA,eAEA,mDACA,iFAEA,UAGA,2BACA,YAEA,oDACA,yFAEA,UAGA,+BACA,YAEA,WAEA,SAGA,0BACA,YAEA,MAEA,SAGA,gBACA,SAEA,OAEA,SAGA,0BACA,YAEA,OAEA,SAGA,IACA,KACA,QAEAC,IACA,MACA,yBAGA,mBACA,SAEA,WAIA,2BACA,eAEA,QAK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EA,mBAIA,IACA,OAEAC,IACA,MACA,eAGA,mCACA,iBAIAC,IACA,KACA,gBAGA,mCACA,iBAIAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,IACA,gBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,WAEAC,IACA,MACA,6BAGA,qCACA,eAEA,WAIA,wCACA,eAEA,WAIA,iCACA,eAEA,OAIA,IACA,OAEAC,IACA,MACA,mCAGA,wBACA,YAEA,oBAEA,KACA,KACA,aAGA,2BACA,YAEA,KAEA,QAGA,2BACA,YAEA,KAEA,OAGA,IACA,SAEAC,IACA,MACA,wCAGA,yBACA,SAEA,gDACA,+EAIA,uBACA,YAEA,QAIA,yBACA,YAEA,MACA,UAIA,0BACA,SAEA,qBACA,8BAKAC,IACA,KACA,gDAGA,kBACA,SAEA,UAIA,2BACA,YAEA,mBAIA,qBACA,SAEA,2BAIA,IACA,OAEAC,IACA,MACA,gBAGA,wBACA,SAEA,+BAIA,uBACA,SAEA,8BACA,gDAIA,oBACA,SAEA,aACA,oBAIA,sCACA,eAEA,uBAIA,kBACA,SAEA,qBAIA,IACA,MACA,KACA,KACA,KACA,WAEAC,IACA,MACA,gBAGA,wBACA,aAGA,IACA,OAEAC,IACA,KACA,gBAGA,2BACA,YAEA,YAIA,wCACA,eAEA,sBAKAC,IACA,MACA,iBAGA,8BACA,aAGA,IACA,OAEAC,IACA,MACA,8BAGA,qBACA,SAEA,wBAIA,cACA,MAEA,OAEA,OAGA,sBACA,SAEA,0BAIA,mBACA,SAEA,oBAIA,IACA,MACA,KACA,KACA,KACA,MAEA,yGACA,wBACA,cACA,iBACA,KACA,KACA,qIAGAC,IACA,MACA,0BAGA,mBACA,SAEA,YAIA,2BACA,YAEA,QAKAC,IACA,MACA,eAEAC,IACA,MACA,eAGA,mBACA,WAIAC,IACA,MACA,gBAGA,WACA,OAGA,KACA,KACA,uBAEAC,IACA,KACA,gBAGA,2CACA,kBAEA,YAIA,oCACA,eAEA,KAEA,SAGA,IACA,OAEAC,IACA,MACA,aAGA,gCACA,eAEA,SAEA,QAGA,mCACA,eAEA,QAKAC,IACA,KACA,cAGA,2BACA,YAEA,0BACA,2CAIA,2BACA,YAEA,0BAIA,qBACA,SAEA,yBACA,kCACA,uDAIA,sBACA,SAEA,OAIA,oBACA,SAEA,mBACA,uBAIA,gBACA,SAEA,MACA,OACA,QACA,SACA,aAIA,kBACA,YAEA,MACA,OACA,QACA,YAIA,4BACA,YAEA,wBAIA,0BACA,YAEA,QAIA,mBACA,SAEA,YAIA,IACA,MACA,KACA,KACA,KACA,MAEA,03CACA,mKACA,6CACA,yCACA,WACA,KACA,uBACA,+DACA,aAGAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,kBAGA,mCACA,eAEA,SAEA,QAGA,2BACA,YAEA,KAEA,QAGA,mCACA,eAEA,KAEA,OAGA,KAEAC,IACA,MACA,eAGA,mCACA,gBAGA,IACA,OAEAC,IACA,KACA,qBAGA,2BACA,YAEA,0BACA,2CAIA,2BACA,YAEA,0BAIA,qBACA,SAEA,yBACA,kCACA,uDAIA,sBACA,SAEA,OAIA,oBACA,SAEA,mBACA,uBAIA,gBACA,SAEA,MACA,OACA,QACA,SACA,aAIA,kBACA,YAEA,MACA,OACA,QACA,YAIA,4BACA,YAEA,wBAIA,0BACA,YAEA,QAIA,mBACA,SAEA,YAIA,IACA,MACA,KACA,KACA,KACA,MAEA,aACA,yBACA,6CACA,wCACA,WACA,KACA,uBACA,+DACA,aAGAC,IACA,MACA,wBAGA,2BACA,YAEA,WAIA,mBACA,SAEA,OAIA,IACA,OAEAC,IACA,MACA,iBAGA,mBACA,SAEA,QAKAC,IACA,MACA,kBAGA,2BACA,cAIAC,IACA,MACA,gBAGA,mBACA,WAIAC,IACA,MACA,kBAGA,mCACA,eAEA,OAIA,mCACA,eAEA,WAKAC,IACA,MACA,eAGA,2BACA,aAGA,IACA,MACA,KACA,KACA,KACA,MAEA,oFACA,iCAGAC,IACA,MACA,kBAGA,2BACA,YAEA,WAIA,mBACA,SAEA,WAKAC,IACA,KACA,iBAGA,4BACA,YAEA,UAIA,2BACA,YAEA,mBAIA,oBACA,SAEA,mBAKAC,IACA,MACA,4BAGA,mBACA,SAEA,WAIA,2BACA,YAEA,QAKAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,qCAGA,2BACA,YAEA,eAIA,mBACA,SAEA,SAKAC,IACA,MACA,mBAGA,mBACA,WAIAC,IACA,MACA,uCAGA,mBACA,SAEA,kCAIA,wBACA,YAEA,SAIA,gCACA,eAEA,SAIA,kBACA,SAEA,UAKAC,IACA,MACA,kBAGA,mBACA,WAIAC,IACA,MACA,gCAGA,sBACA,YAEA,OAIA,0BACA,YAEA,WAIA,4BACA,YAEA,WAIA,+BACA,YAEA,WAIA,2BACA,YAEA,OAIA,yBACA,YAEA,OAIA,mCACA,eAEA,OAIA,6BACA,YAEA,eAIA,6BACA,YAEA,eAIA,6BACA,YAEA,OAIA,6BACA,YAEA,OAIA,IACA,OAEAC,IACA,MACA,kBAGA,2BACA,cAIAC,IACA,KACA,kBAGA,sBACA,YAEA,OAIA,6BACA,YAEA,WAIA,KACA,QAEAC,IACA,KACA,mCAGA,qBACA,SAEA,gBAEA,UAGA,qBACA,SAEA,8BAEA,UAGA,gCACA,YAEA,eAIA,mBACA,YAEA,MAEA,OAGA,kBACA,SAEA,QAIA,kBACA,SAEA,SAIA,wBACA,YAEA,SAIA,+BACA,eAEA,YAIA,IACA,OAEAC,IACA,MACA,oBAGA,wBACA,YAEA,OAIA,mBACA,SAEA,oCAIA,mBACA,SAEA,mBAIA,uBACA,YAEA,QAIA,wBACA,YAEA,QAIA,6BACA,YAEA,mBAIA,8BACA,YAEA,cAEA,QAGA,wBACA,YAEA,MAEA,QAGA,2BACA,YAEA,gBACA,kBAEA,OAGA,IACA,SAEAC,IACA,MACA,oDAGA,4BACA,YAEA,WAEA,QAGA,4BACA,YAEA,QAEA,QAGA,mCACA,eAEA,YAIA,iBACA,SAEA,SAIA,yBACA,YAEA,SAIA,yBACA,YAEA,SAIA,iBACA,SAEA,QAIA,WACA,OAEA,aAIA,IACA,MAEAC,IACA,KACA,qBAGA,2BACA,YAEA,0BACA,2CAIA,2BACA,YAEA,0BAIA,qBACA,SAEA,yBACA,kCACA,uDAIA,sBACA,SAEA,OAIA,oBACA,SAEA,mBACA,uBAIA,gBACA,SAEA,MACA,OACA,QACA,SACA,aAIA,kBACA,YAEA,MACA,OACA,QACA,YAIA,4BACA,YAEA,wBAIA,0BACA,YAEA,QAIA,mBACA,SAEA,YAIA,IACA,MACA,KACA,KACA,KACA,MAEA,aACA,iBACA,eACA,+BACA,WACA,KACA,kFACA,KACA,aAGAC,IACA,KACA,wCAGA,mBACA,SAEA,4GACA,0bACA,01BAIA,2BACA,YAEA,wCAIA,2BACA,YAEA,sUAIA,2BACA,YAEA,4CACA,uDAIA,2BACA,YAEA,kDAIA,2BACA,YAEA,mCAIA,mCACA,eAEA,SAIA,yBACA,YAEA,MACA,QAEA,OAGA,mBACA,SAEA,MACA,QAEA,OAGA,8BACA,YAEA,SACA,WAEA,OAGA,wBACA,YAEA,OAEA,OAGA,mCACA,eAEA,SACA,qBAEA,OAGA,IACA,MACA,KACA;AAGAC,IACA,MACA,YAGA,mBACA,WAIAC,IACA,MACA,kBAGA,sBACA,YAEA,OAIA,+BACA,YAEA,WAIA,4BACA,YAEA,OAIA,IACA,OAEAC,IACA,KACA,2CAGA,iBACA,SAEA,QAIA,2BACA,YAEA,WAIA,mBACA,SAEA,OAIA,6BACA,YAEA,OAIA,6BACA,YAEA,OAIA,IACA,OAEAC,IACA,MACA,yBAGA,mBACA,SAEA,WAIA,4BACA,YAEA,QAKAC,IACA,KACA,uDAGA,6BACA,YAEA,cAIA,0BACA,YAEA,WAIA,oBACA,SAEA,WAIA,8BACA,YAEA,sBAIA,qBACA,SAEA,wCACA,qDAIA,4BACA,YAEA,wBAIA,sBACA,SAEA,wBAIA,6BACA,YAEA,2BACA,sCAIA,mBACA,SAEA,MACA,cAIA,2BACA,YAEA,OAIA,KACA,KACA,KACA,KACA,KACA,MAEA,4YACA,2CACA,wBACA,kHACA,sBACA,KACA,KACA,KACA,aAGAC,IACA,KACA,qBAGA,2BACA,YAEA,0BACA,2CAIA,2BACA,YAEA,0BAIA,qBACA,SAEA,yBACA,kCACA,uDAIA,sBACA,SAEA,OAIA,oBACA,SAEA,mBACA,uBAIA,gBACA,SAEA,MACA,OACA,QACA,SACA,aAIA,kBACA,YAEA,MACA,OACA,QACA,YAIA,4BACA,YAEA,wBAIA,0BACA,YAEA,QAIA,mBACA,SAEA,YAIA,IACA,MACA,KACA,KACA,KACA,MAEA,aACA,oCACA,+BACA,kDACA,eACA,KACA,4GACA,+DACA,aAGAC,IACA,IACA,gBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,oBAGA,wBACA,YAEA,aAEA,UAGA,sBACA,YAEA,cAIA,qBACA,SAEA,kBAIA,IACA,OAEAC,IACA,KACA,wDAGA,2BACA,YAEA,mBAIA,2BACA,YAEA,SAIA,2BACA,YAEA,qBAIA,wBACA,YAEA,6FACA,+KACA,yMAIA,2BACA,YAEA,0aACA,iqBACA,iwBACA,4wBAIA,2BACA,YAEA,4HACA,gKACA,4KAIA,2BACA,YAEA,yCAIA,wBACA,YAEA,+BAIA,2BACA,YAEA,iBAIA,IACA,OAEAC,IACA,MACA,6BAGA,qBACA,SAEA,YAIA,mBACA,SAEA,OAIA,6BACA,YAEA,UAIA,IACA,MACA,SAEAC,IACA,MACA,oBAGA,2BACA,YAEA,mBAIA,mBACA,SAEA,sBAIA,gCACA,eAEA,OAIA,IACA,OAEAC,IACA,MACA,kBAGA,6BACA,YAEA,mBAEA,QAGA,4BACA,YAEA,YAIA,KAEAC,IACA,MACA,oCAEA,KACA,KACA,KAEAC,IACA,MACA,gBAGA,2BACA,cAIAC,IACA,IACA,gBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,uBAGA,2BACA,YAEA,OAIA,wBACA,YAEA,OAIA,2BACA,YAEA,OAIA,IACA,OAEAC,IACA,KACA,uCAGA,2BACA,YAEA,kCACA,2CAIA,6BACA,YAEA,sDACA,mEAIA,wBACA,YAEA,MACA,UAIA,2BACA,YAEA,MACA,eAIA,2BACA,YAEA,aAIA,mCACA,eAEA,QAIA,0BACA,YAEA,YAIA,kBACA,SAEA,gBAIA,qBACA,SAEA,cACA,6BAIA,mBACA,SAEA,kCACA,0EAEA,OAGA,IACA,MACA,0BAEAC,IACA,MACA,oBAGA,qBACA,SAEA,kDAIA,mBACA,SAEA,wBAKAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,IACA,mCAGA,yCACA,eAEA,aAIA,4BACA,YAEA,OAIA,IACA,KACA,KACA,KACA,KACA,MAEA,oeACA,6CACA,YACA,YACA,KACA,KACA,KACA,KACA,cAGAC,IACA,MACA,kBAGA,+BACA,eAEA,QAIA,6BACA,YAEA,uBAIA,+BACA,eAEA,QAIA,IACA,OAEAC,IACA,MACA,mBAGA,wBACA,YAEA,kDAEA,QAGA,6BACA,YAEA,8CAIA,KAEAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,0BAGA,2BACA,YAEA,aAIA,2BACA,YAEA,WAIA,wBACA,YAEA,SAIA,IACA,KACA,oBAEAC,IACA,KACA,gBAGA,2BACA,YAEA,aAIA,2BACA,YAEA,OAIA,IACA,OAEAC,IACA,MACA,4CAGA,yBACA,YAEA,OAIA,0BACA,YAEA,UAIA,2BACA,YAEA,aAIA,IACA,OAEAC,IACA,MACA,iBAGA,mBACA,WAIAC,IACA,MACA,gBAGA,oBACA,SAEA,4BAIA,wBACA,SAEA,kCAIA,gCACA,YAEA,SAEA,SAGA,uBACA,YAEA,cAIA,IACA,SACA,OACA,SAGAC,IACA,MACA,2DAGA,mBACA,SAEA,uCAIA,2BACA,YAEA,uCAIA,2BACA,YAEA,QAIA,qCACA,eAEA,wBAIA,mCACA,eAEA,QAIA,6CACA,kBAEA,wBAIA,qCACA,eAEA,4EAIA,2BACA,YAEA,uBAIA,2BACA,YAEA,OAIA,KACA,KACA,qDAEAC,IACA,MACA,iBAGA,8BACA,cAIAC,IACA,MACA,kBAGA,uBACA,UAGA,IACA,OAEAC,IACA,MACA,gBAGA,wBACA,SAEA,+BAIA,uBACA,SAEA,8BACA,gDAIA,oBACA,SAEA,aACA,oBAIA,sCACA,eAEA,uBAIA,kBACA,SAEA,qBAIA,IACA,MACA,KACA,KACA,KACA,MAEA,wKACA,0DACA,WACA,WACA,KACA,KACA,KACA,KACA,mBAGAC,IACA,MACA,oBAGA,mCACA,eAEA,QAEA,OAGA,2BACA,YAEA,OAIA,sCACA,kBAEA,OAIA,2BACA,YAEA,KAEA,OAGA,IACA,OAEAC,IACA,MACA,kBAGA,2BACA,YAEA,UAIA,iCACA,YAEA,mBAIA,uBACA,SAEA,UAIA,IACA,OAEAC,IACA,MACA,kBAGA,2BACA,YAEA,oBACA,6CAIA,0BACA,eAEA,MACA,cAIA,IACA,OAEAC,IACA,MACA,eAGA,2BACA,aAGA,IACA,KACA,KACA,KACA,KACA,MAEA,0CACA,iCAGAC,IACA,MACA,eAGA,oCACA,gBAGA,IACA,OAEAC,IACA,MACA,gBAGA,mBACA,UAGA,KAEAC,IACA,MACA,kBAGA,sBACA,YAEA,OAIA,6BACA,YAEA,WAIA,oCACA,eAEA,UAIA,IACA,OAEAC,IACA,MACA,kBAGA,mCACA,eAEA,cAKAC,IACA,KACA,kFAGA,0BACA,YAEA,cAIA,sBACA,YAEA,SAIA,wBACA,YAEA,UAIA,6BACA,YAEA,WAIA,6BACA,YAEA,WAIA,wBACA,YAEA,iCAIA,0BACA,YAEA,4BAIA,8BACA,eAEA,YAIA,8BACA,eAEA,QAIA,IACA,OAEAC,IACA,MACA,8BAGA,4BACA,YAEA,WAIA,uBACA,SAEA,gBAIA,uBACA,SAEA,mBACA,0BAIA,mBACA,SAEA,UAEA,OAGA,yBACA,SAEA,mBACA,8BAIA,IACA,OAEAC,IACA,MACA,gBAGA,wBACA,WAIAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,eAGA,mCACA,gBAGA,IACA,OAEAC,IACA,MACA,iBAGA,sCACA,iBAIAC,IACA,IACA,iBAGA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,mCACA,eAEA,+GAEA,KACA,KACA,gBAGA,6BACA,YAEA,+GAEA,KACA,KACA,aAGA,iCACA,eAEA,KAEA,KACA,KACA,gBAGA,uBACA,WAEA,KAEA,KACA,KACA,aAGA,yBACA,YAEA,MAEA,KACA,KACA,aAGA,sCACA,eAEA,UAEA,KACA,KACA,gBAGA,sBACA,SAEA,UAEA,KACA,KACA,UAGA,2CACA,kBAEA,mBAEA,KACA,KACA,mBAGA,IACA,OAEAC,IACA,KACA,+BAGA,yBACA,SAEA,kBAIA,4BACA,YAEA,WAIA,yBACA,YAEA,QAIA,wBACA,YAEA,SAKAC,IACA,MACA,iBAEA,KACA,KACA,KACA,KACA,KACA,MAEA,gCACA,aACA,KACA,KACA,KACA,KACA,KACA,KACA,cAGAC,IACA,MACA,+BAGA,gCACA,eAEA,sCAEA,UAGA,6BACA,YAEA,2BAIA,uBACA,SAEA,cAIA,uBACA,SAEA,eAIA,IACA,OAEAC,IACA,KACA,yBAGA,gCACA,YAEA,WAIA,uCACA,eAEA,aAIA,KACA,KACA,KACA,KACA,KACA,MAEA,WACA,gCACA,eACA,eACA,YACA,eACA,+CACA,KACA,kBAGAC,IACA,MACA,iCAGA,oBACA,YAEA,SAIA,2BACA,YAEA,WAIA,8BACA,eAEA,OAIA,qCACA,eAEA,WAIA,gCACA,YAEA,WAIA,iBACA,SAEA,UAIA,IACA,OAEAC,IACA,MACA,gBAGA,mBACA,UAGA,IACA,SAEAC,IACA,MACA,mBAGA,mCACA,eAEA,WAIA,iBACA,SAEA,KAEA,KACA,KACA,YAGA,WACA,WAEA,QAEA,KACA,KACA,cAGA,KACA,KACA,wBACA,UAEAC,IACA,MACA,iBAGA,mCACA,eAEA,WAIA,mCACA,eAEA,QAKAC,IACA,MACA,mBAGA,gBACA,SAEA,oBAIA,gBACA,SAEA,aAIA,qBACA,SAEA,gCAIA,0BACA,YAEA,QAIA,KAEAC,IACA,MACA,kBAGA,mBACA,SAEA,mBAIA,2BACA,YAEA,QAIA,mBACA,SAEA,eAKAC,IACA,MACA,eAGA,2BACA,WACA,KACA,QAGA,KAEAC,IACA,MACA,eAGA,mBACA,WAIAC,IACA,MACA,sCAGA,mBACA,SAEA,WAIA,mBACA,SAEA,UAIA,2BACA,YAEA,WAKAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,mBAGA,6BACA,YAEA,WAIA,4BACA,YAEA,OAIA,IACA,MACA,KACA,SAGAC,IACA,MACA,gBAGA,mBACA,SAEA,YAKAC,IACA,MACA,aAEA,KACA,KACA,KACA,KACA,KACA,MAEA,YAGAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,iBAGA,mCACA,iBAIAC,IACA,MACA,eAGA,mCACA,iBAIAC,IACA,KACA,uCAGA,sBACA,YAEA,OAIA,gCACA,YAEA,cAIA,4BACA,YAEA,KAEA,OAGA,IACA,OAEAC,IACA,MACA,kBAGA,gCACA,YAEA,kBAIA,8BACA,YAEA,qCAIA,wBACA,YAEA,MACA,OACA,QACA,YAIA,wBACA,YAEA,SACA,sCAIA,IACA,SACA,KACA,SAGAC,IACA,MACA,kBAEAC,IACA,MACA,4BAGA,mBACA,SAEA,aAIA,mBACA,SAEA,QAKAC,IACA,MACA,gBAGA,mCACA,eAEA,QAIA,mBACA,SAEA,KAEA,SAGA,gCACA,eAEA,cAIA,IACA,UAEAC,IACA,MACA,mBAGA,2BACA,cAIAC,IACA,MACA,mBAGA,mBACA,SAEA,wBAIA,mBACA,SAEA,oBAIA,mBACA,SAEA,QAKAC,IACA,KACA,4BAGA,mCACA,eAEA,gCAEA,QACA,SAGA,mCACA,eAEA,YAEA,MACA,SAGA,2BACA,YAEA,WAEA,MACA,SAGA,wBACA,YAEA,SAIA;AAEAC,IACA,IACA,gBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,MACA,iBAEAC,IACA,MACA,wCAGA,oBACA,YAEA,SAIA,uBACA,YAEA,eAIA,4BACA,YAEA,6BAIA,+BACA,YAEA,UAIA,uBACA,YAEA,QAIA,IACA,OAEAC,IACA,MACA,WAGA,4BACA,YAEA,UAIA,+BACA,YAEA,UAIA,+BACA,YAEA,UAIA,IACA,OAEAC,IACA,MACA,gBAGA,6BACA,YAEA,+DACA,2EAIA,kCACA,YAEA,4EACA,6GAIA,wBACA,SAEA,0IACA,sLAIA,IACA,OAEAC,IACA,MACA,WAGA,mBACA,SAEA,iDAIA,mBACA,SAEA,4BAIA,iBACA,SAEA,UAIA,IACA,OAEAC,IACA,IACA,gBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,QAEA,MAEA,4kBACA,KACA,oCACA,iBACA,yCAGAC,IACA,MACA,mBAGA,mBACA,SAEA,UAIA,2BACA,YAEA,UAEA,QAGA,mBACA,SAEA,SAEA,QAGA,KAEAC,IACA,MACA,gBAGA,qCACA,gBAGA,IACA,QAEAC,IACA,KACA,oFAGA,6BACA,YAEA,cAIA,0BACA,YAEA,WAIA,oBACA,SAEA,WAIA,8BACA,YAEA,sBAIA,qBACA,SAEA,wCACA,qDAIA,4BACA,YAEA,wBAIA,sBACA,SAEA,wBAIA,6BACA,YAEA,2BACA,sCAIA,mBACA,SAEA,MACA,cAIA,2BACA,YAEA,OAIA,KACA,KACA,KACA,KACA,KACA,MAEA,cACA,2CACA,wBACA,kHACA,sBACA,KACA,KACA,KACA,aAGAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,KACA,kBAGA,mBACA,UAGA,IACA,OAEAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,IACA,iBAGA,2BACA,aACA,KACA,KACA,KACA,aAGA,IACA,KACA,KACA,KACA,KACA,OAEAC,IACA,KACA,0CAGA,mBACA,SAEA,YAIA,yBACA,YAEA,+BAIA,+BACA,YAEA,mDAIA,eACA,SAEA,QAIA,oBACA,SAEA,QAIA,kCACA,YAEA,kCAIA,oCACA,eAEA,eAIA,+BACA,YAEA,wBAIA,sBACA,SAEA,UAEA,OAGA,IACA,MACA,KACA,SAGAC,IACA,MACA,qBAGA,mBACA,SAEA,YAKAC,IACA,MACA,gBAGA,2BACA,cAIAC,IACA,MACA,kBAGA,sBACA,SAEA,OAIA,iBACA,SAEA,OAIA,WACA,MAEA,YAKAC,IACA,MACA,kBAGA,4BACA,YAEA,oBAIA,4BACA,YAEA,aAIA,IACA,OAEAC,IACA,MACA,gBAGA,wCACA,gBAGA,IACA,MACA,KACA,KACA,KACA,UAEAC,IACA,KACA,gDAGA,wBACA,YAEA,SAIA,2BACA,YAEA,+BAIA,qBACA,SAEA,YAIA,6BACA,YAEA,YAIA,IACA,OAEAC,IACA,MACA,gBAGA,oBACA,SAEA,UAIA,wBACA,YAEA,OAIA,IACA,OAEAC,IACA,MACA,+EAGA,2BACA,YAEA,cAIA,2BACA,YAEA,OAIA,6BACA,YAEA,YAIA,2BACA,SAEA,8GAIA,6BACA,YAEA,2CAIA,yBACA,SAEA,+CAIA,+BACA,YAEA,cAIA,yBACA,SAEA,aACA,kBAIA,oBACA,SAEA,QAIA,0BACA,YAEA,QAIA,IACA,OAEAC,OACA,MACA,WAGA,wBACA,iBnFyvGM,SAAS7/B,EAAQD,EAASO,GAEhC,YAuBA,SAASw/B,GAAgBtpB,EAAUtC,GAAe,KAAMsC,YAAoBtC,IAAgB,KAAM,IAAIrQ,WAAU,qCApBhH1C,OAAOC,eAAerB,EAAS,cAC7Be,UAGF,IAAIi/B,GAAe,WAAc,QAASlpB,GAAiBxG,EAAQyG,GAAS,IAAK,GAAIrW,GAAI,EAAGA,EAAIqW,EAAMjO,OAAQpI,IAAK,CAAE,GAAIsW,GAAaD,EAAMrW,EAAIsW,GAAWzV,WAAayV,EAAWzV,eAAqByV,EAAW1V,gBAAyB,SAAW0V,KAAYA,EAAWxB,aAAiBpU,OAAOC,eAAeiP,EAAQ0G,EAAWtT,IAAKsT,IAAiB,MAAO,UAAU7C,EAAa8C,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiB3C,EAAYrS,UAAWmV,GAAiBC,GAAaJ,EAAiB3C,EAAa+C,GAAqB/C,MoF/3WhiB8rB,EAAA1/B,EAAA,IACA2/B,EAAA3/B,EAAA,IACA4/B,EAAA5/B,EAAA,IACA6/B,EAAA7/B,EAAA,IACA8/B,EAAA9/B,EAAA,IACA2V,EAAA3V,EAAA,GACA+/B,EAAA//B,EAAA,IAEMggC,EpFy4WU,WoFx4Wd,QAAAA,KAAcR,EAAA1/B,KAAAkgC,GACZlgC,KAAKY,KAAO,OACZZ,KAAK4V,aAALgqB,EAAAhqB,aACA5V,KAAK8V,OAAL+pB,EAAA/pB,OACA9V,KAAK+V,MAAL+pB,EAAA/pB,MACA/V,KAAKgW,QAAL+pB,EAAA/pB,QACAhW,KAAKgI,OAALg4B,EAAAh4B,OACAhI,KAAKwC,QAALqT,EAAArT,QACAxC,KAAK8I,MAALm3B,EAAAn3B,MpFq5WF,MAPA62B,GAAaO,IACX78B,IAAK,UACL3C,MAAO,WoF74WP,MAAOV,MAAKY,SpFk5WPs/B,IAGTvgC,GAAQ2B,QoFj5WO4+B,EpFk5WftgC,EAAOD,QAAUA,EAAiB2B","file":"v.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"v\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"v\"] = factory();\n\telse\n\t\troot[\"v\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"v\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"v\"] = factory();\n\telse\n\t\troot[\"v\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 83);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar store      = __webpack_require__(31)('wks')\n  , uid        = __webpack_require__(33)\n  , Symbol     = __webpack_require__(0).Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pattern = undefined;\n\nvar _check = __webpack_require__(22);\n\nvar _express = __webpack_require__(40);\n\n/**\n * Check if value is match RegExp. It's an alias now for check()\n *\n * @param {string} expression\n * @returns {function}\n */\nvar pattern = exports.pattern = function pattern(expression) {\n  return (0, _check.check)((0, _express.express)(expression));\n};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(15)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar dP         = __webpack_require__(9)\n  , createDesc = __webpack_require__(29);\nmodule.exports = __webpack_require__(4) ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(16);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\nmodule.exports = {};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar anObject       = __webpack_require__(6)\n  , IE8_DOM_DEFINE = __webpack_require__(55)\n  , toPrimitive    = __webpack_require__(70)\n  , dP             = Object.defineProperty;\n\nexports.f = __webpack_require__(4) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ exports[\"k\"] = get_phone_code;\n/* harmony export (immutable) */ exports[\"l\"] = get_national_number_pattern;\n/* harmony export (immutable) */ exports[\"a\"] = get_formats;\n/* unused harmony export get_national_prefix */\n/* unused harmony export get_national_prefix_formatting_rule */\n/* harmony export (immutable) */ exports[\"g\"] = get_national_prefix_for_parsing;\n/* harmony export (immutable) */ exports[\"m\"] = get_national_prefix_transform_rule;\n/* unused harmony export get_national_prefix_is_optional_when_formatting */\n/* harmony export (immutable) */ exports[\"n\"] = get_leading_digits;\n/* harmony export (immutable) */ exports[\"d\"] = get_format_pattern;\n/* harmony export (immutable) */ exports[\"j\"] = get_format_format;\n/* harmony export (immutable) */ exports[\"c\"] = get_format_leading_digits_patterns;\n/* harmony export (immutable) */ exports[\"i\"] = get_format_national_prefix_formatting_rule;\n/* harmony export (immutable) */ exports[\"e\"] = get_format_national_prefix_is_optional_when_formatting;\n/* harmony export (immutable) */ exports[\"h\"] = get_format_national_prefix_is_mandatory_when_formatting;\n/* harmony export (immutable) */ exports[\"b\"] = get_format_international_format;\n/* harmony export (immutable) */ exports[\"f\"] = get_metadata_by_country_phone_code;\n/* harmony export (immutable) */ exports[\"y\"] = get_types;\n/* harmony export (immutable) */ exports[\"p\"] = get_type_fixed_line;\n/* harmony export (immutable) */ exports[\"o\"] = get_type_mobile;\n/* harmony export (immutable) */ exports[\"q\"] = get_type_toll_free;\n/* harmony export (immutable) */ exports[\"r\"] = get_type_premium_rate;\n/* harmony export (immutable) */ exports[\"s\"] = get_type_personal_number;\n/* harmony export (immutable) */ exports[\"t\"] = get_type_voice_mail;\n/* harmony export (immutable) */ exports[\"u\"] = get_type_uan;\n/* harmony export (immutable) */ exports[\"v\"] = get_type_pager;\n/* harmony export (immutable) */ exports[\"w\"] = get_type_voip;\n/* harmony export (immutable) */ exports[\"x\"] = get_type_shared_cost;\nfunction get_phone_code(country_metadata) {\n\treturn country_metadata[0];\n}\n\nfunction get_national_number_pattern(country_metadata) {\n\treturn country_metadata[1];\n}\n\nfunction get_formats(country_metadata) {\n\treturn country_metadata[2] || [];\n}\n\nfunction get_national_prefix(country_metadata) {\n\treturn country_metadata[3];\n}\n\nfunction get_national_prefix_formatting_rule(country_metadata) {\n\treturn country_metadata[4];\n}\n\nfunction get_national_prefix_for_parsing(country_metadata) {\n\tvar national_prefix_for_parsing = country_metadata[5];\n\n\t// If `national_prefix_for_parsing` is not set explicitly,\n\t// then infer it from `national_prefix` (if any)\n\tif (!national_prefix_for_parsing) {\n\t\tnational_prefix_for_parsing = get_national_prefix(country_metadata);\n\t}\n\n\treturn national_prefix_for_parsing;\n}\n\nfunction get_national_prefix_transform_rule(country_metadata) {\n\treturn country_metadata[6];\n}\n\nfunction get_national_prefix_is_optional_when_formatting(country_metadata) {\n\treturn country_metadata[7];\n}\n\nfunction get_leading_digits(country_metadata) {\n\treturn country_metadata[8];\n}\n\nfunction get_format_pattern(format_array) {\n\treturn format_array[0];\n}\n\nfunction get_format_format(format_array) {\n\treturn format_array[1];\n}\n\nfunction get_format_leading_digits_patterns(format_array) {\n\treturn format_array[2] || [];\n}\n\nfunction get_format_national_prefix_formatting_rule(format_array, country_metadata) {\n\treturn format_array[3] || get_national_prefix_formatting_rule(country_metadata);\n}\n\nfunction get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata) {\n\treturn format_array[4] || get_national_prefix_is_optional_when_formatting(country_metadata);\n}\n\nfunction get_format_national_prefix_is_mandatory_when_formatting(format_array, country_metadata) {\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\treturn get_format_national_prefix_formatting_rule(format_array, country_metadata) && !get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata);\n}\n\nfunction get_format_international_format(format_array) {\n\treturn format_array[5] || get_format_format(format_array);\n}\n\n// Formatting information for regions which share\n// a country calling code is contained by only one region\n// for performance reasons. For example, for NANPA region\n// (\"North American Numbering Plan Administration\",\n//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n// it will be contained in the metadata for `US`.\nfunction get_metadata_by_country_phone_code(country_phone_code, metadata) {\n\tvar country_code = metadata.country_phone_code_to_countries[country_phone_code][0];\n\treturn metadata.countries[country_code];\n}\n\nfunction get_types(country_metadata) {\n\treturn country_metadata[9];\n}\n\nfunction get_type(country_metadata, index) {\n\treturn get_types(country_metadata) ? get_types(country_metadata)[index] : undefined;\n}\n\nfunction get_type_fixed_line(country_metadata) {\n\treturn get_type(country_metadata, 0);\n}\n\nfunction get_type_mobile(country_metadata) {\n\treturn get_type(country_metadata, 1);\n}\n\nfunction get_type_toll_free(country_metadata) {\n\treturn get_type(country_metadata, 2);\n}\n\nfunction get_type_premium_rate(country_metadata) {\n\treturn get_type(country_metadata, 3);\n}\n\nfunction get_type_personal_number(country_metadata) {\n\treturn get_type(country_metadata, 4);\n}\n\nfunction get_type_voice_mail(country_metadata) {\n\treturn get_type(country_metadata, 5);\n}\n\nfunction get_type_uan(country_metadata) {\n\treturn get_type(country_metadata, 6);\n}\n\nfunction get_type_pager(country_metadata) {\n\treturn get_type(country_metadata, 7);\n}\n\nfunction get_type_voip(country_metadata) {\n\treturn get_type(country_metadata, 8);\n}\n\nfunction get_type_shared_cost(country_metadata) {\n\treturn get_type(country_metadata, 9);\n}\n//# sourceMappingURL=metadata.js.map\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__metadata__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__format__ = __webpack_require__(21);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"c\", function() { return PLUS_CHARS; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"d\", function() { return VALID_DIGITS; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"b\", function() { return VALID_PUNCTUATION; });\n/* harmony export (immutable) */ exports[\"a\"] = parse;\n/* unused harmony export normalize */\n/* unused harmony export replace_characters */\n/* unused harmony export is_viable_phone_number */\n/* harmony export (immutable) */ exports[\"e\"] = extract_formatted_phone_number;\n/* harmony export (immutable) */ exports[\"f\"] = parse_phone_number;\n/* harmony export (immutable) */ exports[\"g\"] = parse_phone_number_and_country_phone_code;\n/* unused harmony export strip_national_prefix */\n/* harmony export (immutable) */ exports[\"h\"] = find_country_code;\n/* harmony export (immutable) */ exports[\"i\"] = get_number_type;\n/* unused harmony export is_of_type */\n/* unused harmony export is_national_prefix_required */\n\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\n\n\n\n\n\n\nvar PLUS_CHARS = '+\\uFF0B';\n\n// Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\nvar VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9';\n\n// Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. It also includes the letter 'x' as that is found as a\n// placeholder for carrier information in some phone numbers. Full-width\n// variants are also present.\nvar VALID_PUNCTUATION = '-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000' + '()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E';\n\n//  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  Note VALID_PUNCTUATION starts with a -, so must be the first in the range.\n//  (wtf did they mean by saying that; probably nothing)\n//\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}';\n//\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\nvar VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\n// The combined regular expression for valid phone numbers:\n//\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp(\n// Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' +\n// Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER +\n// screw phone number extensions\n// '(?:' + EXTN_PATTERNS_FOR_PARSING + ')?' +\n'$', 'i');\n\n// This consists of the plus symbol, digits, and arabic-indic digits.\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']');\n\n// Regular expression of trailing characters that we want to remove.\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + ']+$');\n\nvar LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+');\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\nvar DIGIT_MAPPINGS = {\n\t'0': '0',\n\t'1': '1',\n\t'2': '2',\n\t'3': '3',\n\t'4': '4',\n\t'5': '5',\n\t'6': '6',\n\t'7': '7',\n\t'8': '8',\n\t'9': '9',\n\t'\\uFF10': '0', // Fullwidth digit 0\n\t'\\uFF11': '1', // Fullwidth digit 1\n\t'\\uFF12': '2', // Fullwidth digit 2\n\t'\\uFF13': '3', // Fullwidth digit 3\n\t'\\uFF14': '4', // Fullwidth digit 4\n\t'\\uFF15': '5', // Fullwidth digit 5\n\t'\\uFF16': '6', // Fullwidth digit 6\n\t'\\uFF17': '7', // Fullwidth digit 7\n\t'\\uFF18': '8', // Fullwidth digit 8\n\t'\\uFF19': '9', // Fullwidth digit 9\n\t'\\u0660': '0', // Arabic-indic digit 0\n\t'\\u0661': '1', // Arabic-indic digit 1\n\t'\\u0662': '2', // Arabic-indic digit 2\n\t'\\u0663': '3', // Arabic-indic digit 3\n\t'\\u0664': '4', // Arabic-indic digit 4\n\t'\\u0665': '5', // Arabic-indic digit 5\n\t'\\u0666': '6', // Arabic-indic digit 6\n\t'\\u0667': '7', // Arabic-indic digit 7\n\t'\\u0668': '8', // Arabic-indic digit 8\n\t'\\u0669': '9', // Arabic-indic digit 9\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\n\t'\\u06F9': '9' // Eastern-Arabic digit 9\n};\n\n// The maximum length of the country calling code.\nvar MAX_LENGTH_COUNTRY_CODE = 3;\n\n// The minimum length of the national significant number.\nvar MIN_LENGTH_FOR_NSN = 2;\n\n// The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\nvar MAX_LENGTH_FOR_NSN = 17;\n\n// We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\nvar MAX_INPUT_STRING_LENGTH = 250;\n\nvar default_options = {\n\tcountry: {}\n};\n\n// `options`:\n//  {\n//    country:\n//    {\n//      restrict - (a two-letter country code)\n//                 the phone number must be in this country\n//\n//      default - (a two-letter country code)\n//                default country to use for phone number parsing and validation\n//                (if no country code could be derived from the phone number)\n//    }\n//  }\n//\n// Returns `{ country, number }`\nfunction parse(text, options) {\n\tif (typeof options === 'string') {\n\t\tvar restrict_to_country = options;\n\n\t\toptions = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, default_options, {\n\n\t\t\tcountry: {\n\t\t\t\trestrict: restrict_to_country\n\t\t\t}\n\t\t});\n\t}\n\n\tif (!options) {\n\t\toptions = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, default_options);\n\t}\n\n\t// Validate country codes\n\n\tif (!this.metadata.countries[options.country.default]) {\n\t\toptions = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, options);\n\t\tdelete options.country.default;\n\t}\n\n\tif (!this.metadata.countries[options.country.restrict]) {\n\t\toptions = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, options);\n\t\tdelete options.country.restrict;\n\t}\n\n\t// Parse the phone number\n\n\tvar formatted_phone_number = extract_formatted_phone_number(text);\n\n\t// If the phone number is not viable, then abort.\n\tif (!is_viable_phone_number(formatted_phone_number)) {\n\t\treturn {};\n\t}\n\n\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(formatted_phone_number, this.metadata),\n\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t    number = _parse_phone_number_a.number;\n\n\t// Maybe invalid country phone code encountered\n\n\n\tif (!country_phone_code && !number) {\n\t\treturn {};\n\t}\n\n\tvar country = void 0;\n\tvar country_metadata = void 0;\n\n\t// Whether the phone number is formatted as an international phone number\n\tvar is_international = false;\n\n\tif (country_phone_code) {\n\t\tis_international = true;\n\n\t\t// Check country restriction\n\t\tif (options.country.restrict && country_phone_code !== __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"k\" /* get_phone_code */])(this.metadata.countries[options.country.restrict])) {\n\t\t\treturn {};\n\t\t}\n\n\t\tcountry_metadata = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"f\" /* get_metadata_by_country_phone_code */])(country_phone_code, this.metadata);\n\n\t\t// `country` will be set later,\n\t\t// because, for example, for NANPA countries\n\t\t// there are several countries corresponding\n\t\t// to the same `1` country phone code.\n\t\t// Therefore, to reliably determine the exact country,\n\t\t// national (significant) number should be parsed first.\n\t} else if (options.country.default || options.country.restrict) {\n\t\tcountry = options.country.default || options.country.restrict;\n\t\tcountry_metadata = this.metadata.countries[country];\n\n\t\tnumber = normalize(text);\n\t}\n\n\tif (!country_metadata) {\n\t\treturn {};\n\t}\n\n\tvar national_number = strip_national_prefix(number, country_metadata);\n\n\tvar did_have_national_prefix = national_number !== number;\n\n\tif (!is_international && !did_have_national_prefix && is_national_prefix_required(national_number, country_metadata)) {\n\t\treturn {};\n\t}\n\n\t// Sometimes there are several countries\n\t// corresponding to the same country phone code\n\t// (e.g. NANPA countries all having `1` country phone code).\n\t// Therefore, to reliably determine the exact country,\n\t// national (significant) number should have been parsed first.\n\t//\n\tif (!country) {\n\t\tcountry = find_country_code(country_phone_code, national_number, this.metadata);\n\n\t\t// Just in case there's a bug in Google's metadata\n\t\t/* istanbul ignore if */\n\t\tif (!country) {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\t// Validate national (significant) number length.\n\t//\n\t// A sidenote:\n\t//\n\t// They say that sometimes national (significant) numbers\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n\t// Such numbers will just be discarded.\n\t//\n\tif (national_number.length > MAX_LENGTH_FOR_NSN) {\n\t\treturn {};\n\t}\n\n\tvar national_number_rule = new RegExp(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"l\" /* get_national_number_pattern */])(country_metadata));\n\n\tif (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common__[\"a\" /* matches_entirely */])(national_number, national_number_rule)) {\n\t\treturn {};\n\t}\n\n\treturn { country: country, phone: national_number };\n}\n\n// Normalizes a string of characters representing a phone number.\n// This converts wide-ascii and arabic-indic numerals to European numerals,\n// and strips punctuation and alpha characters.\nfunction normalize(number) {\n\treturn replace_characters(number, DIGIT_MAPPINGS);\n}\n\n// For any character not being part of `replacements`\n// it is removed from the phone number.\nfunction replace_characters(text, replacements) {\n\tvar replaced = '';\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(text), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar character = _step.value;\n\n\t\t\tvar replacement = replacements[character.toUpperCase()];\n\n\t\t\tif (replacement !== undefined) {\n\t\t\t\treplaced += replacement;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn replaced;\n}\n\n// Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\nfunction is_viable_phone_number(number) {\n\treturn number.length >= MIN_LENGTH_FOR_NSN && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common__[\"a\" /* matches_entirely */])(number, VALID_PHONE_NUMBER_PATTERN);\n}\n\nfunction extract_formatted_phone_number(text) {\n\tif (!text || text.length > MAX_INPUT_STRING_LENGTH) {\n\t\treturn '';\n\t}\n\n\t// Attempt to extract a possible number from the string passed in\n\n\tvar starts_at = text.search(PHONE_NUMBER_START_PATTERN);\n\n\tif (starts_at < 0) {\n\t\treturn '';\n\t}\n\n\treturn text\n\t// Trim everything to the left of the phone number\n\t.slice(starts_at)\n\t// Remove trailing non-numerical characters\n\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n\n// Parses a formatted phone number.\nfunction parse_phone_number(number) {\n\tif (!number) {\n\t\treturn '';\n\t}\n\n\tvar is_international = LEADING_PLUS_CHARS_PATTERN.test(number);\n\n\t// Remove non-digits\n\t// (and strip the possible leading '+')\n\tnumber = normalize(number);\n\n\tif (is_international) {\n\t\treturn '+' + number;\n\t}\n\n\treturn number;\n}\n\n// Parses a formatted phone number\n// and returns `{ country_phone_code, number }`\n// where `number` is the national (significant) phone number.\n//\n// (aka `maybeExtractCountryPhoneCode`)\n//\nfunction parse_phone_number_and_country_phone_code(number, metadata) {\n\tnumber = parse_phone_number(number);\n\n\tif (!number) {\n\t\treturn {};\n\t}\n\n\t// If this is not an international phone number,\n\t// then don't extract country phone code.\n\tif (number[0] !== '+') {\n\t\treturn { number: number };\n\t}\n\n\t// Strip the leading '+' sign\n\tnumber = number.slice(1);\n\n\t// Fast abortion: country codes do not begin with a '0'\n\tif (number[0] === '0') {\n\t\treturn {};\n\t}\n\n\t// The thing with country phone codes\n\t// is that they are orthogonal to each other\n\t// i.e. there's no such country phone code A\n\t// for which country phone code B exists\n\t// where B starts with A.\n\t// Therefore, while scanning digits,\n\t// if a valid country code is found,\n\t// that means that it is the country code.\n\t//\n\tvar i = 1;\n\twhile (i <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n\t\tvar country_phone_code = number.slice(0, i);\n\n\t\tif (metadata.country_phone_code_to_countries[country_phone_code]) {\n\t\t\treturn { country_phone_code: country_phone_code, number: number.slice(i) };\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn {};\n}\n\n// Strips any national prefix (such as 0, 1) present in the number provided\nfunction strip_national_prefix(number, country_metadata) {\n\tvar national_prefix_for_parsing = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"g\" /* get_national_prefix_for_parsing */])(country_metadata);\n\n\tif (!number || !national_prefix_for_parsing) {\n\t\treturn number;\n\t}\n\n\t// Attempt to parse the first digits as a national prefix\n\tvar national_prefix_pattern = new RegExp('^(?:' + national_prefix_for_parsing + ')');\n\tvar national_prefix_matcher = national_prefix_pattern.exec(number);\n\n\t// If no national prefix is present in the phone number,\n\t// but if the national prefix is optional for this country,\n\t// then consider this phone number valid.\n\t//\n\t// Google's reference `libphonenumber` implementation\n\t// wouldn't recognize such phone numbers as valid,\n\t// but I think it would perfectly make sense\n\t// to consider such phone numbers as valid\n\t// because if a national phone number was originally\n\t// formatted without the national prefix\n\t// then it must be parseable back into the original national number.\n\t// In other words, `parse(format(number))`\n\t// must always be equal to `number`.\n\t//\n\tif (!national_prefix_matcher) {\n\t\treturn number;\n\t}\n\n\tvar national_prefix_transform_rule = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"m\" /* get_national_prefix_transform_rule */])(country_metadata);\n\n\tvar national_significant_number = void 0;\n\n\t// `national_prefix_for_parsing` capturing groups\n\t// (used only for really messy cases: Argentina, Brazil, Mexico, Somalia)\n\tvar any_groups_were_captured = national_prefix_matcher[national_prefix_matcher.length - 1];\n\n\t// If the national number tranformation is needed then do it\n\tif (national_prefix_transform_rule && any_groups_were_captured) {\n\t\tnational_significant_number = number.replace(national_prefix_pattern, national_prefix_transform_rule);\n\t}\n\t// Else, no transformation is necessary,\n\t// and just strip the national prefix.\n\telse {\n\t\t\tnational_significant_number = number.slice(national_prefix_matcher[0].length);\n\t\t}\n\n\t// Verify the parsed national (significant) number for this country\n\tvar national_number_rule = new RegExp(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"l\" /* get_national_number_pattern */])(country_metadata));\n\n\t// If the original number was viable, and the resultant number is not,\n\t// then prefer the original phone number.\n\tif (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common__[\"a\" /* matches_entirely */])(number, national_number_rule) && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common__[\"a\" /* matches_entirely */])(national_significant_number, national_number_rule)) {\n\t\treturn number;\n\t}\n\n\t// Return the parsed national (significant) number\n\treturn national_significant_number;\n}\n\nfunction find_country_code(country_phone_code, national_phone_number, metadata) {\n\t// Is always non-empty, because `country_phone_code` is always valid\n\tvar possible_countries = metadata.country_phone_code_to_countries[country_phone_code];\n\n\t// If there's just one country corresponding to the country code,\n\t// then just return it, without further phone number digits validation.\n\tif (possible_countries.length === 1) {\n\t\treturn possible_countries[0];\n\t}\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(possible_countries), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar country_code = _step2.value;\n\n\t\t\tvar country = metadata.countries[country_code];\n\n\t\t\t// Leading digits check would be the simplest one\n\t\t\tif (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"n\" /* get_leading_digits */])(country)) {\n\t\t\t\tif (national_phone_number && national_phone_number.search(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"n\" /* get_leading_digits */])(country)) === 0) {\n\t\t\t\t\treturn country_code;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Else perform full validation with all of those bulky\n\t\t\t// fixed-line/mobile/etc regular expressions.\n\t\t\telse if (get_number_type(national_phone_number, country)) {\n\t\t\t\t\treturn country_code;\n\t\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Finds out national phone number type (fixed line, mobile, etc)\nfunction get_number_type(national_number, country_metadata) {\n\t// Is this national number even valid for this country\n\tif (!is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"l\" /* get_national_number_pattern */])(country_metadata))) {\n\t\treturn;\n\t}\n\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"o\" /* get_type_mobile */])(country_metadata))) {\n\t\t// Because duplicate regular expressions are removed\n\t\t// to reduce metadata size, if there's no \"fixed line\" pattern\n\t\t// then it means it was removed due to being a duplicate of some other pattern.\n\t\t//\n\t\t// (no such country in the metadata, therefore no unit test for this `if`)\n\t\t/* istanbul ignore if */\n\t\tif (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"p\" /* get_type_fixed_line */])(country_metadata)) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\treturn 'MOBILE';\n\t}\n\n\t// Is it fixed line number\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"p\" /* get_type_fixed_line */])(country_metadata))) {\n\t\t// Because duplicate regular expressions are removed\n\t\t// to reduce metadata size, if there's no \"mobile\" pattern\n\t\t// then it means it was removed due to being a duplicate of some other pattern.\n\t\tif (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"o\" /* get_type_mobile */])(country_metadata)) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\treturn 'FIXED_LINE';\n\t}\n\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"q\" /* get_type_toll_free */])(country_metadata))) {\n\t\treturn 'TOLL_FREE';\n\t}\n\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"r\" /* get_type_premium_rate */])(country_metadata))) {\n\t\treturn 'PREMIUM_RATE';\n\t}\n\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"s\" /* get_type_personal_number */])(country_metadata))) {\n\t\treturn 'PERSONAL_NUMBER';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"t\" /* get_type_voice_mail */])(country_metadata))) {\n\t\treturn 'VOICEMAIL';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"u\" /* get_type_uan */])(country_metadata))) {\n\t\treturn 'UAN';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"v\" /* get_type_pager */])(country_metadata))) {\n\t\treturn 'PAGER';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"w\" /* get_type_voip */])(country_metadata))) {\n\t\treturn 'VOIP';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"x\" /* get_type_shared_cost */])(country_metadata))) {\n\t\treturn 'SHARED_COST';\n\t}\n}\n\nfunction is_of_type(national_number, type) {\n\t// // Check if any possible number lengths are present;\n\t// // if so, we use them to avoid checking\n\t// // the validation pattern if they don't match.\n\t// // If they are absent, this means they match\n\t// // the general description, which we have\n\t// // already checked before a specific number type.\n\t// if (get_possible_lengths(type) &&\n\t// \tget_possible_lengths(type).indexOf(national_number.length) === -1)\n\t// {\n\t// \treturn false\n\t// }\n\n\t// get_type_pattern(type) === type\n\treturn __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common__[\"a\" /* matches_entirely */])(national_number, type);\n}\n\nfunction is_national_prefix_required(national_number, country_metadata) {\n\tvar format = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__format__[\"e\" /* choose_format_for_number */])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"a\" /* get_formats */])(country_metadata), national_number);\n\n\tif (format) {\n\t\treturn __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"h\" /* get_format_national_prefix_is_mandatory_when_formatting */])(format, country_metadata);\n\t}\n}\n//# sourceMappingURL=parse.js.map\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(46), __esModule: true };\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar global    = __webpack_require__(0)\n  , core      = __webpack_require__(3)\n  , ctx       = __webpack_require__(53)\n  , hide      = __webpack_require__(5)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(31)('keys')\n  , uid    = __webpack_require__(33);\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(26)\n  , defined = __webpack_require__(13);\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ exports[\"a\"] = matches_entirely;\n// Checks whether the entire input sequence can be matched\n// against the regular expression.\nfunction matches_entirely() {\n\tvar text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar regular_expression = arguments[1];\n\n\tif (typeof regular_expression === 'string') {\n\t\tregular_expression = '^(?:' + regular_expression + ')$';\n\t}\n\n\tvar matched_groups = text.match(regular_expression);\n\treturn matched_groups && matched_groups[0].length === text.length;\n}\n//# sourceMappingURL=common.js.map\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__parse__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__metadata__ = __webpack_require__(10);\n/* harmony export (immutable) */ exports[\"a\"] = format;\n/* harmony export (binding) */ __webpack_require__.d(exports, \"c\", function() { return FIRST_GROUP_PATTERN; });\n/* harmony export (immutable) */ exports[\"b\"] = format_national_number_using_format;\n/* unused harmony export format_national_number */\n/* harmony export (immutable) */ exports[\"e\"] = choose_format_for_number;\n/* harmony export (immutable) */ exports[\"d\"] = local_to_international_style;\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\n\n\n\n\n\n\nfunction format() {\n\tvar input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar format = arguments[1];\n\tvar third_argument = arguments[2];\n\n\t// If the first argument object is expanded\n\tif (typeof input === 'string') {\n\t\t// If number is passed not as an object\n\t\tif (typeof third_argument === 'string') {\n\t\t\tinput = { phone: input, country: format };\n\t\t\tformat = third_argument;\n\t\t} else {\n\t\t\tinput = { phone: input };\n\t\t}\n\t}\n\n\tvar country_metadata = void 0;\n\n\tif (input.country) {\n\t\tcountry_metadata = this.metadata.countries[input.country];\n\t}\n\n\tvar _parse_phone_number_a = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__parse__[\"g\" /* parse_phone_number_and_country_phone_code */])(input.phone, this.metadata),\n\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t    number = _parse_phone_number_a.number;\n\n\tif (country_phone_code) {\n\t\t// Check country restriction\n\t\tif (input.country && country_phone_code !== __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"k\" /* get_phone_code */])(country_metadata)) {\n\t\t\treturn input.phone;\n\t\t}\n\n\t\tcountry_metadata = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"f\" /* get_metadata_by_country_phone_code */])(country_phone_code, this.metadata);\n\t}\n\n\tif (!country_metadata) {\n\t\treturn input.phone;\n\t}\n\n\tswitch (format) {\n\t\tcase 'International':\n\t\t\tif (!number) {\n\t\t\t\treturn '+' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"k\" /* get_phone_code */])(country_metadata);\n\t\t\t}\n\t\t\tvar national_number = format_national_number(number, 'International', false, country_metadata);\n\t\t\treturn '+' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"k\" /* get_phone_code */])(country_metadata) + ' ' + national_number;\n\n\t\tcase 'International_plaintext':\n\t\t\treturn '+' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"k\" /* get_phone_code */])(country_metadata) + input.phone;\n\n\t\tcase 'National':\n\t\t\tif (!number) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn format_national_number(number, 'National', false, country_metadata);\n\t}\n}\n\n// This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly.  Therefore, we use \\d, so that the first\n// group actually used in the pattern will be matched.\nvar FIRST_GROUP_PATTERN = /(\\$\\d)/;\n\nfunction format_national_number_using_format(number, format, international, enforce_national_prefix, country_metadata) {\n\tvar format_pattern_matcher = new RegExp(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"d\" /* get_format_pattern */])(format));\n\n\tvar national_prefix_formatting_rule = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"i\" /* get_format_national_prefix_formatting_rule */])(format, country_metadata);\n\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\tvar national_prefix_may_be_omitted = !national_prefix_formatting_rule || national_prefix_formatting_rule && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"e\" /* get_format_national_prefix_is_optional_when_formatting */])(format, country_metadata) && !enforce_national_prefix;\n\n\tif (!international && !national_prefix_may_be_omitted) {\n\t\treturn number.replace(format_pattern_matcher, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"j\" /* get_format_format */])(format).replace(FIRST_GROUP_PATTERN, national_prefix_formatting_rule));\n\t}\n\n\tvar formatted_number = number.replace(format_pattern_matcher, international ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"b\" /* get_format_international_format */])(format) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"j\" /* get_format_format */])(format));\n\n\tif (international) {\n\t\treturn local_to_international_style(formatted_number);\n\t}\n\n\treturn formatted_number;\n}\n\nfunction format_national_number(number, format_as, enforce_national_prefix, country_metadata) {\n\tvar format = choose_format_for_number(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"a\" /* get_formats */])(country_metadata), number);\n\n\tif (!format) {\n\t\treturn number;\n\t}\n\n\treturn format_national_number_using_format(number, format, format_as === 'International', enforce_national_prefix, country_metadata);\n}\n\nfunction choose_format_for_number(available_formats, national_number) {\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(available_formats), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _format = _step.value;\n\n\t\t\t// Validate leading digits\n\t\t\tif (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(_format).length > 0) {\n\t\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\n\t\t\t\tvar last_leading_digits_pattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(_format)[__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(_format).length - 1];\n\n\t\t\t\t// If leading digits don't match then move on to the next phone number format\n\t\t\t\tif (national_number.search(last_leading_digits_pattern) !== 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check that the national number matches the phone number format regular expression\n\t\t\tif (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common__[\"a\" /* matches_entirely */])(national_number, new RegExp(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"d\" /* get_format_pattern */])(_format)))) {\n\t\t\t\treturn _format;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\nfunction local_to_international_style(local) {\n\treturn local\n\t// Remove brackets\n\t.replace(/[\\(\\)]/g, '')\n\t// Replace dashes with spaces\n\t.replace(/\\-/g, ' ').trim();\n}\n//# sourceMappingURL=format.js.map\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Check if value is valid by RegExp\n *\n * @param {object} expression RegExp object\n * @returns {function}\n */\nvar check = exports.check = function check(expression) {\n  return function (value) {\n    return expression.test(value);\n  };\n};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(16)\n  , document = __webpack_require__(0).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(23);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY        = __webpack_require__(58)\n  , $export        = __webpack_require__(14)\n  , redefine       = __webpack_require__(66)\n  , hide           = __webpack_require__(5)\n  , has            = __webpack_require__(7)\n  , Iterators      = __webpack_require__(8)\n  , $iterCreate    = __webpack_require__(56)\n  , setToStringTag = __webpack_require__(30)\n  , getPrototypeOf = __webpack_require__(63)\n  , ITERATOR       = __webpack_require__(1)('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = __webpack_require__(64)\n  , enumBugKeys = __webpack_require__(25);\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(9).f\n  , has = __webpack_require__(7)\n  , TAG = __webpack_require__(1)('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(0)\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(13);\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.alphanumeric = undefined;\n\nvar _pattern = __webpack_require__(2);\n\n/**\n * Check if value is alphanumeric\n *\n * @param {string} value\n * @returns {boolean}\n */\nvar alphanumeric = exports.alphanumeric = (0, _pattern.pattern)('/^\\\\w+$/', 'i');\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.digits = undefined;\n\nvar _pattern = __webpack_require__(2);\n\n/**\n * Check if value is digits\n *\n * @param {string} value\n * @returns {boolean}\n */\nvar digits = exports.digits = (0, _pattern.pattern)('/^\\\\d+$/');\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.email = undefined;\n\nvar _check = __webpack_require__(22);\n\n/**\n * Check if value is valid e-mail\n *\n * @param {string} value\n * @returns {boolean}\n */\nvar email = exports.email = (0, _check.check)(new RegExp(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i));\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.integer = undefined;\n\nvar _pattern = __webpack_require__(2);\n\n/**\n * Check if value is integer\n *\n * @param {integer} value\n * @returns {boolean}\n */\nvar integer = exports.integer = (0, _pattern.pattern)('/^-?\\\\d+$/');\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.number = undefined;\n\nvar _pattern = __webpack_require__(2);\n\n/**\n * Check if value is number\n *\n * @param {integer} value\n * @returns {boolean}\n */\nvar number = exports.number = (0, _pattern.pattern)('/^-?(\\\\d*\\\\.)?\\\\d+(e[-+]?\\\\d+)?$/', 'i');\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.phone = undefined;\n\nvar _libphonenumberJs = __webpack_require__(81);\n\n/**\n * Check if phone number is valid\n * @param  {string} number Phone number\n * @return {boolean}\n */\nvar phone = exports.phone = function phone(number) {\n  return (0, _libphonenumberJs.isValidNumber)(number);\n};\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Return RegExp object\n * @param  {string} string Regular expression\n * @return {object}\n */\nvar express = exports.express = function express(expression) {\n  var flags = '';\n\n  // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n  if (/^\\/.*\\/(?:[gimy]*)$/.test(expression)) {\n    // Replace the regexp literal string with the first match group: ([gimy]*)\n    // If no flag is present, this will be a blank string\n    flags = expression.replace(/.*\\/([gimy]*)$/, '$1');\n    // Again, replace the regexp literal string with the first match group:\n    // everything excluding the opening and closing slashes and the flags\n    expression = expression.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n  } else {\n    // Anchor regexp:\n    expression = '^' + expression + '$';\n  }\n  return new RegExp(expression, flags);\n};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(47), __esModule: true };\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(48), __esModule: true };\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(42);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__(41);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(77);\n__webpack_require__(76);\nmodule.exports = __webpack_require__(72);\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(74);\nmodule.exports = __webpack_require__(3).Object.assign;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(75);\nvar $Object = __webpack_require__(3).Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\nmodule.exports = function(){ /* empty */ };\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(19)\n  , toLength  = __webpack_require__(69)\n  , toIndex   = __webpack_require__(68);\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(23)\n  , TAG = __webpack_require__(1)('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(49);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0).document && document.documentElement;\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(4) && !__webpack_require__(15)(function(){\n  return Object.defineProperty(__webpack_require__(24)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create         = __webpack_require__(60)\n  , descriptor     = __webpack_require__(29)\n  , setToStringTag = __webpack_require__(30)\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(5)(IteratorPrototype, __webpack_require__(1)('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\nmodule.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\nmodule.exports = true;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = __webpack_require__(28)\n  , gOPS     = __webpack_require__(62)\n  , pIE      = __webpack_require__(65)\n  , toObject = __webpack_require__(32)\n  , IObject  = __webpack_require__(26)\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(15)(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = __webpack_require__(6)\n  , dPs         = __webpack_require__(61)\n  , enumBugKeys = __webpack_require__(25)\n  , IE_PROTO    = __webpack_require__(17)('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(24)('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(54).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar dP       = __webpack_require__(9)\n  , anObject = __webpack_require__(6)\n  , getKeys  = __webpack_require__(28);\n\nmodule.exports = __webpack_require__(4) ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = __webpack_require__(7)\n  , toObject    = __webpack_require__(32)\n  , IE_PROTO    = __webpack_require__(17)('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar has          = __webpack_require__(7)\n  , toIObject    = __webpack_require__(19)\n  , arrayIndexOf = __webpack_require__(51)(false)\n  , IE_PROTO     = __webpack_require__(17)('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(5);\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(18)\n  , defined   = __webpack_require__(13);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(18)\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(18)\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(16);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar classof   = __webpack_require__(52)\n  , ITERATOR  = __webpack_require__(1)('iterator')\n  , Iterators = __webpack_require__(8);\nmodule.exports = __webpack_require__(3).getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(6)\n  , get      = __webpack_require__(71);\nmodule.exports = __webpack_require__(3).getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar addToUnscopables = __webpack_require__(50)\n  , step             = __webpack_require__(57)\n  , Iterators        = __webpack_require__(8)\n  , toIObject        = __webpack_require__(19);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(27)(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(14);\n\n$export($export.S + $export.F, 'Object', {assign: __webpack_require__(59)});\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(14);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(4), 'Object', {defineProperty: __webpack_require__(9).f});\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $at  = __webpack_require__(67)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(27)(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n__webpack_require__(73);\nvar global        = __webpack_require__(0)\n  , hide          = __webpack_require__(5)\n  , Iterators     = __webpack_require__(8)\n  , TO_STRING_TAG = __webpack_require__(1)('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__es6_parse__ = __webpack_require__(11);\n/* harmony reexport (binding) */ __webpack_require__.d(exports, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__es6_parse__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__es6_format__ = __webpack_require__(21);\n/* harmony reexport (binding) */ __webpack_require__.d(exports, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__es6_format__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__es6_validate__ = __webpack_require__(80);\n/* harmony reexport (binding) */ __webpack_require__.d(exports, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__es6_validate__[\"a\"]; });\n/* unused harmony reexport isValidNumber */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__es6_as_you_type__ = __webpack_require__(79);\n/* harmony reexport (binding) */ __webpack_require__.d(exports, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__es6_as_you_type__[\"a\"]; });\n/* unused harmony reexport asYouType */\n\n\n\n\n\n\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__metadata__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__parse__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__format__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__common__ = __webpack_require__(20);\n/* unused harmony export close_dangling_braces */\n/* unused harmony export count_occurences */\n/* unused harmony export repeat */\n\n\n\n// This is an enhanced port of Google Android `libphonenumber`'s\n// `asyoutypeformatter.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/blob/8d21a365061de2ba0675c878a710a7b24f74d2ae/javascript/i18n/phonenumbers/asyoutypeformatter.js\n\n\n\n\n\n\n\n\n\n// Used in phone number format template creation.\n// Could be any digit, I guess.\nvar DUMMY_DIGIT = '9';\nvar DUMMY_DIGIT_MATCHER = new RegExp(DUMMY_DIGIT, 'g');\n// I don't know why is it exactly `15`\nvar LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15;\n// Create a phone number consisting only of the digit 9 that matches the\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\nvar LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH);\n\n// The digits that have not been entered yet will be represented by a \\u2008,\n// the punctuation space.\nvar DIGIT_PLACEHOLDER = 'x'; // '\\u2008' (punctuation space)\nvar DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER);\nvar DIGIT_PLACEHOLDER_MATCHER_GLOBAL = new RegExp(DIGIT_PLACEHOLDER, 'g');\n\n// A pattern that is used to match character classes in regular expressions.\n// An example of a character class is \"[1-4]\".\nvar CHARACTER_CLASS_PATTERN = /\\[([^\\[\\]])*\\]/g;\n\n// Any digit in a regular expression that actually denotes a digit. For\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\n// (8 and 0) are standalone digits, but the rest are not.\n// Two look-aheads are needed because the number following \\\\d could be a\n// two-digit number, since the phone number can be as long as 15 digits.\nvar STANDALONE_DIGIT_PATTERN = /\\d(?=[^,}][^,}])/g;\n\n// A pattern that is used to determine if a `format` is eligible\n// to be used by the \"as you type formatter\".\n// It is eligible when the `format` contains groups of the dollar sign\n// followed by a single digit, separated by valid phone number punctuation.\n// This prevents invalid punctuation (such as the star sign in Israeli star numbers)\n// getting into the output of the \"as you type formatter\".\nvar ELIGIBLE_FORMAT_PATTERN = new RegExp('^' + '[' + __WEBPACK_IMPORTED_MODULE_4__parse__[\"b\" /* VALID_PUNCTUATION */] + ']*' + '(\\\\$\\\\d[' + __WEBPACK_IMPORTED_MODULE_4__parse__[\"b\" /* VALID_PUNCTUATION */] + ']*)+' + '$');\n\n// This is the minimum length of the leading digits of a phone number\n// to guarantee the first \"leading digits pattern\" for a phone number format\n// to be preemptive.\nvar MIN_LEADING_DIGITS_LENGTH = 3;\n\nvar VALID_INCOMPLETE_PHONE_NUMBER = '[' + __WEBPACK_IMPORTED_MODULE_4__parse__[\"c\" /* PLUS_CHARS */] + ']{0,1}' + '[' + __WEBPACK_IMPORTED_MODULE_4__parse__[\"b\" /* VALID_PUNCTUATION */] + __WEBPACK_IMPORTED_MODULE_4__parse__[\"d\" /* VALID_DIGITS */] + ']*';\n\nvar VALID_INCOMPLETE_PHONE_NUMBER_PATTERN = new RegExp('^' + VALID_INCOMPLETE_PHONE_NUMBER + '$', 'i');\n\n/* harmony default export */ exports[\"a\"] = function (metadata) {\n\tvar as_you_type = function () {\n\t\tfunction as_you_type(country_code) {\n\t\t\t__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, as_you_type);\n\n\t\t\tif (country_code && metadata.countries[country_code]) {\n\t\t\t\tthis.default_country = country_code;\n\t\t\t}\n\n\t\t\tthis.reset();\n\t\t}\n\n\t\t__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(as_you_type, [{\n\t\t\tkey: 'input',\n\t\t\tvalue: function input(text) {\n\t\t\t\t// Parse input\n\n\t\t\t\tvar extracted_number = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__parse__[\"e\" /* extract_formatted_phone_number */])(text);\n\n\t\t\t\t// Special case for a lone '+' sign\n\t\t\t\t// since it's not considered a possible phone number.\n\t\t\t\tif (!extracted_number) {\n\t\t\t\t\tif (text && text.indexOf('+') >= 0) {\n\t\t\t\t\t\textracted_number = '+';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Validate possible first part of a phone number\n\t\t\t\tif (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__common__[\"a\" /* matches_entirely */])(extracted_number, VALID_INCOMPLETE_PHONE_NUMBER_PATTERN)) {\n\t\t\t\t\treturn this.current_output;\n\t\t\t\t}\n\n\t\t\t\treturn this.process_input(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__parse__[\"f\" /* parse_phone_number */])(extracted_number));\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'process_input',\n\t\t\tvalue: function process_input(input) {\n\t\t\t\t// If an out of position '+' sign detected\n\t\t\t\t// (or a second '+' sign),\n\t\t\t\t// then just drop it from the input.\n\t\t\t\tif (input[0] === '+') {\n\t\t\t\t\tif (!this.parsed_input) {\n\t\t\t\t\t\tthis.parsed_input += '+';\n\n\t\t\t\t\t\t// If a default country was set\n\t\t\t\t\t\t// then reset it because an explicitly international\n\t\t\t\t\t\t// phone number is being entered\n\t\t\t\t\t\tthis.reset_countriness();\n\t\t\t\t\t}\n\n\t\t\t\t\tinput = input.slice(1);\n\t\t\t\t}\n\n\t\t\t\t// Raw phone number\n\t\t\t\tthis.parsed_input += input;\n\n\t\t\t\t// Reset phone number validation state\n\t\t\t\tthis.valid = false;\n\n\t\t\t\t// Add digits to the national number\n\t\t\t\tthis.national_number += input;\n\n\t\t\t\t// Try to format the parsed input\n\n\t\t\t\tif (this.is_international()) {\n\t\t\t\t\tif (!this.country_phone_code) {\n\t\t\t\t\t\t// If one looks at country phone codes\n\t\t\t\t\t\t// then he can notice that no one country phone code\n\t\t\t\t\t\t// is ever a (leftmost) substring of another country phone code.\n\t\t\t\t\t\t// So if a valid country code is extracted so far\n\t\t\t\t\t\t// then it means that this is the country code.\n\n\t\t\t\t\t\t// If no country phone code could be extracted so far,\n\t\t\t\t\t\t// then just return the raw phone number,\n\t\t\t\t\t\t// because it has no way of knowing\n\t\t\t\t\t\t// how to format the phone number so far.\n\t\t\t\t\t\tif (!this.extract_country_phone_code()) {\n\t\t\t\t\t\t\t// Return raw phone number\n\t\t\t\t\t\t\treturn this.parsed_input;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Initialize country-specific data\n\t\t\t\t\t\tthis.initialize_phone_number_formats_for_this_country_phone_code();\n\t\t\t\t\t\tthis.reset_format();\n\t\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t\t}\n\t\t\t\t\t// `this.country` could be `undefined`,\n\t\t\t\t\t// for instance, when there is ambiguity\n\t\t\t\t\t// in a form of several different countries\n\t\t\t\t\t// each corresponding to the same country phone code\n\t\t\t\t\t// (e.g. NANPA: USA, Canada, etc),\n\t\t\t\t\t// and there's not enough digits entered\n\t\t\t\t\t// to reliably determine the country\n\t\t\t\t\t// the phone number belongs to.\n\t\t\t\t\t// Therefore, in cases of such ambiguity,\n\t\t\t\t\t// each time something is input,\n\t\t\t\t\t// try to determine the country\n\t\t\t\t\t// (if it's not determined yet).\n\t\t\t\t\telse if (!this.country) {\n\t\t\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Some national prefixes are substrings of other national prefixes\n\t\t\t\t\t// (for the same country), therefore try to extract national prefix each time\n\t\t\t\t\t// because a longer national prefix might be available at some point in time.\n\n\t\t\t\t\tvar previous_national_prefix = this.national_prefix;\n\t\t\t\t\tthis.national_number = this.national_prefix + this.national_number;\n\n\t\t\t\t\t// Possibly extract a national prefix\n\t\t\t\t\tthis.extract_national_prefix();\n\n\t\t\t\t\tif (this.national_prefix !== previous_national_prefix) {\n\t\t\t\t\t\t// National number has changed\n\t\t\t\t\t\t// (due to another national prefix been extracted)\n\t\t\t\t\t\t// therefore national number has changed\n\t\t\t\t\t\t// therefore reset all previous formatting data.\n\t\t\t\t\t\t// (and leading digits matching state)\n\t\t\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t\t\t\tthis.reset_format();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Format the phone number (given the next digits)\n\t\t\t\tvar formatted_national_phone_number = this.format_national_phone_number(input);\n\n\t\t\t\t// If the phone number could be formatted,\n\t\t\t\t// then return it, possibly prepending with country phone code\n\t\t\t\t// (for international phone numbers only)\n\t\t\t\tif (formatted_national_phone_number) {\n\t\t\t\t\treturn this.full_phone_number(formatted_national_phone_number);\n\t\t\t\t}\n\n\t\t\t\t// If the phone number couldn't be formatted,\n\t\t\t\t// then just fall back to the raw phone number.\n\t\t\t\treturn this.parsed_input;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'format_national_phone_number',\n\t\t\tvalue: function format_national_phone_number(next_digits) {\n\t\t\t\t// Format the next phone number digits\n\t\t\t\t// using the previously chosen phone number format.\n\t\t\t\t//\n\t\t\t\t// This is done here because if `attempt_to_format_complete_phone_number`\n\t\t\t\t// was placed before this call then the `template`\n\t\t\t\t// wouldn't reflect the situation correctly (and would therefore be inconsistent)\n\t\t\t\t//\n\t\t\t\tvar national_number_formatted_with_previous_format = void 0;\n\t\t\t\tif (this.chosen_format) {\n\t\t\t\t\tnational_number_formatted_with_previous_format = this.format_next_national_number_digits(next_digits);\n\t\t\t\t}\n\n\t\t\t\t// See if the input digits can be formatted properly already. If not,\n\t\t\t\t// use the results from format_next_national_number_digits(), which does formatting\n\t\t\t\t// based on the formatting pattern chosen.\n\n\t\t\t\tvar formatted_number = this.attempt_to_format_complete_phone_number();\n\n\t\t\t\tif (formatted_number) {\n\t\t\t\t\tif (this.country) {\n\t\t\t\t\t\tthis.valid = true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn formatted_number;\n\t\t\t\t}\n\n\t\t\t\t// Check if the previously chosen phone number format still holds\n\t\t\t\tthis.match_formats_by_leading_digits();\n\n\t\t\t\t// If the previously chosen phone number format\n\t\t\t\t// didn't match the next (current) digit being input\n\t\t\t\t// (leading digits pattern didn't match).\n\t\t\t\tif (this.choose_another_format()) {\n\t\t\t\t\t// And a more appropriate phone number format\n\t\t\t\t\t// has been chosen for these `leading digits`,\n\t\t\t\t\t// then format the national phone number (so far)\n\t\t\t\t\t// using the newly selected phone number pattern.\n\n\t\t\t\t\t// Will return `undefined` if it couldn't format\n\t\t\t\t\t// the supplied national number\n\t\t\t\t\t// using the selected phone number pattern.\n\n\t\t\t\t\treturn this.reformat_national_number();\n\t\t\t\t}\n\n\t\t\t\t// If could format the next (current) digit\n\t\t\t\t// using the previously chosen phone number format\n\t\t\t\t// then return the formatted number so far.\n\n\t\t\t\t// If no new phone number format could be chosen,\n\t\t\t\t// and couldn't format the supplied national number\n\t\t\t\t// using the selected phone number pattern,\n\t\t\t\t// then it will return `undefined`.\n\n\t\t\t\treturn national_number_formatted_with_previous_format;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'reset',\n\t\t\tvalue: function reset() {\n\t\t\t\t// Input stripped of non-phone-number characters.\n\t\t\t\t// Can only contain a possible leading '+' sign and digits.\n\t\t\t\tthis.parsed_input = '';\n\n\t\t\t\tthis.current_output = '';\n\n\t\t\t\t// This contains the national prefix that has been extracted. It contains only\n\t\t\t\t// digits without formatting.\n\t\t\t\tthis.national_prefix = '';\n\n\t\t\t\tthis.national_number = '';\n\n\t\t\t\tthis.reset_countriness();\n\n\t\t\t\tthis.reset_format();\n\n\t\t\t\tthis.valid = false;\n\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'reset_country',\n\t\t\tvalue: function reset_country() {\n\t\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\t\tthis.country = this.default_country;\n\t\t\t\t} else {\n\t\t\t\t\tthis.country = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'reset_countriness',\n\t\t\tvalue: function reset_countriness() {\n\t\t\t\tthis.reset_country();\n\n\t\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\t\tthis.country_metadata = metadata.countries[this.default_country];\n\t\t\t\t\tthis.country_phone_code = this.country_metadata.phone_code;\n\n\t\t\t\t\tthis.initialize_phone_number_formats_for_this_country_phone_code();\n\t\t\t\t} else {\n\t\t\t\t\tthis.country_metadata = undefined;\n\t\t\t\t\tthis.country_phone_code = undefined;\n\n\t\t\t\t\tthis.available_formats = [];\n\t\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'reset_format',\n\t\t\tvalue: function reset_format() {\n\t\t\t\tthis.chosen_format = undefined;\n\t\t\t\tthis.template = undefined;\n\t\t\t\tthis.partially_populated_template = undefined;\n\t\t\t\tthis.last_match_position = -1;\n\t\t\t}\n\n\t\t\t// Format each digit of national phone number (so far)\n\t\t\t// using the newly selected phone number pattern.\n\n\t\t}, {\n\t\t\tkey: 'reformat_national_number',\n\t\t\tvalue: function reformat_national_number() {\n\t\t\t\t// Format each digit of national phone number (so far)\n\t\t\t\t// using the selected phone number pattern.\n\t\t\t\treturn this.format_next_national_number_digits(this.national_number);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'initialize_phone_number_formats_for_this_country_phone_code',\n\t\t\tvalue: function initialize_phone_number_formats_for_this_country_phone_code() {\n\t\t\t\t// Get all \"eligible\" phone number formats for this country\n\t\t\t\tthis.available_formats = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"a\" /* get_formats */])(this.country_metadata).filter(function (format) {\n\t\t\t\t\treturn ELIGIBLE_FORMAT_PATTERN.test(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"b\" /* get_format_international_format */])(format));\n\t\t\t\t})\n\t\t\t\t// Try the formats with \"leading digits\" defined first\n\t\t\t\t.sort(function (a, b) {\n\t\t\t\t\t// Leading digits are defined for most formats\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(a).length === 0 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(b).length > 0) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Leading digits are defined for most formats\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(a).length > 0 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(b).length === 0) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'match_formats_by_leading_digits',\n\t\t\tvalue: function match_formats_by_leading_digits() {\n\t\t\t\tvar leading_digits = this.national_number;\n\n\t\t\t\t// \"leading digits\" patterns start with a maximum 3 digits,\n\t\t\t\t// and then with each additional digit\n\t\t\t\t// a more precise \"leading digits\" pattern is specified.\n\t\t\t\t// They could make \"leading digits\" patterns start\n\t\t\t\t// with a maximum of a single digit, but they didn't,\n\t\t\t\t// so it's possible that some phone number formats\n\t\t\t\t// will be falsely rejected until there are at least\n\t\t\t\t// 3 digits in the national (significant) number being input.\n\n\t\t\t\tvar index_of_leading_digits_pattern = leading_digits.length - MIN_LEADING_DIGITS_LENGTH;\n\n\t\t\t\tif (index_of_leading_digits_pattern < 0) {\n\t\t\t\t\tindex_of_leading_digits_pattern = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.matching_formats = this.get_relevant_phone_number_formats().filter(function (format) {\n\t\t\t\t\tvar leading_digits_pattern_count = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(format).length;\n\n\t\t\t\t\t// Keep everything that isn't restricted by leading digits.\n\t\t\t\t\tif (leading_digits_pattern_count === 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar leading_digits_pattern_index = Math.min(index_of_leading_digits_pattern, leading_digits_pattern_count - 1);\n\t\t\t\t\tvar leading_digits_pattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"c\" /* get_format_leading_digits_patterns */])(format)[leading_digits_pattern_index];\n\t\t\t\t\treturn new RegExp('^' + leading_digits_pattern).test(leading_digits);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'get_relevant_phone_number_formats',\n\t\t\tvalue: function get_relevant_phone_number_formats() {\n\t\t\t\tvar leading_digits = this.national_number;\n\n\t\t\t\t// \"leading digits\" patterns start with a maximum 3 digits,\n\t\t\t\t// and then with each additional digit\n\t\t\t\t// a more precise \"leading digits\" pattern is specified.\n\t\t\t\t// They could make \"leading digits\" patterns start\n\t\t\t\t// with a maximum of a single digit, but they didn't,\n\t\t\t\t// so it's possible that some phone number formats\n\t\t\t\t// will be falsely rejected until there are at least\n\t\t\t\t// 3 digits in the national (significant) number being input.\n\n\t\t\t\tif (leading_digits.length <= MIN_LEADING_DIGITS_LENGTH) {\n\t\t\t\t\treturn this.available_formats;\n\t\t\t\t}\n\n\t\t\t\treturn this.matching_formats;\n\t\t\t}\n\n\t\t\t// Check to see if there is an exact pattern match for these digits. If so, we\n\t\t\t// should use this instead of any other formatting template whose\n\t\t\t// leadingDigitsPattern also matches the input.\n\n\t\t}, {\n\t\t\tkey: 'attempt_to_format_complete_phone_number',\n\t\t\tvalue: function attempt_to_format_complete_phone_number() {\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(this.get_relevant_phone_number_formats()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar format = _step.value;\n\n\t\t\t\t\t\tvar matcher = new RegExp('^(?:' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"d\" /* get_format_pattern */])(format) + ')$');\n\n\t\t\t\t\t\tif (!matcher.test(this.national_number)) {\n\t\t\t\t\t\t\t// If the national prefix is optional\n\t\t\t\t\t\t\t// then also try to format the phone number\n\t\t\t\t\t\t\t// without the national prefix being extracted.\n\t\t\t\t\t\t\tif (this.national_prefix && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"e\" /* get_format_national_prefix_is_optional_when_formatting */])(format, this.country_metadata)) {\n\t\t\t\t\t\t\t\tif (!matcher.test(this.national_prefix + this.national_number)) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.national_number = this.national_prefix + this.national_number;\n\t\t\t\t\t\t\t\tthis.national_prefix = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.validate_format(format)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// To leave the formatter in a consistent state\n\t\t\t\t\t\tthis.reset_format();\n\t\t\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t\t\tvar formatted_number = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__format__[\"b\" /* format_national_number_using_format */])(this.national_number, format, this.is_international(), this.national_prefix.length > 0, this.country_metadata);\n\n\t\t\t\t\t\t// Set `this.template` and `this.partially_populated_template`\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// `else` case doesn't ever happen\n\t\t\t\t\t\t// with the current metadata,\n\t\t\t\t\t\t// but just in case.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\t\tif (this.create_formatting_template(format)) {\n\t\t\t\t\t\t\t// Populate `this.partially_populated_template`\n\t\t\t\t\t\t\tthis.reformat_national_number();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar full_number = this.full_phone_number(formatted_number);\n\n\t\t\t\t\t\t\tthis.template = full_number.replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER);\n\t\t\t\t\t\t\tthis.partially_populated_template = full_number;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn formatted_number;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Combines the national number with the appropriate prefix\n\n\t\t}, {\n\t\t\tkey: 'full_phone_number',\n\t\t\tvalue: function full_phone_number(formatted_national_number) {\n\t\t\t\tif (this.is_international()) {\n\t\t\t\t\treturn '+' + this.country_phone_code + ' ' + formatted_national_number;\n\t\t\t\t}\n\n\t\t\t\treturn formatted_national_number;\n\t\t\t}\n\n\t\t\t// Extracts the country calling code from the beginning\n\t\t\t// of the entered `national_number` (so far),\n\t\t\t// and places the remaining input into the `national_number`.\n\n\t\t}, {\n\t\t\tkey: 'extract_country_phone_code',\n\t\t\tvalue: function extract_country_phone_code() {\n\t\t\t\tif (!this.national_number) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar _parse_phone_number_a = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__parse__[\"g\" /* parse_phone_number_and_country_phone_code */])(this.parsed_input, metadata),\n\t\t\t\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t\t\t\t    number = _parse_phone_number_a.number;\n\n\t\t\t\tif (!country_phone_code) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.country_phone_code = country_phone_code;\n\t\t\t\tthis.national_number = number;\n\n\t\t\t\treturn this.country_metadata = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"f\" /* get_metadata_by_country_phone_code */])(country_phone_code, metadata);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'extract_national_prefix',\n\t\t\tvalue: function extract_national_prefix() {\n\t\t\t\tthis.national_prefix = '';\n\n\t\t\t\tif (!this.country_metadata) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar national_prefix_for_parsing = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"g\" /* get_national_prefix_for_parsing */])(this.country_metadata);\n\n\t\t\t\tif (!national_prefix_for_parsing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar matches = this.national_number.match(new RegExp('^(?:' + national_prefix_for_parsing + ')'));\n\n\t\t\t\t// Since some national prefix patterns are entirely optional, check that a\n\t\t\t\t// national prefix could actually be extracted.\n\t\t\t\tif (!matches || !matches[0]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar national_number_starts_at = matches[0].length;\n\n\t\t\t\tthis.national_prefix = this.national_number.slice(0, national_number_starts_at);\n\t\t\t\tthis.national_number = this.national_number.slice(national_number_starts_at);\n\n\t\t\t\treturn this.national_prefix;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'choose_another_format',\n\t\t\tvalue: function choose_another_format() {\n\t\t\t\t// When there are multiple available formats, the formatter uses the first\n\t\t\t\t// format where a formatting template could be created.\n\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(this.get_relevant_phone_number_formats()), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\tvar format = _step2.value;\n\n\t\t\t\t\t\t// If this format is currently being used\n\t\t\t\t\t\t// and is still possible, then stick to it.\n\t\t\t\t\t\tif (this.chosen_format === format) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this `format` is suitable for \"as you type\",\n\t\t\t\t\t\t// then extract the template from this format\n\t\t\t\t\t\t// and use it to format the phone number being input.\n\n\t\t\t\t\t\tif (!this.validate_format(format)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.create_formatting_template(format)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t\t\t// With a new formatting template, the matched position\n\t\t\t\t\t\t// using the old template needs to be reset.\n\t\t\t\t\t\tthis.last_match_position = -1;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No format matches the phone number,\n\t\t\t\t\t// therefore set `country` to `undefined`\n\t\t\t\t\t// (or to the default country).\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.reset_country();\n\n\t\t\t\t// No format matches the national phone number entered\n\t\t\t\tthis.reset_format();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'validate_format',\n\t\t\tvalue: function validate_format(format) {\n\t\t\t\t// If national prefix is mandatory for this phone number format\n\t\t\t\t// and the user didn't input the national prefix,\n\t\t\t\t// then this phone number format isn't suitable.\n\t\t\t\tif (!this.is_international() && !this.national_prefix && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"h\" /* get_format_national_prefix_is_mandatory_when_formatting */])(format, this.country_metadata)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'create_formatting_template',\n\t\t\tvalue: function create_formatting_template(format) {\n\t\t\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\n\t\t\t\t// (20|3)\\d{4}. In those cases we quickly return.\n\t\t\t\t// (Though there's no such format in current metadata)\n\t\t\t\t/* istanbul ignore if */\n\t\t\t\tif (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"d\" /* get_format_pattern */])(format).indexOf('|') >= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar national_prefix_formatting_rule = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"i\" /* get_format_national_prefix_formatting_rule */])(format, this.country_metadata);\n\n\t\t\t\t// A very smart trick by the guys at Google\n\t\t\t\tvar number_pattern = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"d\" /* get_format_pattern */])(format)\n\t\t\t\t// Replace anything in the form of [..] with \\d\n\t\t\t\t.replace(CHARACTER_CLASS_PATTERN, '\\\\d')\n\t\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\n\t\t\t\t.replace(STANDALONE_DIGIT_PATTERN, '\\\\d');\n\n\t\t\t\t// This match will always succeed,\n\t\t\t\t// because the \"longest dummy phone number\"\n\t\t\t\t// has enough length to accomodate any possible\n\t\t\t\t// national phone number format pattern.\n\t\t\t\tvar dummy_phone_number_matching_format_pattern = LONGEST_DUMMY_PHONE_NUMBER.match(number_pattern)[0];\n\n\t\t\t\t// If the national number entered is too long\n\t\t\t\t// for any phone number format, then abort.\n\t\t\t\tif (this.national_number.length > dummy_phone_number_matching_format_pattern.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Now prepare phone number format\n\t\t\t\tvar number_format = this.get_format_format(format);\n\n\t\t\t\t// If the user did input the national prefix\n\t\t\t\t// then maybe make it a part of the phone number template\n\t\t\t\tif (this.national_prefix) {\n\t\t\t\t\tvar _national_prefix_formatting_rule = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"i\" /* get_format_national_prefix_formatting_rule */])(format, this.country_metadata);\n\n\t\t\t\t\t// If national prefix formatting rule is set\n\t\t\t\t\t// for this phone number format\n\t\t\t\t\tif (_national_prefix_formatting_rule) {\n\t\t\t\t\t\t// Make the national prefix a part of the phone number template\n\t\t\t\t\t\tnumber_format = number_format.replace(__WEBPACK_IMPORTED_MODULE_5__format__[\"c\" /* FIRST_GROUP_PATTERN */], _national_prefix_formatting_rule);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get a formatting template which can be used to efficiently format\n\t\t\t\t// a partial number where digits are added one by one.\n\n\t\t\t\t// Create formatting template for this phone number format\n\t\t\t\tvar template = dummy_phone_number_matching_format_pattern\n\t\t\t\t// Format the dummy phone number according to the format\n\t\t\t\t.replace(new RegExp(number_pattern, 'g'), number_format)\n\t\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER\n\t\t\t\t.replace(DUMMY_DIGIT_MATCHER, DIGIT_PLACEHOLDER);\n\n\t\t\t\t// This one is for national number only\n\t\t\t\tthis.partially_populated_template = template;\n\n\t\t\t\t// For convenience, the public `.template` property\n\t\t\t\t// is gonna contain the whole international number\n\t\t\t\t// if the phone number being input is international.\n\t\t\t\tif (this.is_international()) {\n\t\t\t\t\ttemplate = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.country_phone_code.length) + ' ' + template;\n\t\t\t\t}\n\t\t\t\t// For local numbers, replace national prefix\n\t\t\t\t// with a digit placeholder.\n\t\t\t\telse {\n\t\t\t\t\t\ttemplate = template.replace(/\\d/g, DIGIT_PLACEHOLDER);\n\t\t\t\t\t}\n\n\t\t\t\t// This one is for the full phone number\n\t\t\t\treturn this.template = template;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'format_next_national_number_digits',\n\t\t\tvalue: function format_next_national_number_digits(digits) {\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(digits), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar digit = _step3.value;\n\n\t\t\t\t\t\t// If there is room for more digits in current `template`,\n\t\t\t\t\t\t// then set the next digit in the `template`,\n\t\t\t\t\t\t// and return the formatted digits so far.\n\n\t\t\t\t\t\t// If more digits are entered than the current format could handle\n\t\t\t\t\t\tif (this.partially_populated_template.slice(this.last_match_position + 1).search(DIGIT_PLACEHOLDER_MATCHER) === -1) {\n\t\t\t\t\t\t\t// Reset the current format,\n\t\t\t\t\t\t\t// so that the new format will be chosen\n\t\t\t\t\t\t\t// in a subsequent `this.choose_another_format()` call\n\t\t\t\t\t\t\t// later in code.\n\t\t\t\t\t\t\tthis.chosen_format = undefined;\n\t\t\t\t\t\t\tthis.template = undefined;\n\t\t\t\t\t\t\tthis.partially_populated_template = undefined;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.last_match_position = this.partially_populated_template.search(DIGIT_PLACEHOLDER_MATCHER);\n\t\t\t\t\t\tthis.partially_populated_template = this.partially_populated_template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return the formatted phone number so far\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn close_dangling_braces(this.partially_populated_template, this.last_match_position + 1).replace(DIGIT_PLACEHOLDER_MATCHER_GLOBAL, ' ');\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'is_international',\n\t\t\tvalue: function is_international() {\n\t\t\t\treturn this.parsed_input && this.parsed_input[0] === '+';\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'get_format_format',\n\t\t\tvalue: function get_format_format(format) {\n\t\t\t\tif (this.is_international()) {\n\t\t\t\t\treturn __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__format__[\"d\" /* local_to_international_style */])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"b\" /* get_format_international_format */])(format));\n\t\t\t\t}\n\n\t\t\t\treturn __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__metadata__[\"j\" /* get_format_format */])(format);\n\t\t\t}\n\n\t\t\t// Determines the country of the phone number\n\t\t\t// entered so far based on the country phone code\n\t\t\t// and the national phone number.\n\n\t\t}, {\n\t\t\tkey: 'determine_the_country',\n\t\t\tvalue: function determine_the_country() {\n\t\t\t\tthis.country = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__parse__[\"h\" /* find_country_code */])(this.country_phone_code, this.national_number, metadata);\n\t\t\t}\n\t\t}]);\n\n\t\treturn as_you_type;\n\t}();\n\n\tas_you_type.DIGIT_PLACEHOLDER = DIGIT_PLACEHOLDER;\n\n\treturn as_you_type;\n};\n\nfunction close_dangling_braces(template, cut_before) {\n\tvar retained_template = template.slice(0, cut_before);\n\n\tvar opening_braces = count_occurences('(', retained_template);\n\tvar closing_braces = count_occurences(')', retained_template);\n\n\tvar dangling_braces = opening_braces - closing_braces;\n\n\twhile (dangling_braces > 0 && cut_before < template.length) {\n\t\tif (template[cut_before] === ')') {\n\t\t\tdangling_braces--;\n\t\t}\n\t\tcut_before++;\n\t}\n\n\treturn template.slice(0, cut_before);\n}\n\n// Counts all occurences of a symbol in a string\nfunction count_occurences(symbol, string) {\n\tvar count = 0;\n\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\n\ttry {\n\t\tfor (var _iterator4 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(string), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\tvar character = _step4.value;\n\n\t\t\tif (character === symbol) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError4 = true;\n\t\t_iteratorError4 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t_iterator4.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError4) {\n\t\t\t\tthrow _iteratorError4;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn count;\n}\n\n// Repeats a string (or a symbol) N times.\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\nfunction repeat(string, times) {\n\tif (times < 1) {\n\t\treturn '';\n\t}\n\n\tvar result = '';\n\n\twhile (times > 1) {\n\t\tif (times & 1) {\n\t\t\tresult += string;\n\t\t}\n\n\t\ttimes >>= 1;\n\t\tstring += string;\n\t}\n\n\treturn result + string;\n}\n//# sourceMappingURL=as you type.js.map\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__parse__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__metadata__ = __webpack_require__(10);\n/* harmony export (immutable) */ exports[\"a\"] = is_valid;\n\n\n\n\nfunction is_valid(parsed, country_code) {\n\tif (!parsed) {\n\t\treturn false;\n\t}\n\n\tif (typeof parsed === 'string') {\n\t\tparsed = __WEBPACK_IMPORTED_MODULE_0__parse__[\"a\" /* default */].call(this, parsed, country_code);\n\t}\n\n\tif (!parsed.country) {\n\t\treturn false;\n\t}\n\n\tvar country_metadata = this.metadata.countries[parsed.country];\n\n\tif (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__metadata__[\"y\" /* get_types */])(country_metadata)) {\n\t\tif (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__parse__[\"i\" /* get_number_type */])(parsed.phone, country_metadata)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n//# sourceMappingURL=validate.js.map\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__metadata_min__ = __webpack_require__(82);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__metadata_min___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__metadata_min__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__custom_es6__ = __webpack_require__(78);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"parse\", function() { return parse; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"format\", function() { return format; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"is_valid_number\", function() { return is_valid_number; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"isValidNumber\", function() { return isValidNumber; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"as_you_type\", function() { return as_you_type; });\n/* harmony export (binding) */ __webpack_require__.d(exports, \"asYouType\", function() { return asYouType; });\n\n\n\n\n// `const` is not supported in Internet Explorer 10\n\nvar context = { metadata: __WEBPACK_IMPORTED_MODULE_0__metadata_min___default.a }\n\nvar parse  = __WEBPACK_IMPORTED_MODULE_1__custom_es6__[\"a\" /* parse */].bind(context)\nvar format = __WEBPACK_IMPORTED_MODULE_1__custom_es6__[\"b\" /* format */].bind(context)\n\nvar is_valid_number = __WEBPACK_IMPORTED_MODULE_1__custom_es6__[\"c\" /* is_valid_number */].bind(context)\nvar isValidNumber   = is_valid_number\n\nvar as_you_type = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__custom_es6__[\"d\" /* as_you_type */])(__WEBPACK_IMPORTED_MODULE_0__metadata_min___default.a)\nvar asYouType   = as_you_type\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\nmodule.exports = {\n\t\"country_phone_code_to_countries\": {\n\t\t\"1\": [\n\t\t\t\"US\",\n\t\t\t\"AG\",\n\t\t\t\"AI\",\n\t\t\t\"AS\",\n\t\t\t\"BB\",\n\t\t\t\"BM\",\n\t\t\t\"BS\",\n\t\t\t\"CA\",\n\t\t\t\"DM\",\n\t\t\t\"DO\",\n\t\t\t\"GD\",\n\t\t\t\"GU\",\n\t\t\t\"JM\",\n\t\t\t\"KN\",\n\t\t\t\"KY\",\n\t\t\t\"LC\",\n\t\t\t\"MP\",\n\t\t\t\"MS\",\n\t\t\t\"PR\",\n\t\t\t\"SX\",\n\t\t\t\"TC\",\n\t\t\t\"TT\",\n\t\t\t\"VC\",\n\t\t\t\"VG\",\n\t\t\t\"VI\"\n\t\t],\n\t\t\"7\": [\n\t\t\t\"RU\",\n\t\t\t\"KZ\"\n\t\t],\n\t\t\"20\": [\n\t\t\t\"EG\"\n\t\t],\n\t\t\"27\": [\n\t\t\t\"ZA\"\n\t\t],\n\t\t\"30\": [\n\t\t\t\"GR\"\n\t\t],\n\t\t\"31\": [\n\t\t\t\"NL\"\n\t\t],\n\t\t\"32\": [\n\t\t\t\"BE\"\n\t\t],\n\t\t\"33\": [\n\t\t\t\"FR\"\n\t\t],\n\t\t\"34\": [\n\t\t\t\"ES\"\n\t\t],\n\t\t\"36\": [\n\t\t\t\"HU\"\n\t\t],\n\t\t\"39\": [\n\t\t\t\"IT\",\n\t\t\t\"VA\"\n\t\t],\n\t\t\"40\": [\n\t\t\t\"RO\"\n\t\t],\n\t\t\"41\": [\n\t\t\t\"CH\"\n\t\t],\n\t\t\"43\": [\n\t\t\t\"AT\"\n\t\t],\n\t\t\"44\": [\n\t\t\t\"GB\",\n\t\t\t\"GG\",\n\t\t\t\"IM\",\n\t\t\t\"JE\"\n\t\t],\n\t\t\"45\": [\n\t\t\t\"DK\"\n\t\t],\n\t\t\"46\": [\n\t\t\t\"SE\"\n\t\t],\n\t\t\"47\": [\n\t\t\t\"NO\",\n\t\t\t\"SJ\"\n\t\t],\n\t\t\"48\": [\n\t\t\t\"PL\"\n\t\t],\n\t\t\"49\": [\n\t\t\t\"DE\"\n\t\t],\n\t\t\"51\": [\n\t\t\t\"PE\"\n\t\t],\n\t\t\"52\": [\n\t\t\t\"MX\"\n\t\t],\n\t\t\"53\": [\n\t\t\t\"CU\"\n\t\t],\n\t\t\"54\": [\n\t\t\t\"AR\"\n\t\t],\n\t\t\"55\": [\n\t\t\t\"BR\"\n\t\t],\n\t\t\"56\": [\n\t\t\t\"CL\"\n\t\t],\n\t\t\"57\": [\n\t\t\t\"CO\"\n\t\t],\n\t\t\"58\": [\n\t\t\t\"VE\"\n\t\t],\n\t\t\"60\": [\n\t\t\t\"MY\"\n\t\t],\n\t\t\"61\": [\n\t\t\t\"AU\",\n\t\t\t\"CC\",\n\t\t\t\"CX\"\n\t\t],\n\t\t\"62\": [\n\t\t\t\"ID\"\n\t\t],\n\t\t\"63\": [\n\t\t\t\"PH\"\n\t\t],\n\t\t\"64\": [\n\t\t\t\"NZ\"\n\t\t],\n\t\t\"65\": [\n\t\t\t\"SG\"\n\t\t],\n\t\t\"66\": [\n\t\t\t\"TH\"\n\t\t],\n\t\t\"81\": [\n\t\t\t\"JP\"\n\t\t],\n\t\t\"82\": [\n\t\t\t\"KR\"\n\t\t],\n\t\t\"84\": [\n\t\t\t\"VN\"\n\t\t],\n\t\t\"86\": [\n\t\t\t\"CN\"\n\t\t],\n\t\t\"90\": [\n\t\t\t\"TR\"\n\t\t],\n\t\t\"91\": [\n\t\t\t\"IN\"\n\t\t],\n\t\t\"92\": [\n\t\t\t\"PK\"\n\t\t],\n\t\t\"93\": [\n\t\t\t\"AF\"\n\t\t],\n\t\t\"94\": [\n\t\t\t\"LK\"\n\t\t],\n\t\t\"95\": [\n\t\t\t\"MM\"\n\t\t],\n\t\t\"98\": [\n\t\t\t\"IR\"\n\t\t],\n\t\t\"211\": [\n\t\t\t\"SS\"\n\t\t],\n\t\t\"212\": [\n\t\t\t\"MA\",\n\t\t\t\"EH\"\n\t\t],\n\t\t\"213\": [\n\t\t\t\"DZ\"\n\t\t],\n\t\t\"216\": [\n\t\t\t\"TN\"\n\t\t],\n\t\t\"218\": [\n\t\t\t\"LY\"\n\t\t],\n\t\t\"220\": [\n\t\t\t\"GM\"\n\t\t],\n\t\t\"221\": [\n\t\t\t\"SN\"\n\t\t],\n\t\t\"222\": [\n\t\t\t\"MR\"\n\t\t],\n\t\t\"223\": [\n\t\t\t\"ML\"\n\t\t],\n\t\t\"224\": [\n\t\t\t\"GN\"\n\t\t],\n\t\t\"225\": [\n\t\t\t\"CI\"\n\t\t],\n\t\t\"226\": [\n\t\t\t\"BF\"\n\t\t],\n\t\t\"227\": [\n\t\t\t\"NE\"\n\t\t],\n\t\t\"228\": [\n\t\t\t\"TG\"\n\t\t],\n\t\t\"229\": [\n\t\t\t\"BJ\"\n\t\t],\n\t\t\"230\": [\n\t\t\t\"MU\"\n\t\t],\n\t\t\"231\": [\n\t\t\t\"LR\"\n\t\t],\n\t\t\"232\": [\n\t\t\t\"SL\"\n\t\t],\n\t\t\"233\": [\n\t\t\t\"GH\"\n\t\t],\n\t\t\"234\": [\n\t\t\t\"NG\"\n\t\t],\n\t\t\"235\": [\n\t\t\t\"TD\"\n\t\t],\n\t\t\"236\": [\n\t\t\t\"CF\"\n\t\t],\n\t\t\"237\": [\n\t\t\t\"CM\"\n\t\t],\n\t\t\"238\": [\n\t\t\t\"CV\"\n\t\t],\n\t\t\"239\": [\n\t\t\t\"ST\"\n\t\t],\n\t\t\"240\": [\n\t\t\t\"GQ\"\n\t\t],\n\t\t\"241\": [\n\t\t\t\"GA\"\n\t\t],\n\t\t\"242\": [\n\t\t\t\"CG\"\n\t\t],\n\t\t\"243\": [\n\t\t\t\"CD\"\n\t\t],\n\t\t\"244\": [\n\t\t\t\"AO\"\n\t\t],\n\t\t\"245\": [\n\t\t\t\"GW\"\n\t\t],\n\t\t\"246\": [\n\t\t\t\"IO\"\n\t\t],\n\t\t\"247\": [\n\t\t\t\"AC\"\n\t\t],\n\t\t\"248\": [\n\t\t\t\"SC\"\n\t\t],\n\t\t\"249\": [\n\t\t\t\"SD\"\n\t\t],\n\t\t\"250\": [\n\t\t\t\"RW\"\n\t\t],\n\t\t\"251\": [\n\t\t\t\"ET\"\n\t\t],\n\t\t\"252\": [\n\t\t\t\"SO\"\n\t\t],\n\t\t\"253\": [\n\t\t\t\"DJ\"\n\t\t],\n\t\t\"254\": [\n\t\t\t\"KE\"\n\t\t],\n\t\t\"255\": [\n\t\t\t\"TZ\"\n\t\t],\n\t\t\"256\": [\n\t\t\t\"UG\"\n\t\t],\n\t\t\"257\": [\n\t\t\t\"BI\"\n\t\t],\n\t\t\"258\": [\n\t\t\t\"MZ\"\n\t\t],\n\t\t\"260\": [\n\t\t\t\"ZM\"\n\t\t],\n\t\t\"261\": [\n\t\t\t\"MG\"\n\t\t],\n\t\t\"262\": [\n\t\t\t\"RE\",\n\t\t\t\"YT\"\n\t\t],\n\t\t\"263\": [\n\t\t\t\"ZW\"\n\t\t],\n\t\t\"264\": [\n\t\t\t\"NA\"\n\t\t],\n\t\t\"265\": [\n\t\t\t\"MW\"\n\t\t],\n\t\t\"266\": [\n\t\t\t\"LS\"\n\t\t],\n\t\t\"267\": [\n\t\t\t\"BW\"\n\t\t],\n\t\t\"268\": [\n\t\t\t\"SZ\"\n\t\t],\n\t\t\"269\": [\n\t\t\t\"KM\"\n\t\t],\n\t\t\"290\": [\n\t\t\t\"SH\",\n\t\t\t\"TA\"\n\t\t],\n\t\t\"291\": [\n\t\t\t\"ER\"\n\t\t],\n\t\t\"297\": [\n\t\t\t\"AW\"\n\t\t],\n\t\t\"298\": [\n\t\t\t\"FO\"\n\t\t],\n\t\t\"299\": [\n\t\t\t\"GL\"\n\t\t],\n\t\t\"350\": [\n\t\t\t\"GI\"\n\t\t],\n\t\t\"351\": [\n\t\t\t\"PT\"\n\t\t],\n\t\t\"352\": [\n\t\t\t\"LU\"\n\t\t],\n\t\t\"353\": [\n\t\t\t\"IE\"\n\t\t],\n\t\t\"354\": [\n\t\t\t\"IS\"\n\t\t],\n\t\t\"355\": [\n\t\t\t\"AL\"\n\t\t],\n\t\t\"356\": [\n\t\t\t\"MT\"\n\t\t],\n\t\t\"357\": [\n\t\t\t\"CY\"\n\t\t],\n\t\t\"358\": [\n\t\t\t\"FI\",\n\t\t\t\"AX\"\n\t\t],\n\t\t\"359\": [\n\t\t\t\"BG\"\n\t\t],\n\t\t\"370\": [\n\t\t\t\"LT\"\n\t\t],\n\t\t\"371\": [\n\t\t\t\"LV\"\n\t\t],\n\t\t\"372\": [\n\t\t\t\"EE\"\n\t\t],\n\t\t\"373\": [\n\t\t\t\"MD\"\n\t\t],\n\t\t\"374\": [\n\t\t\t\"AM\"\n\t\t],\n\t\t\"375\": [\n\t\t\t\"BY\"\n\t\t],\n\t\t\"376\": [\n\t\t\t\"AD\"\n\t\t],\n\t\t\"377\": [\n\t\t\t\"MC\"\n\t\t],\n\t\t\"378\": [\n\t\t\t\"SM\"\n\t\t],\n\t\t\"380\": [\n\t\t\t\"UA\"\n\t\t],\n\t\t\"381\": [\n\t\t\t\"RS\"\n\t\t],\n\t\t\"382\": [\n\t\t\t\"ME\"\n\t\t],\n\t\t\"385\": [\n\t\t\t\"HR\"\n\t\t],\n\t\t\"386\": [\n\t\t\t\"SI\"\n\t\t],\n\t\t\"387\": [\n\t\t\t\"BA\"\n\t\t],\n\t\t\"389\": [\n\t\t\t\"MK\"\n\t\t],\n\t\t\"420\": [\n\t\t\t\"CZ\"\n\t\t],\n\t\t\"421\": [\n\t\t\t\"SK\"\n\t\t],\n\t\t\"423\": [\n\t\t\t\"LI\"\n\t\t],\n\t\t\"500\": [\n\t\t\t\"FK\"\n\t\t],\n\t\t\"501\": [\n\t\t\t\"BZ\"\n\t\t],\n\t\t\"502\": [\n\t\t\t\"GT\"\n\t\t],\n\t\t\"503\": [\n\t\t\t\"SV\"\n\t\t],\n\t\t\"504\": [\n\t\t\t\"HN\"\n\t\t],\n\t\t\"505\": [\n\t\t\t\"NI\"\n\t\t],\n\t\t\"506\": [\n\t\t\t\"CR\"\n\t\t],\n\t\t\"507\": [\n\t\t\t\"PA\"\n\t\t],\n\t\t\"508\": [\n\t\t\t\"PM\"\n\t\t],\n\t\t\"509\": [\n\t\t\t\"HT\"\n\t\t],\n\t\t\"590\": [\n\t\t\t\"GP\",\n\t\t\t\"BL\",\n\t\t\t\"MF\"\n\t\t],\n\t\t\"591\": [\n\t\t\t\"BO\"\n\t\t],\n\t\t\"592\": [\n\t\t\t\"GY\"\n\t\t],\n\t\t\"593\": [\n\t\t\t\"EC\"\n\t\t],\n\t\t\"594\": [\n\t\t\t\"GF\"\n\t\t],\n\t\t\"595\": [\n\t\t\t\"PY\"\n\t\t],\n\t\t\"596\": [\n\t\t\t\"MQ\"\n\t\t],\n\t\t\"597\": [\n\t\t\t\"SR\"\n\t\t],\n\t\t\"598\": [\n\t\t\t\"UY\"\n\t\t],\n\t\t\"599\": [\n\t\t\t\"CW\",\n\t\t\t\"BQ\"\n\t\t],\n\t\t\"670\": [\n\t\t\t\"TL\"\n\t\t],\n\t\t\"672\": [\n\t\t\t\"NF\"\n\t\t],\n\t\t\"673\": [\n\t\t\t\"BN\"\n\t\t],\n\t\t\"674\": [\n\t\t\t\"NR\"\n\t\t],\n\t\t\"675\": [\n\t\t\t\"PG\"\n\t\t],\n\t\t\"676\": [\n\t\t\t\"TO\"\n\t\t],\n\t\t\"677\": [\n\t\t\t\"SB\"\n\t\t],\n\t\t\"678\": [\n\t\t\t\"VU\"\n\t\t],\n\t\t\"679\": [\n\t\t\t\"FJ\"\n\t\t],\n\t\t\"680\": [\n\t\t\t\"PW\"\n\t\t],\n\t\t\"681\": [\n\t\t\t\"WF\"\n\t\t],\n\t\t\"682\": [\n\t\t\t\"CK\"\n\t\t],\n\t\t\"683\": [\n\t\t\t\"NU\"\n\t\t],\n\t\t\"685\": [\n\t\t\t\"WS\"\n\t\t],\n\t\t\"686\": [\n\t\t\t\"KI\"\n\t\t],\n\t\t\"687\": [\n\t\t\t\"NC\"\n\t\t],\n\t\t\"688\": [\n\t\t\t\"TV\"\n\t\t],\n\t\t\"689\": [\n\t\t\t\"PF\"\n\t\t],\n\t\t\"690\": [\n\t\t\t\"TK\"\n\t\t],\n\t\t\"691\": [\n\t\t\t\"FM\"\n\t\t],\n\t\t\"692\": [\n\t\t\t\"MH\"\n\t\t],\n\t\t\"800\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"808\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"850\": [\n\t\t\t\"KP\"\n\t\t],\n\t\t\"852\": [\n\t\t\t\"HK\"\n\t\t],\n\t\t\"853\": [\n\t\t\t\"MO\"\n\t\t],\n\t\t\"855\": [\n\t\t\t\"KH\"\n\t\t],\n\t\t\"856\": [\n\t\t\t\"LA\"\n\t\t],\n\t\t\"870\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"878\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"880\": [\n\t\t\t\"BD\"\n\t\t],\n\t\t\"881\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"882\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"883\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"886\": [\n\t\t\t\"TW\"\n\t\t],\n\t\t\"888\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"960\": [\n\t\t\t\"MV\"\n\t\t],\n\t\t\"961\": [\n\t\t\t\"LB\"\n\t\t],\n\t\t\"962\": [\n\t\t\t\"JO\"\n\t\t],\n\t\t\"963\": [\n\t\t\t\"SY\"\n\t\t],\n\t\t\"964\": [\n\t\t\t\"IQ\"\n\t\t],\n\t\t\"965\": [\n\t\t\t\"KW\"\n\t\t],\n\t\t\"966\": [\n\t\t\t\"SA\"\n\t\t],\n\t\t\"967\": [\n\t\t\t\"YE\"\n\t\t],\n\t\t\"968\": [\n\t\t\t\"OM\"\n\t\t],\n\t\t\"970\": [\n\t\t\t\"PS\"\n\t\t],\n\t\t\"971\": [\n\t\t\t\"AE\"\n\t\t],\n\t\t\"972\": [\n\t\t\t\"IL\"\n\t\t],\n\t\t\"973\": [\n\t\t\t\"BH\"\n\t\t],\n\t\t\"974\": [\n\t\t\t\"QA\"\n\t\t],\n\t\t\"975\": [\n\t\t\t\"BT\"\n\t\t],\n\t\t\"976\": [\n\t\t\t\"MN\"\n\t\t],\n\t\t\"977\": [\n\t\t\t\"NP\"\n\t\t],\n\t\t\"979\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"992\": [\n\t\t\t\"TJ\"\n\t\t],\n\t\t\"993\": [\n\t\t\t\"TM\"\n\t\t],\n\t\t\"994\": [\n\t\t\t\"AZ\"\n\t\t],\n\t\t\"995\": [\n\t\t\t\"GE\"\n\t\t],\n\t\t\"996\": [\n\t\t\t\"KG\"\n\t\t],\n\t\t\"998\": [\n\t\t\t\"UZ\"\n\t\t]\n\t},\n\t\"countries\": {\n\t\t\"AC\": [\n\t\t\t\"247\",\n\t\t\t\"[46]\\\\d{4}|[01589]\\\\d{5}\"\n\t\t],\n\t\t\"AD\": [\n\t\t\t\"376\",\n\t\t\t\"[16]\\\\d{5,8}|[37-9]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[137-9]|6[0-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"180[02]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"690\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"AE\": [\n\t\t\t\"971\",\n\t\t\t\"[2-79]\\\\d{7,8}|800\\\\d{2,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-4679])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-4679][2-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([479]00)(\\\\d)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[479]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([68]00)(\\\\d{2,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"60|8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"AF\": [\n\t\t\t\"93\",\n\t\t\t\"[2-7]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-7]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-7]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"AG\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"268\"\n\t\t],\n\t\t\"AI\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"264\"\n\t\t],\n\t\t\"AL\": [\n\t\t\t\"355\",\n\t\t\t\"[2-57]\\\\d{7}|6\\\\d{8}|8\\\\d{5,7}|9\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(4)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[0-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6[6-9])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2358][2-5]|4[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235][16-9]|8[016-9]|[79]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"AM\": [\n\t\t\t\"374\",\n\t\t\t\"[1-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|47\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[1349]|[5-7]|9[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8|90\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0 $1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"AO\": [\n\t\t\t\"244\",\n\t\t\t\"[29]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"AR\": [\n\t\t\t\"54\",\n\t\t\t\"11\\\\d{8}|[2368]\\\\d{9}|9\\\\d{10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([68]\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[68]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(11)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$2 15-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"911\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3-$4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$2 15-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9(?:2[234689]|3[3-8])\",\n\t\t\t\t\t\t\"9(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578]))\",\n\t\t\t\t\t\t\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\",\n\t\t\t\t\t\t\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3-$4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$2 15-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[23]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3-$4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(11)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578])\",\n\t\t\t\t\t\t\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\",\n\t\t\t\t\t\t\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\t\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?\",\n\t\t\t\"9$1\"\n\t\t],\n\t\t\"AS\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"684\"\n\t\t],\n\t\t\"AT\": [\n\t\t\t\"43\",\n\t\t\t\"[1-9]\\\\d{3,12}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(116\\\\d{3})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"116\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3,12})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5[079]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5[079]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{4})(\\\\d{4,7})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5[079]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"316|46|51|732|6(?:5[0-3579]|[6-9])|7(?:[28]0)|[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:2[1-8]|35|4[1-8]|[5-79])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"AU\": [\n\t\t\t\"61\",\n\t\t\t\"[1-578]\\\\d{5,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2378])(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2378]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[45]|14\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(16)(\\\\d{3})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"16\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[38]0|90)\",\n\t\t\t\t\t\t\"1(?:[38]00|90)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(180)(2\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"1802\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[13]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[679]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(13)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"[237]\\\\d{8}|8(?:[6-8]\\\\d{3}|9(?:[02-9]\\\\d{2}|1(?:[0-57-9]\\\\d|6[0135-9])))\\\\d{4}\",\n\t\t\t\t\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\",\n\t\t\t\t\"180(?:0\\\\d{3}|2)\\\\d{3}\",\n\t\t\t\t\"19(?:0[0126]\\\\d|[679])\\\\d{5}\",\n\t\t\t\t\"500\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"16\\\\d{3,7}\",\n\t\t\t\t\"550\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"AW\": [\n\t\t\t\"297\",\n\t\t\t\"[25-9]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"AX\": [\n\t\t\t\"358\",\n\t\t\t\"[135]\\\\d{5,9}|[27]\\\\d{4,9}|4\\\\d{5,10}|6\\\\d{7,8}|8\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[1-3]00|[6-8]0)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(116\\\\d{3})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"116\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[14]|2[09]|50|7[135]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[25689][1-8]|3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"18[1-8]\\\\d{3,9}\",\n\t\t\t\t\"4\\\\d{5,10}|50\\\\d{4,8}\",\n\t\t\t\t\"800\\\\d{4,7}\",\n\t\t\t\t\"[67]00\\\\d{5,6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\"\n\t\t\t]\n\t\t],\n\t\t\"AZ\": [\n\t\t\t\"994\",\n\t\t\t\"[1-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:1[28]|2(?:[45]2|[0-36])|365)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-8]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"BA\": [\n\t\t\t\"387\",\n\t\t\t\"[3-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[1-356]|[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[047]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"BB\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"246\"\n\t\t],\n\t\t\"BD\": [\n\t\t\t\"880\",\n\t\t\t\"[2-79]\\\\d{5,9}|1\\\\d{9}|8[0-7]\\\\d{4,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{7,8})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-79]1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3,6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[016])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-79][2-9]|8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"BE\": [\n\t\t\t\"32\",\n\t\t\t\"[1-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[6-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]|4[23]|9[2-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[156]|7[018]|8(?:0[1-9]|[1-79])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:80|9)0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"BF\": [\n\t\t\t\"226\",\n\t\t\t\"[25-7]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BG\": [\n\t\t\t\"359\",\n\t\t\t\"[23567]\\\\d{5,7}|[489]\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"43[124-7]|70[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"43[124-7]|70[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[78]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"999\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"48|8[7-9]|9[08]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"BH\": [\n\t\t\t\"973\",\n\t\t\t\"[136-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BI\": [\n\t\t\t\"257\",\n\t\t\t\"[267]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BJ\": [\n\t\t\t\"229\",\n\t\t\t\"[2689]\\\\d{7}|7\\\\d{3}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BL\": [\n\t\t\t\"590\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([56]90)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"590(?:2[7-9]|5[12]|87)\\\\d{4}\",\n\t\t\t\t\"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\"\n\t\t\t]\n\t\t],\n\t\t\"BM\": [\n\t\t\t\"1\",\n\t\t\t\"[4589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"441\"\n\t\t],\n\t\t\"BN\": [\n\t\t\t\"673\",\n\t\t\t\"[2-578]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-578]\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BO\": [\n\t\t\t\"591\",\n\t\t\t\"[23467]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([234])(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[234]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([67]\\\\d{7})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[67]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"0(1\\\\d)?\"\n\t\t],\n\t\t\"BQ\": [\n\t\t\t\"599\",\n\t\t\t\"[347]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:318[023]|416[023]|7(?:1[578]|50)\\\\d)\\\\d{3}\",\n\t\t\t\t\"(?:318[14-68]|416[15-9]|7(?:0[01]|7[07]|[89]\\\\d)\\\\d)\\\\d{3}\"\n\t\t\t]\n\t\t],\n\t\t\"BR\": [\n\t\t\t\"55\",\n\t\t\t\"[1-46-9]\\\\d{7,10}|5(?:[0-4]\\\\d{7,9}|5(?:[2-8]\\\\d{7}|9\\\\d{7,8}))\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[14689][1-9]|2[12478]|3[1-578]|5[1-5]|7[13-579])9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-9][1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:300|40(?:0|20))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3589]00)(\\\\d{2,3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3589]00\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\n\t\t\t\"$2\"\n\t\t],\n\t\t\"BS\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"242\"\n\t\t],\n\t\t\"BT\": [\n\t\t\t\"975\",\n\t\t\t\"[1-8]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|77\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-8])(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-68]|7[246]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BW\": [\n\t\t\t\"267\",\n\t\t\t\"[2-79]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(90)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BY\": [\n\t\t\t\"375\",\n\t\t\t\"[1-4]\\\\d{8}|800\\\\d{3,7}|[89]\\\\d{9,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"17[0-3589]|2[4-9]|[34]\",\n\t\t\t\t\t\t\"17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])\",\n\t\t\t\t\t\t\"1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\n\t\t\t\t\t\t\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[01]|9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(82\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"82\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{2})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\tnull,\n\t\t\t\"8?0?\"\n\t\t],\n\t\t\"BZ\": [\n\t\t\t\"501\",\n\t\t\t\"[2-8]\\\\d{6}|0\\\\d{10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0)(800)(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CA\": [\n\t\t\t\"1\",\n\t\t\t\"[2-9]\\\\d{9}|3\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}|310\\\\d{4}\",\n\t\t\t\t\"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",\n\t\t\t\t\"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}|310\\\\d{4}\",\n\t\t\t\t\"900[2-9]\\\\d{6}\",\n\t\t\t\t\"5(?:00|22|33|44|66|77|88)[2-9]\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"CC\": [\n\t\t\t\"61\",\n\t\t\t\"[1458]\\\\d{5,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2378])(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2378]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[45]|14\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(16)(\\\\d{3})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"16\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[38]0|90)\",\n\t\t\t\t\t\t\"1(?:[38]00|90)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(180)(2\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"1802\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[13]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[679]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(13)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"89162\\\\d{4}\",\n\t\t\t\t\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-2]\\\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\",\n\t\t\t\t\"180(?:0\\\\d{3}|2)\\\\d{3}\",\n\t\t\t\t\"190[0126]\\\\d{6}\",\n\t\t\t\t\"500\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"550\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"CD\": [\n\t\t\t\"243\",\n\t\t\t\"[2-6]\\\\d{6}|[18]\\\\d{6,8}|9\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"12\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[0-2459]|9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"88\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-6]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"CF\": [\n\t\t\t\"236\",\n\t\t\t\"[278]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CG\": [\n\t\t\t\"242\",\n\t\t\t\"[028]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[02]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CH\": [\n\t\t\t\"41\",\n\t\t\t\"[2-9]\\\\d{8}|860\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-9]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-7]|[89]1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[047]|90\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"860\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"CI\": [\n\t\t\t\"225\",\n\t\t\t\"[02-8]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CK\": [\n\t\t\t\"682\",\n\t\t\t\"[2-8]\\\\d{4}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CL\": [\n\t\t\t\"56\",\n\t\t\t\"(?:[2-9]|600|123)\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[23]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[357]|4[1-35]|6[13-57]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(44)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"44\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([68]00)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"60|8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"60\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1230)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"219\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\t\"0|(1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))\"\n\t\t],\n\t\t\"CM\": [\n\t\t\t\"237\",\n\t\t\t\"[2368]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([26])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]|88\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CN\": [\n\t\t\t\"86\",\n\t\t\t\"[1-7]\\\\d{6,11}|8[0-357-9]\\\\d{6,9}|9\\\\d{7,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80[2678]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([48]00)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[48]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:10|2\\\\d)[19]\",\n\t\t\t\t\t\t\"(?:10|2\\\\d)(?:10|9[56])\",\n\t\t\t\t\t\t\"(?:10|2\\\\d)(?:100|9[56])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-9]\",\n\t\t\t\t\t\t\"[3-9]\\\\d{2}[19]\",\n\t\t\t\t\t\t\"[3-9]\\\\d{2}(?:10|9[56])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(21)(\\\\d{4})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([12]\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"10[1-9]|2[02-9]\",\n\t\t\t\t\t\t\"10[1-9]|2[02-9]\",\n\t\t\t\t\t\t\"10(?:[1-79]|8(?:[1-9]|0[1-9]))|2[02-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[4789]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"807\",\n\t\t\t\t\t\t\"8078\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[3-578]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(10800)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"108\",\n\t\t\t\t\t\t\"1080\",\n\t\t\t\t\t\t\"10800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"950\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"(1(?:[129]\\\\d{3}|79\\\\d{2}))|0\"\n\t\t],\n\t\t\"CO\": [\n\t\t\t\"57\",\n\t\t\t\"(?:[13]\\\\d{0,3}|[24-8])\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:8[2-9]|9[0-3]|[2-7])|[24-8]\",\n\t\t\t\t\t\t\"1(?:8[2-9]|9(?:09|[1-3])|[2-7])|[24-8]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3})(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:80|9[04])\",\n\t\t\t\t\t\t\"1(?:800|9(?:0[01]|4[78]))\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"0([3579]|4(?:44|56))?\"\n\t\t],\n\t\t\"CR\": [\n\t\t\t\"506\",\n\t\t\t\"[24-9]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24-7]|8[3-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"(19(?:0[012468]|1[09]|20|66|77|99))\"\n\t\t],\n\t\t\"CU\": [\n\t\t\t\"53\",\n\t\t\t\"[2-57]\\\\d{5,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{6,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"CV\": [\n\t\t\t\"238\",\n\t\t\t\"[259]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CW\": [\n\t\t\t\"599\",\n\t\t\t\"[169]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"9(?:[48]\\\\d{2}|50\\\\d|7(?:2[0-24]|[34]\\\\d|6[35-7]|77|8[7-9]))\\\\d{4}\",\n\t\t\t\t\"9(?:5(?:[12467]\\\\d|3[01])|6(?:[15-9]\\\\d|3[01]))\\\\d{4}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"955\\\\d{5}\"\n\t\t\t]\n\t\t],\n\t\t\"CX\": [\n\t\t\t\"61\",\n\t\t\t\"[1458]\\\\d{5,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2378])(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2378]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[45]|14\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(16)(\\\\d{3})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"16\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[38]0|90)\",\n\t\t\t\t\t\t\"1(?:[38]00|90)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(180)(2\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"1802\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[13]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[679]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(13)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"89164\\\\d{4}\",\n\t\t\t\t\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-2]\\\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\",\n\t\t\t\t\"180(?:0\\\\d{3}|2)\\\\d{3}\",\n\t\t\t\t\"190[0126]\\\\d{6}\",\n\t\t\t\t\"500\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"550\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"CY\": [\n\t\t\t\"357\",\n\t\t\t\"[257-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CZ\": [\n\t\t\t\"420\",\n\t\t\t\"[2-8]\\\\d{8}|9\\\\d{8,11}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-8]|9[015-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(96\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"96\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[36]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"DE\": [\n\t\t\t\"49\",\n\t\t\t\"[1-35-9]\\\\d{3,14}|4(?:[0-8]\\\\d{4,12}|9(?:[0-37]\\\\d|4(?:[1-35-8]|4\\\\d?)|5\\\\d{1,2}|6[1-8]\\\\d?)\\\\d{2,8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{2})(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(15\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15[0568]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3[02]|40|[68]9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:\\\\d1|0[2389]|1[24]|28|34)|3(?:[3-9][15]|40)|[4-8][1-9]1|9(?:06|[1-9]1)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{2,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24-6]|[7-9](?:\\\\d[1-9]|[1-9]\\\\d)|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])\",\n\t\t\t\t\t\t\"[24-6]|[7-9](?:\\\\d[1-9]|[1-9]\\\\d)|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|4[1246]|6[1-4]|7[1346]|8[13568]|9[1246])|6(?:0[356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(3\\\\d{4})(\\\\d{1,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{7,12})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:18|90)0|137\",\n\t\t\t\t\t\t\"1(?:37|80)|900[1359]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{2})(\\\\d{5,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"181\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(18\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"185\",\n\t\t\t\t\t\t\"1850\",\n\t\t\t\t\t\t\"18500\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(18\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"18[68]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(18\\\\d)(\\\\d{8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"18[2-579]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(700)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"700\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(138)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"138\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(15[013-68])(\\\\d{2})(\\\\d{8})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15[013-68]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(15[279]\\\\d)(\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15[279]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[67]\\\\d)(\\\\d{2})(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:6[023]|7)\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"DJ\": [\n\t\t\t\"253\",\n\t\t\t\"[27]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"DK\": [\n\t\t\t\"45\",\n\t\t\t\"[2-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"DM\": [\n\t\t\t\"1\",\n\t\t\t\"[57-9]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"767\"\n\t\t],\n\t\t\"DO\": [\n\t\t\t\"1\",\n\t\t\t\"[589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"8[024]9\"\n\t\t],\n\t\t\"DZ\": [\n\t\t\t\"213\",\n\t\t\t\"(?:[1-4]|[5-9]\\\\d)\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-4]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([5-8]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[5-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"EC\": [\n\t\t\t\"593\",\n\t\t\t\"1\\\\d{9,10}|[2-8]\\\\d{7}|9\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[247]|[356][2-8]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1800)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"EE\": [\n\t\t\t\"372\",\n\t\t\t\"1\\\\d{3,4}|[3-9]\\\\d{6,7}|800\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3-79]\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]\",\n\t\t\t\t\t\t\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(70)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8000)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8000\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([458]\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"40|5|8(?:00|[1-5])\",\n\t\t\t\t\t\t\"40|5|8(?:00[1-9]|[1-5])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"EG\": [\n\t\t\t\"20\",\n\t\t\t\"1\\\\d{4,9}|[2456]\\\\d{8}|3\\\\d{7}|[89]\\\\d{8,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[012]|[89]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[35]|[4-6]|[89][2-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"EH\": [\n\t\t\t\"212\",\n\t\t\t\"[5-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([5-7]\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:2[015-7]|3[0-4])|[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:2[2-489]|3[5-9]|92)|892\",\n\t\t\t\t\t\t\"5(?:2(?:[2-48]|90)|3(?:[5-79]|80)|924)|892\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:29|38)\",\n\t\t\t\t\t\t\"5(?:29|38)[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:4[067]|5[03])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8[09])(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:0|9[013-9])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"528[89]\"\n\t\t],\n\t\t\"ER\": [\n\t\t\t\"291\",\n\t\t\t\"[178]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ES\": [\n\t\t\t\"34\",\n\t\t\t\"[5-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([89]00)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([5-9]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[568]|[79][0-8]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"ET\": [\n\t\t\t\"251\",\n\t\t\t\"[1-59]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-59]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"FI\": [\n\t\t\t\"358\",\n\t\t\t\"1\\\\d{4,11}|[2-9]\\\\d{4,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[1-3]00|[6-8]0)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(116\\\\d{3})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"116\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[14]|2[09]|50|7[135]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[25689][1-8]|3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"1(?:[3569][1-8]\\\\d{3,9}|[47]\\\\d{5,10})|2[1-8]\\\\d{3,9}|3(?:[1-8]\\\\d{3,9}|9\\\\d{4,8})|[5689][1-8]\\\\d{3,9}\",\n\t\t\t\t\"4\\\\d{5,10}|50\\\\d{4,8}\",\n\t\t\t\t\"800\\\\d{4,7}\",\n\t\t\t\t\"[67]00\\\\d{5,6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\"\n\t\t\t]\n\t\t],\n\t\t\"FJ\": [\n\t\t\t\"679\",\n\t\t\t\"[36-9]\\\\d{6}|0\\\\d{10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[36-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"FK\": [\n\t\t\t\"500\",\n\t\t\t\"[2-7]\\\\d{4}\"\n\t\t],\n\t\t\"FM\": [\n\t\t\t\"691\",\n\t\t\t\"[39]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"FO\": [\n\t\t\t\"298\",\n\t\t\t\"[2-9]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{6})\",\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"(10(?:01|[12]0|88))\"\n\t\t],\n\t\t\"FR\": [\n\t\t\t\"33\",\n\t\t\t\"[1-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-79]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0 $1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"GA\": [\n\t\t\t\"241\",\n\t\t\t\"0?\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-7]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GB\": [\n\t\t\t\"44\",\n\t\t\t\"\\\\d{7,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6[013-9])\",\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:1|\\\\d1)|3|9[018]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:38|5[23]|69|76|94)\",\n\t\t\t\t\t\t\"1(?:387|5(?:24|39)|697|768|946)\",\n\t\t\t\t\t\t\"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[1-5789]|62)\",\n\t\t\t\t\t\t\"7(?:[1-5789]|624)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8001\",\n\t\t\t\t\t\t\"80011\",\n\t\t\t\t\t\t\"800111\",\n\t\t\t\t\t\t\"8001111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(845)(46)(4\\\\d)\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"845\",\n\t\t\t\t\t\t\"8454\",\n\t\t\t\t\t\t\"84546\",\n\t\t\t\t\t\t\"845464\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:4[2-5]|7[0-3])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[012])\\\\d{7}|1(?:(?:1(?:3[0-48]|[46][0-4]|5[012789]|7[0-49]|8[01349])|21[0-7]|31[0-8]|[459]1\\\\d|61[0-46-9]))\\\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-4789]|7[013-9]|9\\\\d)|3(?:0\\\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1235679]|9[24578])|4(?:0[03-9]|[28][02-5789]|[37]\\\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1235-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\\\d|7[0-35-9]|8[0-468]|9[0-5789])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\\\d|3[023678]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-5789]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-5789]|4[2-9]|5[0-579]|6[234789]|7[0124578]|8\\\\d|9[2-57]))\\\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-4789]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[015789]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\\\d)|276\\\\d|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[567]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}|176888[234678]\\\\d{2}|16977[23]\\\\d{3}\",\n\t\t\t\t\"7(?:[1-4]\\\\d\\\\d|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[04-9]\\\\d|1[02-9]|2[0-35-9]|3[0-689]))\\\\d{6}\",\n\t\t\t\t\"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})|500\\\\d{6}\",\n\t\t\t\t\"(?:87[123]|9(?:[01]\\\\d|8[2349]))\\\\d{7}\",\n\t\t\t\t\"70\\\\d{8}\",\n\t\t\t\tnull,\n\t\t\t\t\"(?:3[0347]|55)\\\\d{8}\",\n\t\t\t\t\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\n\t\t\t\t\"56\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"GD\": [\n\t\t\t\"1\",\n\t\t\t\"[4589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"473\"\n\t\t],\n\t\t\"GE\": [\n\t\t\t\"995\",\n\t\t\t\"[34578]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[348]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"GF\": [\n\t\t\t\"594\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"GG\": [\n\t\t\t\"44\",\n\t\t\t\"[135789]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6[013-9])\",\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:1|\\\\d1)|3|9[018]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:38|5[23]|69|76|94)\",\n\t\t\t\t\t\t\"1(?:387|5(?:24|39)|697|768|946)\",\n\t\t\t\t\t\t\"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[1-5789]|62)\",\n\t\t\t\t\t\t\"7(?:[1-5789]|624)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8001\",\n\t\t\t\t\t\t\"80011\",\n\t\t\t\t\t\t\"800111\",\n\t\t\t\t\t\t\"8001111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(845)(46)(4\\\\d)\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"845\",\n\t\t\t\t\t\t\"8454\",\n\t\t\t\t\t\t\"84546\",\n\t\t\t\t\t\t\"845464\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:4[2-5]|7[0-3])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"1481\\\\d{6}\",\n\t\t\t\t\"7(?:781|839|911)\\\\d{6}\",\n\t\t\t\t\"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})|500\\\\d{6}\",\n\t\t\t\t\"(?:87[123]|9(?:[01]\\\\d|8[0-3]))\\\\d{7}\",\n\t\t\t\t\"70\\\\d{8}\",\n\t\t\t\tnull,\n\t\t\t\t\"(?:3[0347]|55)\\\\d{8}\",\n\t\t\t\t\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\n\t\t\t\t\"56\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"GH\": [\n\t\t\t\"233\",\n\t\t\t\"[235]\\\\d{8}|8\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"GI\": [\n\t\t\t\"350\",\n\t\t\t\"[2568]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GL\": [\n\t\t\t\"299\",\n\t\t\t\"[1-689]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GM\": [\n\t\t\t\"220\",\n\t\t\t\"[2-9]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GN\": [\n\t\t\t\"224\",\n\t\t\t\"[367]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[67]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GP\": [\n\t\t\t\"590\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([56]90)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"590(?:0[13468]|1[012]|2[0-68]|3[28]|4[0-8]|5[579]|6[0189]|70|8[0-689]|9\\\\d)\\\\d{4}\",\n\t\t\t\t\"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\"\n\t\t\t]\n\t\t],\n\t\t\"GQ\": [\n\t\t\t\"240\",\n\t\t\t\"[23589]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GR\": [\n\t\t\t\"30\",\n\t\t\t\"[26-9]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([27]\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21|7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[2-9]1|[689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[2-9][02-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GT\": [\n\t\t\t\"502\",\n\t\t\t\"[2-7]\\\\d{7}|1[89]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GU\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"671\"\n\t\t],\n\t\t\"GW\": [\n\t\t\t\"245\",\n\t\t\t\"(?:4(?:0\\\\d{5}|4\\\\d{7})|9\\\\d{8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"44|9[567]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"40\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GY\": [\n\t\t\t\"592\",\n\t\t\t\"[2-4679]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"HK\": [\n\t\t\t\"852\",\n\t\t\t\"[235-7]\\\\d{7}|8\\\\d{7,8}|9\\\\d{4,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235-7]|[89](?:0[1-9]|[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(900)(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"900\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(900)(\\\\d{2,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"900\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"HN\": [\n\t\t\t\"504\",\n\t\t\t\"[237-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"HR\": [\n\t\t\t\"385\",\n\t\t\t\"[1-7]\\\\d{5,8}|[89]\\\\d{6,11}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6[09])(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[09]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([67]2)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[67]2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-5]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{3,4})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[0145]|7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[0145]|7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80[01])(\\\\d{2})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80[01])(\\\\d{3,4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"HT\": [\n\t\t\t\"509\",\n\t\t\t\"[2-489]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"HU\": [\n\t\t\t\"36\",\n\t\t\t\"[1-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"06\",\n\t\t\t\"($1)\"\n\t\t],\n\t\t\"ID\": [\n\t\t\t\"62\",\n\t\t\t\"(?:[1-79]\\\\d{6,10}|8\\\\d{7,11})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[124]|[36]1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4579]|2[035-9]|[36][02-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3,4})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[1-35-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)(500)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(177)(\\\\d{6,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"17\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{5,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(804)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"804\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80[79]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"IE\": [\n\t\t\t\"353\",\n\t\t\t\"[124-9]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[24-9]|47|58|6[237-9]|9[35-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"40[24]|50[45]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(48)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"48\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(818)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"81\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24-69]|7[14]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([78]\\\\d)(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"76|8[35-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(700)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:8[059]|5)\",\n\t\t\t\t\t\t\"1(?:8[059]0|5)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"IL\": [\n\t\t\t\"972\",\n\t\t\t\"[17]\\\\d{6,9}|[2-589]\\\\d{3}(?:\\\\d{3,6})?|6\\\\d{3}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-489])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-489]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([57]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[57]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1255)(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"125\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1200)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"120\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1212)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"121\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1599)(\\\\d{6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})\",\n\t\t\t\t\t\"*$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-689]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"$1\"\n\t\t],\n\t\t\"IM\": [\n\t\t\t\"44\",\n\t\t\t\"[135789]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6[013-9])\",\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:1|\\\\d1)|3|9[018]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:38|5[23]|69|76|94)\",\n\t\t\t\t\t\t\"1(?:387|5(?:24|39)|697|768|946)\",\n\t\t\t\t\t\t\"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[1-5789]|62)\",\n\t\t\t\t\t\t\"7(?:[1-5789]|624)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8001\",\n\t\t\t\t\t\t\"80011\",\n\t\t\t\t\t\t\"800111\",\n\t\t\t\t\t\t\"8001111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(845)(46)(4\\\\d)\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"845\",\n\t\t\t\t\t\t\"8454\",\n\t\t\t\t\t\t\"84546\",\n\t\t\t\t\t\t\"845464\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:4[2-5]|7[0-3])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"1624\\\\d{6}\",\n\t\t\t\t\"7[569]24\\\\d{6}\",\n\t\t\t\t\"808162\\\\d{4}\",\n\t\t\t\t\"(?:872299|90[0167]624)\\\\d{4}\",\n\t\t\t\t\"70\\\\d{8}\",\n\t\t\t\tnull,\n\t\t\t\t\"3(?:08162\\\\d|3\\\\d{5}|4(?:40[49]06|5624\\\\d)|7(?:0624\\\\d|2299\\\\d))\\\\d{3}|55\\\\d{8}\",\n\t\t\t\tnull,\n\t\t\t\t\"56\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"IN\": [\n\t\t\t\"91\",\n\t\t\t\"008\\\\d{9}|1\\\\d{7,12}|[2-9]\\\\d{9,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[02-578]|19|6[0-35-9]|9[07-9])|8(?:0[015-9]|2[02356-9]|3[0-57-9]|[1459]|6[02-9]|7[01-69]|8[0-24-9])|9\",\n\t\t\t\t\t\t\"7(?:[078]|19[0-5]|2(?:[02356-9]|[14][017-9]|9[389])|3(?:[025-9]|1[07-9]|[34][017-9])|4(?:[0-35689]|[47][017-9])|5(?:[02346-9]|1[019]|5[017-9])|6(?:[06-9]|1[0-257-9]|2[0-5]|3[19]|5[4589])|9(?:0|7[2-9]|8[0246-9]|9[0-24-9]))|8(?:0(?:[01589]|6[67]|7[2-9])|1(?:[02-57-9]|1[0135-9]|6[089])|2(?:0[08]|[236-9]|5[1-9])|3(?:[0357-9]|17|28|4[1-9])|[45]|6(?:[02457-9]|6[07-9])|7(?:0[07]|[1-69])|8(?:[0-26-9]|44|5[2-9])|9(?:[035-9]|19|2[2-9]|4[0-8]))|9\",\n\t\t\t\t\t\t\"7(?:0|19[0-5]|2(?:[0235679]|[14][017-9]|8(?:[0-569]|78|8[089])|9[389])|3(?:[05-8]|1(?:[089]|7[5-9])|2(?:[5-8]|[0-49][089])|3[017-9]|4(?:[07-9]|11)|9(?:[01689]|[2345][089]|40|7[0189]))|4(?:[056]|1(?:[0135-9]|[23][089]|2[089]|4[089])|2(?:0[089]|[1-7][089]|[89])|3(?:[0-8][089]|9)|4(?:[089]|11|7[02-8])|7(?:[089]|11|7[02-8])|8(?:[0-24-7][089]|[389])|9(?:[0-7][089]|[89]))|5(?:[0346-9]|1[019]|2(?:[03-9]|[12][089])|5[017-9])|6(?:[06-9]|1[0-257-9]|2[0-5]|3[19]|5[4589])|7(?:0(?:[02-9]|10)|[1-9])|8(?:[0-79]|8(?:0[0189]|11|8[013-9]|9[012]))|9(?:0|7(?:[2-8]|9[7-9])|8[0246-9]|9(?:[04-9]|11|2[234])))|8(?:0(?:[01589]|6[67]|7(?:[2-7]|86|90))|1(?:[02-57-9]|1(?:[0135-9]|22|44)|6[089])|2(?:0[08]|[236-9]|5[1-9])|3(?:[0357-9]|170|28[0-6]|4[1-9])|[45]|6(?:[02457-9]|6(?:[08]|7[02-8]|9[01]))|7(?:0[07]|[1-69])|8(?:[0-26-9]|44|5[2-9])|9(?:[035-9]|19|2[2-9]|4[0-8]))|9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"11|2[02]|33|4[04]|79[1-9]|80[2-46]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:2[0-249]|3[0-25]|4[145]|[569][14]|7[1257]|8[1346]|[68][1-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|[36][25]|22|4[28]|5[12]|[78]1|9[15])|6(?:12|[2345]1|57|6[13]|7[14]|80)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)\",\n\t\t\t\t\t\t\"7(?:12|2[14]|3[134]|4[47]|5(?:1|5[2-6])|[67]1|88)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[23579]|[468][1-9])|[2-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"008\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1600)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"160\",\n\t\t\t\t\t\t\"1600\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1800)(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"1800\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(18[06]0)(\\\\d{2,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"18[06]\",\n\t\t\t\t\t\t\"18[06]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(140)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"140\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"18[06]\",\n\t\t\t\t\t\t\"18(?:0[03]|6[12])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"IO\": [\n\t\t\t\"246\",\n\t\t\t\"3\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"IQ\": [\n\t\t\t\"964\",\n\t\t\t\"[1-7]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-6]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"IR\": [\n\t\t\t\"98\",\n\t\t\t\"[1-8]\\\\d{9}|9(?:[0-4]\\\\d{8}|9\\\\d{2,8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(21)(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"IS\": [\n\t\t\t\"354\",\n\t\t\t\"[4-9]\\\\d{6}|38\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(3\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"IT\": [\n\t\t\t\"39\",\n\t\t\t\"[01589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]|55\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0[26])(\\\\d{4})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0[26])(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][0159]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\",\n\t\t\t\t\t\t\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][2-46-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{3})(\\\\d{2,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][2-46-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13]|8(?:00|4[08]|9[59])\",\n\t\t\t\t\t\t\"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"894\",\n\t\t\t\t\t\t\"894[5-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"0(?:[26]\\\\d{4,9}|(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7})\",\n\t\t\t\t\"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\",\n\t\t\t\t\"80(?:0\\\\d{6}|3\\\\d{3})\",\n\t\t\t\t\"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\",\n\t\t\t\t\"1(?:78\\\\d|99)\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"55\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"JE\": [\n\t\t\t\"44\",\n\t\t\t\"[135789]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6[013-9])\",\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:1|\\\\d1)|3|9[018]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:38|5[23]|69|76|94)\",\n\t\t\t\t\t\t\"1(?:387|5(?:24|39)|697|768|946)\",\n\t\t\t\t\t\t\"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[1-5789]|62)\",\n\t\t\t\t\t\t\"7(?:[1-5789]|624)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8001\",\n\t\t\t\t\t\t\"80011\",\n\t\t\t\t\t\t\"800111\",\n\t\t\t\t\t\t\"8001111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(845)(46)(4\\\\d)\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"845\",\n\t\t\t\t\t\t\"8454\",\n\t\t\t\t\t\t\"84546\",\n\t\t\t\t\t\t\"845464\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:4[2-5]|7[0-3])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"1534\\\\d{6}\",\n\t\t\t\t\"7(?:509|7(?:00|97)|829|937)\\\\d{6}\",\n\t\t\t\t\"80(?:07(?:35|81)|8901)\\\\d{4}\",\n\t\t\t\t\"(?:871206|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\",\n\t\t\t\t\"701511\\\\d{4}\",\n\t\t\t\tnull,\n\t\t\t\t\"3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\\\d{4}|55\\\\d{8}\",\n\t\t\t\t\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\n\t\t\t\t\"56\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"JM\": [\n\t\t\t\"1\",\n\t\t\t\"[589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"876\"\n\t\t],\n\t\t\"JO\": [\n\t\t\t\"962\",\n\t\t\t\"[235-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2356]|87\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[457-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70|8[0158]|9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"JP\": [\n\t\t\t\"81\",\n\t\t\t\"[1-9]\\\\d{8,9}|00(?:[36]\\\\d{7,14}|7\\\\d{5,7}|8\\\\d{7})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:12|57|99)0\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2579]0|80[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|5(?:76|97)|499|746|8(?:3[89]|63|47|51)|9(?:49|80|9[16])\",\n\t\t\t\t\t\t\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:76|97)9|499[2468]|7468|8(?:3(?:8[78]|96)|636|477|51[24])|9(?:496|802|9(?:1[23]|69))\",\n\t\t\t\t\t\t\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:769|979[2-69])|499[2468]|7468|8(?:3(?:8[78]|96[2457-9])|636[2-57-9]|477|51[24])|9(?:496|802|9(?:1[23]|69))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])\",\n\t\t\t\t\t\t\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:7[2-6]|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|[4-7]))\",\n\t\t\t\t\t\t\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6[56]))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\",\n\t\t\t\t\t\t\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6(?:5[25]|60)))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5(?:[2-589]|39)|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93)\",\n\t\t\t\t\t\t\"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93[34])\",\n\t\t\t\t\t\t\"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93(?:31|4))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:9[14-79]|74|[34]7|[56]9)|82|993\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3|4(?:2[09]|7[01])|6[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2479][1-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"KE\": [\n\t\t\t\"254\",\n\t\t\t\"20\\\\d{6,7}|[4-9]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\t\"005|0\"\n\t\t],\n\t\t\"KG\": [\n\t\t\t\"996\",\n\t\t\t\"[235-8]\\\\d{8,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[25-7]|31[25]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:1[36]|[2-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"KH\": [\n\t\t\t\"855\",\n\t\t\t\"[1-9]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\\\\d[1-9]|[2-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[89]00)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[89]0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"KI\": [\n\t\t\t\"686\",\n\t\t\t\"[2458]\\\\d{4}|3\\\\d{4,7}|7\\\\d{7}\",\n\t\t\t[],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"0\"\n\t\t],\n\t\t\"KM\": [\n\t\t\t\"269\",\n\t\t\t\"[379]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"KN\": [\n\t\t\t\"1\",\n\t\t\t\"[589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"869\"\n\t\t],\n\t\t\"KP\": [\n\t\t\t\"850\",\n\t\t\t\"1\\\\d{9}|[28]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"KR\": [\n\t\t\t\"82\",\n\t\t\t\"007\\\\d{9,11}|[1-7]\\\\d{3,9}|8\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:0|1[19]|[69]9|5[458])|[57]0\",\n\t\t\t\t\t\t\"1(?:0|1[19]|[69]9|5(?:44|59|8))|[57]0\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[01]|5[1-4]|6[2-8]|[7-9])|[68]0|[3-6][1-9][1-9]\",\n\t\t\t\t\t\t\"1(?:[01]|5(?:[1-3]|4[56])|6[2-8]|[7-9])|[68]0|[3-6][1-9][1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"131\",\n\t\t\t\t\t\t\"1312\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"131\",\n\t\t\t\t\t\t\"131[13-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"30\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3,4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21[0-46-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-6][1-9]1\",\n\t\t\t\t\t\t\"[3-6][1-9]1(?:[0-46-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:5[246-9]|6[04678]|8[03579])\",\n\t\t\t\t\t\t\"1(?:5(?:22|44|66|77|88|99)|6(?:00|44|6[16]|70|88)|8(?:00|33|55|77|99))\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\t\"0(8[1-46-8]|85\\\\d{2})?\"\n\t\t],\n\t\t\"KW\": [\n\t\t\t\"965\",\n\t\t\t\"[12569]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[16]|2(?:[0-35-9]|4[0-35-9])|9[024-9]|52[25]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"244|5(?:[015]|66)\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"KY\": [\n\t\t\t\"1\",\n\t\t\t\"[3589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"345\"\n\t\t],\n\t\t\"KZ\": [\n\t\t\t\"7\",\n\t\t\t\"(?:33\\\\d|7\\\\d{2}|80[09])\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[34689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"33622\\\\d{5}|7(?:1(?:0(?:[23]\\\\d|4[023]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[1-79]|4[0-35-9]|59)|4(?:2\\\\d|3[013-79]|4[0-8]|5[1-79])|5(?:2\\\\d|3[1-8]|4[1-7]|59)|6(?:[234]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[234]\\\\d|5[139])|4(?:2\\\\d|3[1235-9]|59)|5(?:[23]\\\\d|4[01246-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59)))\\\\d{5}\",\n\t\t\t\t\"7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\\\d{7}\",\n\t\t\t\t\"800\\\\d{7}\",\n\t\t\t\t\"809\\\\d{7}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"751\\\\d{7}\"\n\t\t\t]\n\t\t],\n\t\t\"LA\": [\n\t\t\t\"856\",\n\t\t\t\"[2-8]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(20)(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-8]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[13]|3[14]|[4-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(30)(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"30\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"LB\": [\n\t\t\t\"961\",\n\t\t\t\"[13-9]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13-6]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]|9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([7-9]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89][01]|7(?:[01]|6[013-9]|8[89]|9[1-3])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"LC\": [\n\t\t\t\"1\",\n\t\t\t\"[5789]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"758\"\n\t\t],\n\t\t\"LI\": [\n\t\t\t\"423\",\n\t\t\t\"6\\\\d{8}|[23789]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23789]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[56]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(69)(7\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"697\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"0|10(?:01|20|66)\"\n\t\t],\n\t\t\"LK\": [\n\t\t\t\"94\",\n\t\t\t\"[1-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{1})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"LR\": [\n\t\t\t\"231\",\n\t\t\t\"2\\\\d{7,8}|[378]\\\\d{8}|4\\\\d{6}|5\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([4-5])(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[45]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23578]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"LS\": [\n\t\t\t\"266\",\n\t\t\t\"[2568]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"LT\": [\n\t\t\t\"370\",\n\t\t\t\"[3-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([34]\\\\d)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"37|4(?:1|5[45]|6[2-4])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-6]\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3[148]|4(?:[24]|6[09])|528|6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([7-9]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[7-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5)(2\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"52[0-79]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"(8-$1)\",\n\t\t\t\"[08]\",\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"LU\": [\n\t\t\t\"352\",\n\t\t\t\"[24-9]\\\\d{3,10}|3(?:[0-46-9]\\\\d{2,9}|5[013-9]\\\\d{1,8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-5]|7[1-9]|[89](?:[1-9]|0[2-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-5]|7[1-9]|[89](?:[1-9]|0[2-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:[0367]|4[3-8])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:[0367]|4[3-8])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,4})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:[1-9]|0[2-9])|9(?:[1-9]|0[2-46-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70|80[01]|90[015]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\\\d)\"\n\t\t],\n\t\t\"LV\": [\n\t\t\t\"371\",\n\t\t\t\"[2689]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2689]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"LY\": [\n\t\t\t\"218\",\n\t\t\t\"[25679]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([25679]\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MA\": [\n\t\t\t\"212\",\n\t\t\t\"[5-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([5-7]\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:2[015-7]|3[0-4])|[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:2[2-489]|3[5-9]|92)|892\",\n\t\t\t\t\t\t\"5(?:2(?:[2-48]|90)|3(?:[5-79]|80)|924)|892\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:29|38)\",\n\t\t\t\t\t\t\"5(?:29|38)[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:4[067]|5[03])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8[09])(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:0|9[013-9])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"5(?:2(?:(?:[015-7]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\\\d|9(?:0\\\\d|[89]0))|3(?:(?:[0-4]\\\\d|[57][2-9]|6[2-8]|9[3-9])\\\\d|8(?:0\\\\d|[89]0))|(?:4[067]|5[03])\\\\d{2})\\\\d{4}\",\n\t\t\t\t\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[07][07]|6[12]))\\\\d{6}\",\n\t\t\t\t\"80\\\\d{7}\",\n\t\t\t\t\"89\\\\d{7}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"5924[01]\\\\d{4}\"\n\t\t\t]\n\t\t],\n\t\t\"MC\": [\n\t\t\t\"377\",\n\t\t\t\"[34689]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[39]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MD\": [\n\t\t\t\"373\",\n\t\t\t\"[235-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"22|3\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([25-7]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[13-9]|[5-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ME\": [\n\t\t\t\"382\",\n\t\t\t\"[2-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-57-9]|6[036-9]\",\n\t\t\t\t\t\t\"[2-57-9]|6(?:[03689]|7(?:[0-8]|9[3-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(67)(9)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"679\",\n\t\t\t\t\t\t\"679[0-2]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MF\": [\n\t\t\t\"590\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([56]90)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"590(?:[02][79]|13|5[0-268]|[78]7)\\\\d{4}\",\n\t\t\t\t\"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\"\n\t\t\t]\n\t\t],\n\t\t\"MG\": [\n\t\t\t\"261\",\n\t\t\t\"[23]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([23]\\\\d)(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MH\": [\n\t\t\t\"692\",\n\t\t\t\"[2-6]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\"\n\t\t],\n\t\t\"MK\": [\n\t\t\t\"389\",\n\t\t\t\"[2-578]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([347]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[347]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]\\\\d{2})(\\\\d)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ML\": [\n\t\t\t\"223\",\n\t\t\t\"[246-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[246-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MM\": [\n\t\t\t\"95\",\n\t\t\t\"[1478]\\\\d{5,7}|[256]\\\\d{5,8}|9(?:[279]\\\\d{0,2}|[58]|[34]\\\\d{1,2}|6\\\\d?)\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|2[245]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"251\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"16|2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"67|81\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9(?:2[0-4]|[35-9]|4[137-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)([34]\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9(?:3[0-36]|4[0-57-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"92[56]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"93\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MN\": [\n\t\t\t\"976\",\n\t\t\t\"[12]\\\\d{7,9}|[57-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([12]\\\\d)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([12]2\\\\d)(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]2[1-3]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([12]\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12](?:27|[3-5])\",\n\t\t\t\t\t\t\"[12](?:27|[3-5]\\\\d)2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[57-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([12]\\\\d{4})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12](?:27|[3-5])\",\n\t\t\t\t\t\t\"[12](?:27|[3-5]\\\\d)[4-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MO\": [\n\t\t\t\"853\",\n\t\t\t\"[268]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([268]\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MP\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"670\"\n\t\t],\n\t\t\"MQ\": [\n\t\t\t\"596\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MR\": [\n\t\t\t\"222\",\n\t\t\t\"[2-48]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-48]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MS\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"664\"\n\t\t],\n\t\t\"MT\": [\n\t\t\t\"356\",\n\t\t\t\"[2357-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MU\": [\n\t\t\t\"230\",\n\t\t\t\"[2-9]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-46-9]\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-46-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MV\": [\n\t\t\t\"960\",\n\t\t\t\"[346-8]\\\\d{6,9}|9(?:00\\\\d{7}|\\\\d{6})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3467]|9(?:[1-9]|0[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MW\": [\n\t\t\t\"265\",\n\t\t\t\"(?:1(?:\\\\d{2})?|[2789]\\\\d{2})\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1789]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MX\": [\n\t\t\t\"52\",\n\t\t\t\"[1-9]\\\\d{9,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([358]\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"33|55|81\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"044 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:33|55|81)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"044 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"01\",\n\t\t\t\"01 $1\",\n\t\t\t\"0[12]|04[45](\\\\d{10})\",\n\t\t\t\"1$1\",\n\t\t\ttrue\n\t\t],\n\t\t\"MY\": [\n\t\t\t\"60\",\n\t\t\t\"[13-9]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([4-79])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-79]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(3)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([18]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[02-46-9][1-9]|8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)([36-8]00)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[36-8]0\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(11)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"11\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(15[49])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"MZ\": [\n\t\t\t\"258\",\n\t\t\t\"[28]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([28]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|8[2-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NA\": [\n\t\t\t\"264\",\n\t\t\t\"[68]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[1235]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(88)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"88\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(870)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"870\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"NC\": [\n\t\t\t\"687\",\n\t\t\t\"[2-57-9]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1.$2.$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-46-9]|5[0-4]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NE\": [\n\t\t\t\"227\",\n\t\t\t\"[0289]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[289]|09\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(08)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"08\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NF\": [\n\t\t\t\"672\",\n\t\t\t\"[13]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NG\": [\n\t\t\t\"234\",\n\t\t\t\"[1-6]\\\\d{5,8}|9\\\\d{5,9}|[78]\\\\d{5,13}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]|9(?:0[3-9]|[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-6]|7(?:[1-79]|0[1-9])|8[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70|8[01]|90[2357-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([78]00)(\\\\d{4})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[78]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([78]00)(\\\\d{5})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[78]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(78)(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"78\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"NI\": [\n\t\t\t\"505\",\n\t\t\t\"[12578]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NL\": [\n\t\t\t\"31\",\n\t\t\t\"1\\\\d{4,8}|[2-7]\\\\d{8}|[89]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-578]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-5]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6)(\\\\d{8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[0-57-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(66)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"66\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(14)(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"14\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]0\\\\d)(\\\\d{4,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80|9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"NO\": [\n\t\t\t\"47\",\n\t\t\t\"0\\\\d{4}|[2-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[489]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235-7]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\",\n\t\t\t\t\"(?:4[015-8]|5[89]|87|9\\\\d)\\\\d{6}\",\n\t\t\t\t\"80[01]\\\\d{5}\",\n\t\t\t\t\"82[09]\\\\d{5}\",\n\t\t\t\t\"880\\\\d{5}\",\n\t\t\t\t\"81[23]\\\\d{5}\",\n\t\t\t\t\"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\",\n\t\t\t\tnull,\n\t\t\t\t\"85[0-5]\\\\d{5}\"\n\t\t\t]\n\t\t],\n\t\t\"NP\": [\n\t\t\t\"977\",\n\t\t\t\"[1-8]\\\\d{7}|9(?:[1-69]\\\\d{6,8}|7[2-6]\\\\d{5,7}|8\\\\d{8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[2-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[01]|[2-8]|9(?:[1-69]|7[15-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9(?:6[013]|7[245]|8)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"NR\": [\n\t\t\t\"674\",\n\t\t\t\"[458]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NU\": [\n\t\t\t\"683\",\n\t\t\t\"[1-5]\\\\d{3}\"\n\t\t],\n\t\t\"NZ\": [\n\t\t\t\"64\",\n\t\t\t\"6[235-9]\\\\d{6}|[2-57-9]\\\\d{7,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([34679])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[346]|7[2-57-9]|9[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(24099)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"240\",\n\t\t\t\t\t\t\"2409\",\n\t\t\t\t\t\t\"24099\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:1[1-9]|[69]|7[0-35-9])|70|86\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d)(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[028]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:10|74)|5|[89]0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"OM\": [\n\t\t\t\"968\",\n\t\t\t\"(?:5|[279]\\\\d)\\\\d{6}|800\\\\d{5,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([79]\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[79]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PA\": [\n\t\t\t\"507\",\n\t\t\t\"[1-9]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-57-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PE\": [\n\t\t\t\"51\",\n\t\t\t\"[14-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([4-8]\\\\d)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-7]|8[2-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"PF\": [\n\t\t\t\"689\",\n\t\t\t\"4\\\\d{5,7}|8\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[09]|8[79]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"44\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PG\": [\n\t\t\t\"675\",\n\t\t\t\"[1-9]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13-689]|27\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20|7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PH\": [\n\t\t\t\"63\",\n\t\t\t\"2\\\\d{5,7}|[3-9]\\\\d{7,9}|1800\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])\",\n\t\t\t\t\t\t\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"346|4(?:27|9[35])|883\",\n\t\t\t\t\t\t\"3469|4(?:279|9(?:30|56))|8834\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-8]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-8]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"81|9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1800)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1800)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"PK\": [\n\t\t\t\"92\",\n\t\t\t\"1\\\\d{8}|[2-8]\\\\d{5,11}|9(?:[013-9]\\\\d{4,9}|2\\\\d(?:111\\\\d{6}|\\\\d{3,7}))\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(111)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1\",\n\t\t\t\t\t\t\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11\",\n\t\t\t\t\t\t\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(111)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[349]|45|54|60|72|8[2-5]|9[2-9]\",\n\t\t\t\t\t\t\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d1\",\n\t\t\t\t\t\t\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d11\",\n\t\t\t\t\t\t\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[349]|45|54|60|72|8[2-5]|9[2-9]\",\n\t\t\t\t\t\t\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(3\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([15]\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"58[12]|1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(586\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"586\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]00)(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]00\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"PL\": [\n\t\t\t\"48\",\n\t\t\t\"[12]\\\\d{6,8}|[3-57-9]\\\\d{8}|6\\\\d{5,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{1})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"26|39|5[0137]|6[0469]|7[02389]|8[08]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"64\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"64\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PM\": [\n\t\t\t\"508\",\n\t\t\t\"[45]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([45]\\\\d)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"PR\": [\n\t\t\t\"1\",\n\t\t\t\"[5789]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"787|939\"\n\t\t],\n\t\t\"PS\": [\n\t\t\t\"970\",\n\t\t\t\"[24589]\\\\d{7,8}|1(?:[78]\\\\d{8}|[49]\\\\d{2,3})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2489])(2\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2489]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5[69]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[78]00)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[78]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"PT\": [\n\t\t\t\"351\",\n\t\t\t\"[2-46-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[12]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-46-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[3-9]|[346-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PW\": [\n\t\t\t\"680\",\n\t\t\t\"[2-8]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PY\": [\n\t\t\t\"595\",\n\t\t\t\"5[0-5]\\\\d{4,7}|[2-46-9]\\\\d{5,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[26]1|3[289]|4[124678]|7[123]|8[1236])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[26]1|3[289]|4[124678]|7[123]|8[1236])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-9]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8700\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-8][1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-8][1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"QA\": [\n\t\t\t\"974\",\n\t\t\t\"[2-8]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([28]\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[28]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-7]\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-7]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"RE\": [\n\t\t\t\"262\",\n\t\t\t\"[268]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"262|6[49]|8\"\n\t\t],\n\t\t\"RO\": [\n\t\t\t\"40\",\n\t\t\t\"2\\\\d{5,8}|[37-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(21)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23][3-7]|[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[3-6]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"RS\": [\n\t\t\t\"381\",\n\t\t\t\"[126-9]\\\\d{4,11}|3(?:[0-79]\\\\d{3,10}|8[2-9]\\\\d{2,9})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([23]\\\\d{2})(\\\\d{4,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:2[389]|39)0\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-3]\\\\d)(\\\\d{5,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6\\\\d)(\\\\d{6,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7[26])(\\\\d{4,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7[08]\\\\d)(\\\\d{4,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[08]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"RU\": [\n\t\t\t\"7\",\n\t\t\t\"[3489]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[34689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"8 ($1)\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\",\n\t\t\t\t\"9\\\\d{9}\",\n\t\t\t\t\"80[04]\\\\d{7}\",\n\t\t\t\t\"80[39]\\\\d{7}\"\n\t\t\t]\n\t\t],\n\t\t\"RW\": [\n\t\t\t\"250\",\n\t\t\t\"[027-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[7-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"SA\": [\n\t\t\t\"966\",\n\t\t\t\"1\\\\d{7,8}|(?:[2-467]|92)\\\\d{7}|5\\\\d{8}|8\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-467])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-467]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[1-467]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(92\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"92\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(811)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"81\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SB\": [\n\t\t\t\"677\",\n\t\t\t\"[1-9]\\\\d{4,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SC\": [\n\t\t\t\"248\",\n\t\t\t\"[2468]\\\\d{5,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[246]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SD\": [\n\t\t\t\"249\",\n\t\t\t\"[19]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SE\": [\n\t\t\t\"46\",\n\t\t\t\"[1-35-9]\\\\d{5,11}|4\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-469]\\\\d)(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[136]|2[136]|3[356]|4[0246]|6[03]|90\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(77)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(20)(\\\\d{2,3})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[034]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9[034]\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[034]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"25[245]|67[3-6]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4 $5\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SG\": [\n\t\t\t\"65\",\n\t\t\t\"[36]\\\\d{7}|[17-9]\\\\d{7,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3689]\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[369]|8[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[89]00)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7000)(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SH\": [\n\t\t\t\"290\",\n\t\t\t\"[256]\\\\d{4}\",\n\t\t\t[],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"2(?:[0-57-9]\\\\d|6[4-9])\\\\d{2}\",\n\t\t\t\t\"[56]\\\\d{4}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"262\\\\d{2}\"\n\t\t\t]\n\t\t],\n\t\t\"SI\": [\n\t\t\t\"386\",\n\t\t\t\"[1-7]\\\\d{6,7}|[89]\\\\d{4,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]|3[24-8]|4[24-8]|5[2-8]|7[3-8]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-7]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[37][01]|4[0139]|51|6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89][09])(\\\\d{3,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89][09]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"59|8[1-3]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SJ\": [\n\t\t\t\"47\",\n\t\t\t\"0\\\\d{4}|[4789]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[489]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235-7]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"79\\\\d{6}\",\n\t\t\t\t\"(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}\",\n\t\t\t\t\"80[01]\\\\d{5}\",\n\t\t\t\t\"82[09]\\\\d{5}\",\n\t\t\t\t\"880\\\\d{5}\",\n\t\t\t\t\"81[23]\\\\d{5}\",\n\t\t\t\t\"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\",\n\t\t\t\tnull,\n\t\t\t\t\"85[0-5]\\\\d{5}\"\n\t\t\t]\n\t\t],\n\t\t\"SK\": [\n\t\t\t\"421\",\n\t\t\t\"(?:[2-68]\\\\d{5,8}|9\\\\d{6,8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(16)(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"216\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-5]\\\\d)(16)(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1/$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-5]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1/$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([689]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9090)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9090\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SL\": [\n\t\t\t\"232\",\n\t\t\t\"[2-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"SM\": [\n\t\t\t\"378\",\n\t\t\t\"[05-7]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[5-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0549)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"($1) $2\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{6})\",\n\t\t\t\t\t\"0549 $1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"(0549) $1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"(?:0549)?([89]\\\\d{5})\",\n\t\t\t\"0549$1\"\n\t\t],\n\t\t\"SN\": [\n\t\t\t\"221\",\n\t\t\t\"[3789]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[379]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SO\": [\n\t\t\t\"252\",\n\t\t\t\"[1-79]\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[0-79]|[13-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"24|[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15|28|6[1-35-9]|799|9[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(90\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"90\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"SR\": [\n\t\t\t\"597\",\n\t\t\t\"[2-8]\\\\d{5,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-4]|5[2-58]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"56\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"59|[6-8]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SS\": [\n\t\t\t\"211\",\n\t\t\t\"[19]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"ST\": [\n\t\t\t\"239\",\n\t\t\t\"[29]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SV\": [\n\t\t\t\"503\",\n\t\t\t\"[267]\\\\d{7}|[89]\\\\d{6}(?:\\\\d{4})?\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[267]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SX\": [\n\t\t\t\"1\",\n\t\t\t\"[5789]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"721\"\n\t\t],\n\t\t\"SY\": [\n\t\t\t\"963\",\n\t\t\t\"[1-59]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"SZ\": [\n\t\t\t\"268\",\n\t\t\t\"[027]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[027]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TA\": [\n\t\t\t\"290\",\n\t\t\t\"8\\\\d{3}\",\n\t\t\t[],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"8\\\\d{3}\"\n\t\t\t]\n\t\t],\n\t\t\"TC\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"649\"\n\t\t],\n\t\t\"TD\": [\n\t\t\t\"235\",\n\t\t\t\"[2679]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TG\": [\n\t\t\t\"228\",\n\t\t\t\"[29]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TH\": [\n\t\t\t\"66\",\n\t\t\t\"[2-9]\\\\d{7,8}|1\\\\d{3}(?:\\\\d{5,6})?\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([13-9]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"14|[3-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[89]00)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"TJ\": [\n\t\t\t\"992\",\n\t\t\t\"[3-589]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([349]\\\\d{2})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[34]7|91[78]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([4589]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[148]|[58]|9(?:1[59]|[0235-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(331700)(\\\\d)(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"331\",\n\t\t\t\t\t\t\"3317\",\n\t\t\t\t\t\t\"33170\",\n\t\t\t\t\t\t\"331700\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3[1-5]\",\n\t\t\t\t\t\t\"3(?:[1245]|3(?:[02-9]|1[0-589]))\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"(8) $1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"TK\": [\n\t\t\t\"690\",\n\t\t\t\"[2-47]\\\\d{3,6}\"\n\t\t],\n\t\t\"TL\": [\n\t\t\t\"670\",\n\t\t\t\"[2-489]\\\\d{6}|7\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-489]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TM\": [\n\t\t\t\"993\",\n\t\t\t\"[1-6]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"12\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13|[2-5]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"(8 $1)\"\n\t\t],\n\t\t\"TN\": [\n\t\t\t\"216\",\n\t\t\t\"[2-57-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TO\": [\n\t\t\t\"676\",\n\t\t\t\"[02-8]\\\\d{4,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-6]|7[0-4]|8[05]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[5-9]|8[47-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TR\": [\n\t\t\t\"90\",\n\t\t\t\"[2-589]\\\\d{9}|444\\\\d{4}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]|4(?:[0-35-9]|4[0-35-9])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5[02-69]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"51|[89]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(444)(\\\\d{1})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"444\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"TT\": [\n\t\t\t\"1\",\n\t\t\t\"[589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"868\"\n\t\t],\n\t\t\"TV\": [\n\t\t\t\"688\",\n\t\t\t\"[279]\\\\d{4,6}\"\n\t\t],\n\t\t\"TW\": [\n\t\t\t\"886\",\n\t\t\t\"2\\\\d{6,8}|[3-689]\\\\d{7,8}|7\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(20)(\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"202\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(20)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20[013-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-8])(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[23-8]|[3-6]|[78][1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80|9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(70)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"TZ\": [\n\t\t\t\"255\",\n\t\t\t\"\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([24]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([67]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"UA\": [\n\t\t\t\"380\",\n\t\t\t\"[3-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3-9]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[38]9|4(?:[45][0-5]|87)|5(?:0|6[37]|7[37])|6[36-8]|73|9[1-9]\",\n\t\t\t\t\t\t\"[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|73|9[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-689]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3[1-8]2|4[13678]2|5(?:[12457]2|6[24])|6(?:[49]2|[12][29]|5[24])|8[0-8]|90\",\n\t\t\t\t\t\t\"3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[49]2|[12][29]|5[24])|8[0-8]|90\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-6]\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:5[013-9]|[1-46-8])|4(?:[137][013-9]|6|[45][6-9]|8[4-6])|5(?:[1245][013-9]|6[0135-9]|3|7[4-6])|6(?:[49][013-9]|5[0135-9]|[12][13-8])\",\n\t\t\t\t\t\t\"3(?:5[013-9]|[1-46-8](?:22|[013-9]))|4(?:[137][013-9]|6(?:[013-9]|22)|[45][6-9]|8[4-6])|5(?:[1245][013-9]|6(?:3[02389]|[015689])|3|7[4-6])|6(?:[49][013-9]|5[0135-9]|[12][13-8])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"UG\": [\n\t\t\t\"256\",\n\t\t\t\"\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[7-9]|20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3|4(?:[1-5]|6[0-36-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2024)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2024\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"US\": [\n\t\t\t\"1\",\n\t\t\t\"[2-9]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:2(?:0[1-35-9]|1[02-9]|2[04589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[014679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-37]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[12])|7(?:0[1-46-8]|1[02-9]|2[0457]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-25]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[014678]|4[0179]|5[12469]|7[0-3589]|8[0459]))[2-9]\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\t\"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\",\n\t\t\t\t\"900[2-9]\\\\d{6}\",\n\t\t\t\t\"5(?:00|22|33|44|66|77|88)[2-9]\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"UY\": [\n\t\t\t\"598\",\n\t\t\t\"[2489]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"UZ\": [\n\t\t\t\"998\",\n\t\t\t\"[679]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([679]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"8 $1\"\n\t\t],\n\t\t\"VA\": [\n\t\t\t\"39\",\n\t\t\t\"(?:0(?:878\\\\d{5}|6698\\\\d{5})|[1589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9}))\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]|55\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0[26])(\\\\d{4})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0[26])(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][0159]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\",\n\t\t\t\t\t\t\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][2-46-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{3})(\\\\d{2,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][2-46-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13]|8(?:00|4[08]|9[59])\",\n\t\t\t\t\t\t\"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"894\",\n\t\t\t\t\t\t\"894[5-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"06698\\\\d{5}\",\n\t\t\t\t\"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\",\n\t\t\t\t\"80(?:0\\\\d{6}|3\\\\d{3})\",\n\t\t\t\t\"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\",\n\t\t\t\t\"1(?:78\\\\d|99)\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"55\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"VC\": [\n\t\t\t\"1\",\n\t\t\t\"[5789]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"784\"\n\t\t],\n\t\t\"VE\": [\n\t\t\t\"58\",\n\t\t\t\"[24589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"VG\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"284\"\n\t\t],\n\t\t\"VI\": [\n\t\t\t\"1\",\n\t\t\t\"[3589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"340\"\n\t\t],\n\t\t\"VN\": [\n\t\t\t\"84\",\n\t\t\t\"[17]\\\\d{6,9}|[2-69]\\\\d{7,9}|8\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([17]99)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[17]99\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([48])(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4|8(?:[1-57]|[689][0-79])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235-7]\\\\d)(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[025-79]|3[0136-9]|5[2-9]|6[0-46-8]|7[02-79]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(69\\\\d)(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"69\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235-7]\\\\d{2})(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[1348]|3[25]|5[01]|65|7[18]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[689]8|9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[2689]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[26]|8[68]|99)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[89]00)(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[89]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"VU\": [\n\t\t\t\"678\",\n\t\t\t\"[2-57-9]\\\\d{4,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[579]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"WF\": [\n\t\t\t\"681\",\n\t\t\t\"[4-8]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"WS\": [\n\t\t\t\"685\",\n\t\t\t\"[2-8]\\\\d{4,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-6]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"YE\": [\n\t\t\t\"967\",\n\t\t\t\"[1-7]\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-7])(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-6]|7[24-68]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[0137]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"YT\": [\n\t\t\t\"262\",\n\t\t\t\"[268]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"269|63\"\n\t\t],\n\t\t\"ZA\": [\n\t\t\t\"27\",\n\t\t\t\"[1-79]\\\\d{8}|8(?:[067]\\\\d{7}|[1-4]\\\\d{3,7})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(860)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"860\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-79]|8(?:[0-47]|6[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[1-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[1-4]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ZM\": [\n\t\t\t\"260\",\n\t\t\t\"[289]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([29]\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[29]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ZW\": [\n\t\t\t\"263\",\n\t\t\t\"2(?:[012457-9]\\\\d{3,8}|6(?:[14]\\\\d{7}|\\\\d{4}))|[13-79]\\\\d{4,9}|8[06]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([49])(\\\\d{3})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4|9[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(86\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"86[24]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2356]\\\\d{2})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:0[45]|2[278]|[49]8|[78])|3(?:08|17|3[78]|7[1569]|8[37]|98)|5[15][78]|6(?:[29]8|[38]7|6[78]|75|[89]8)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:1[39]|2[0157]|6[14]|7[35]|84)|329\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-356]\\\\d)(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[3-9]|2[0569]|3[0-69]|5[05689]|6[0-46-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]9|54\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([25]\\\\d{3})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:25|54)8\",\n\t\t\t\t\t\t\"258[23]|5483\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"86\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"001\": [\n\t\t\t\"979\",\n\t\t\t\"\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t}\n};\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _alphanumeric = __webpack_require__(34);\n\nvar _digits = __webpack_require__(35);\n\nvar _email = __webpack_require__(36);\n\nvar _integer = __webpack_require__(37);\n\nvar _number = __webpack_require__(38);\n\nvar _pattern = __webpack_require__(2);\n\nvar _phone = __webpack_require__(39);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Validator = function () {\n  function Validator() {\n    _classCallCheck(this, Validator);\n\n    this.name = 'v.js';\n    this.alphanumeric = _alphanumeric.alphanumeric;\n    this.digits = _digits.digits;\n    this.email = _email.email;\n    this.integer = _integer.integer;\n    this.number = _number.number;\n    this.pattern = _pattern.pattern;\n    this.phone = _phone.phone;\n  }\n\n  _createClass(Validator, [{\n    key: 'getName',\n    value: function getName() {\n      return this.name;\n    }\n  }]);\n\n  return Validator;\n}();\n\nexports.default = Validator;\nmodule.exports = exports['default'];\n\n/***/ }\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// v.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 83);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d331ce54e0f93055b206","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 0\n// module chunks = 0","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_wks.js\n// module id = 1\n// module chunks = 0","import { check } from './check';\nimport { express } from './express';\n\n/**\n * Check if value is match RegExp. It's an alias now for check()\n *\n * @param {string} expression\n * @returns {function}\n */\nexport const pattern = expression => check(express(expression));\n\n\n\n// WEBPACK FOOTER //\n// ./src/pattern.js","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 3\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 4\n// module chunks = 0","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 5\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 6\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_has.js\n// module id = 7\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iterators.js\n// module id = 8\n// module chunks = 0","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 9\n// module chunks = 0","export function get_phone_code(country_metadata) {\n\treturn country_metadata[0];\n}\n\nexport function get_national_number_pattern(country_metadata) {\n\treturn country_metadata[1];\n}\n\nexport function get_formats(country_metadata) {\n\treturn country_metadata[2] || [];\n}\n\nexport function get_national_prefix(country_metadata) {\n\treturn country_metadata[3];\n}\n\nexport function get_national_prefix_formatting_rule(country_metadata) {\n\treturn country_metadata[4];\n}\n\nexport function get_national_prefix_for_parsing(country_metadata) {\n\tvar national_prefix_for_parsing = country_metadata[5];\n\n\t// If `national_prefix_for_parsing` is not set explicitly,\n\t// then infer it from `national_prefix` (if any)\n\tif (!national_prefix_for_parsing) {\n\t\tnational_prefix_for_parsing = get_national_prefix(country_metadata);\n\t}\n\n\treturn national_prefix_for_parsing;\n}\n\nexport function get_national_prefix_transform_rule(country_metadata) {\n\treturn country_metadata[6];\n}\n\nexport function get_national_prefix_is_optional_when_formatting(country_metadata) {\n\treturn country_metadata[7];\n}\n\nexport function get_leading_digits(country_metadata) {\n\treturn country_metadata[8];\n}\n\nexport function get_format_pattern(format_array) {\n\treturn format_array[0];\n}\n\nexport function get_format_format(format_array) {\n\treturn format_array[1];\n}\n\nexport function get_format_leading_digits_patterns(format_array) {\n\treturn format_array[2] || [];\n}\n\nexport function get_format_national_prefix_formatting_rule(format_array, country_metadata) {\n\treturn format_array[3] || get_national_prefix_formatting_rule(country_metadata);\n}\n\nexport function get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata) {\n\treturn format_array[4] || get_national_prefix_is_optional_when_formatting(country_metadata);\n}\n\nexport function get_format_national_prefix_is_mandatory_when_formatting(format_array, country_metadata) {\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\treturn get_format_national_prefix_formatting_rule(format_array, country_metadata) && !get_format_national_prefix_is_optional_when_formatting(format_array, country_metadata);\n}\n\nexport function get_format_international_format(format_array) {\n\treturn format_array[5] || get_format_format(format_array);\n}\n\n// Formatting information for regions which share\n// a country calling code is contained by only one region\n// for performance reasons. For example, for NANPA region\n// (\"North American Numbering Plan Administration\",\n//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n// it will be contained in the metadata for `US`.\nexport function get_metadata_by_country_phone_code(country_phone_code, metadata) {\n\tvar country_code = metadata.country_phone_code_to_countries[country_phone_code][0];\n\treturn metadata.countries[country_code];\n}\n\nexport function get_types(country_metadata) {\n\treturn country_metadata[9];\n}\n\nfunction get_type(country_metadata, index) {\n\treturn get_types(country_metadata) ? get_types(country_metadata)[index] : undefined;\n}\n\nexport function get_type_fixed_line(country_metadata) {\n\treturn get_type(country_metadata, 0);\n}\n\nexport function get_type_mobile(country_metadata) {\n\treturn get_type(country_metadata, 1);\n}\n\nexport function get_type_toll_free(country_metadata) {\n\treturn get_type(country_metadata, 2);\n}\n\nexport function get_type_premium_rate(country_metadata) {\n\treturn get_type(country_metadata, 3);\n}\n\nexport function get_type_personal_number(country_metadata) {\n\treturn get_type(country_metadata, 4);\n}\n\nexport function get_type_voice_mail(country_metadata) {\n\treturn get_type(country_metadata, 5);\n}\n\nexport function get_type_uan(country_metadata) {\n\treturn get_type(country_metadata, 6);\n}\n\nexport function get_type_pager(country_metadata) {\n\treturn get_type(country_metadata, 7);\n}\n\nexport function get_type_voip(country_metadata) {\n\treturn get_type(country_metadata, 8);\n}\n\nexport function get_type_shared_cost(country_metadata) {\n\treturn get_type(country_metadata, 9);\n}\n//# sourceMappingURL=metadata.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libphonenumber-js/es6/metadata.js\n// module id = 10\n// module chunks = 0","import _getIterator from 'babel-runtime/core-js/get-iterator';\nimport _extends from 'babel-runtime/helpers/extends';\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { matches_entirely } from './common';\n\nimport { get_phone_code, get_national_number_pattern, get_national_prefix_for_parsing, get_national_prefix_transform_rule, get_leading_digits, get_metadata_by_country_phone_code, get_formats, get_type_fixed_line, get_type_mobile, get_type_toll_free, get_type_premium_rate, get_type_personal_number, get_type_voice_mail, get_type_uan, get_type_pager, get_type_voip, get_type_shared_cost, get_format_national_prefix_is_mandatory_when_formatting } from './metadata';\n\nimport { choose_format_for_number } from './format';\n\nexport var PLUS_CHARS = '+\\uFF0B';\n\n// Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\nexport var VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9';\n\n// Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. It also includes the letter 'x' as that is found as a\n// placeholder for carrier information in some phone numbers. Full-width\n// variants are also present.\nexport var VALID_PUNCTUATION = '-x\\u2010-\\u2015\\u2212\\u30FC\\uFF0D-\\uFF0F \\xA0\\xAD\\u200B\\u2060\\u3000' + '()\\uFF08\\uFF09\\uFF3B\\uFF3D.\\\\[\\\\]/~\\u2053\\u223C\\uFF5E';\n\n//  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  Note VALID_PUNCTUATION starts with a -, so must be the first in the range.\n//  (wtf did they mean by saying that; probably nothing)\n//\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}';\n//\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\nvar VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\n// The combined regular expression for valid phone numbers:\n//\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp(\n// Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' +\n// Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER +\n// screw phone number extensions\n// '(?:' + EXTN_PATTERNS_FOR_PARSING + ')?' +\n'$', 'i');\n\n// This consists of the plus symbol, digits, and arabic-indic digits.\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']');\n\n// Regular expression of trailing characters that we want to remove.\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + ']+$');\n\nvar LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+');\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\nvar DIGIT_MAPPINGS = {\n\t'0': '0',\n\t'1': '1',\n\t'2': '2',\n\t'3': '3',\n\t'4': '4',\n\t'5': '5',\n\t'6': '6',\n\t'7': '7',\n\t'8': '8',\n\t'9': '9',\n\t'\\uFF10': '0', // Fullwidth digit 0\n\t'\\uFF11': '1', // Fullwidth digit 1\n\t'\\uFF12': '2', // Fullwidth digit 2\n\t'\\uFF13': '3', // Fullwidth digit 3\n\t'\\uFF14': '4', // Fullwidth digit 4\n\t'\\uFF15': '5', // Fullwidth digit 5\n\t'\\uFF16': '6', // Fullwidth digit 6\n\t'\\uFF17': '7', // Fullwidth digit 7\n\t'\\uFF18': '8', // Fullwidth digit 8\n\t'\\uFF19': '9', // Fullwidth digit 9\n\t'\\u0660': '0', // Arabic-indic digit 0\n\t'\\u0661': '1', // Arabic-indic digit 1\n\t'\\u0662': '2', // Arabic-indic digit 2\n\t'\\u0663': '3', // Arabic-indic digit 3\n\t'\\u0664': '4', // Arabic-indic digit 4\n\t'\\u0665': '5', // Arabic-indic digit 5\n\t'\\u0666': '6', // Arabic-indic digit 6\n\t'\\u0667': '7', // Arabic-indic digit 7\n\t'\\u0668': '8', // Arabic-indic digit 8\n\t'\\u0669': '9', // Arabic-indic digit 9\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\n\t'\\u06F9': '9' // Eastern-Arabic digit 9\n};\n\n// The maximum length of the country calling code.\nvar MAX_LENGTH_COUNTRY_CODE = 3;\n\n// The minimum length of the national significant number.\nvar MIN_LENGTH_FOR_NSN = 2;\n\n// The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\nvar MAX_LENGTH_FOR_NSN = 17;\n\n// We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\nvar MAX_INPUT_STRING_LENGTH = 250;\n\nvar default_options = {\n\tcountry: {}\n};\n\n// `options`:\n//  {\n//    country:\n//    {\n//      restrict - (a two-letter country code)\n//                 the phone number must be in this country\n//\n//      default - (a two-letter country code)\n//                default country to use for phone number parsing and validation\n//                (if no country code could be derived from the phone number)\n//    }\n//  }\n//\n// Returns `{ country, number }`\nexport default function parse(text, options) {\n\tif (typeof options === 'string') {\n\t\tvar restrict_to_country = options;\n\n\t\toptions = _extends({}, default_options, {\n\n\t\t\tcountry: {\n\t\t\t\trestrict: restrict_to_country\n\t\t\t}\n\t\t});\n\t}\n\n\tif (!options) {\n\t\toptions = _extends({}, default_options);\n\t}\n\n\t// Validate country codes\n\n\tif (!this.metadata.countries[options.country.default]) {\n\t\toptions = _extends({}, options);\n\t\tdelete options.country.default;\n\t}\n\n\tif (!this.metadata.countries[options.country.restrict]) {\n\t\toptions = _extends({}, options);\n\t\tdelete options.country.restrict;\n\t}\n\n\t// Parse the phone number\n\n\tvar formatted_phone_number = extract_formatted_phone_number(text);\n\n\t// If the phone number is not viable, then abort.\n\tif (!is_viable_phone_number(formatted_phone_number)) {\n\t\treturn {};\n\t}\n\n\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(formatted_phone_number, this.metadata),\n\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t    number = _parse_phone_number_a.number;\n\n\t// Maybe invalid country phone code encountered\n\n\n\tif (!country_phone_code && !number) {\n\t\treturn {};\n\t}\n\n\tvar country = void 0;\n\tvar country_metadata = void 0;\n\n\t// Whether the phone number is formatted as an international phone number\n\tvar is_international = false;\n\n\tif (country_phone_code) {\n\t\tis_international = true;\n\n\t\t// Check country restriction\n\t\tif (options.country.restrict && country_phone_code !== get_phone_code(this.metadata.countries[options.country.restrict])) {\n\t\t\treturn {};\n\t\t}\n\n\t\tcountry_metadata = get_metadata_by_country_phone_code(country_phone_code, this.metadata);\n\n\t\t// `country` will be set later,\n\t\t// because, for example, for NANPA countries\n\t\t// there are several countries corresponding\n\t\t// to the same `1` country phone code.\n\t\t// Therefore, to reliably determine the exact country,\n\t\t// national (significant) number should be parsed first.\n\t} else if (options.country.default || options.country.restrict) {\n\t\tcountry = options.country.default || options.country.restrict;\n\t\tcountry_metadata = this.metadata.countries[country];\n\n\t\tnumber = normalize(text);\n\t}\n\n\tif (!country_metadata) {\n\t\treturn {};\n\t}\n\n\tvar national_number = strip_national_prefix(number, country_metadata);\n\n\tvar did_have_national_prefix = national_number !== number;\n\n\tif (!is_international && !did_have_national_prefix && is_national_prefix_required(national_number, country_metadata)) {\n\t\treturn {};\n\t}\n\n\t// Sometimes there are several countries\n\t// corresponding to the same country phone code\n\t// (e.g. NANPA countries all having `1` country phone code).\n\t// Therefore, to reliably determine the exact country,\n\t// national (significant) number should have been parsed first.\n\t//\n\tif (!country) {\n\t\tcountry = find_country_code(country_phone_code, national_number, this.metadata);\n\n\t\t// Just in case there's a bug in Google's metadata\n\t\t/* istanbul ignore if */\n\t\tif (!country) {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\t// Validate national (significant) number length.\n\t//\n\t// A sidenote:\n\t//\n\t// They say that sometimes national (significant) numbers\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n\t// Such numbers will just be discarded.\n\t//\n\tif (national_number.length > MAX_LENGTH_FOR_NSN) {\n\t\treturn {};\n\t}\n\n\tvar national_number_rule = new RegExp(get_national_number_pattern(country_metadata));\n\n\tif (!matches_entirely(national_number, national_number_rule)) {\n\t\treturn {};\n\t}\n\n\treturn { country: country, phone: national_number };\n}\n\n// Normalizes a string of characters representing a phone number.\n// This converts wide-ascii and arabic-indic numerals to European numerals,\n// and strips punctuation and alpha characters.\nexport function normalize(number) {\n\treturn replace_characters(number, DIGIT_MAPPINGS);\n}\n\n// For any character not being part of `replacements`\n// it is removed from the phone number.\nexport function replace_characters(text, replacements) {\n\tvar replaced = '';\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = _getIterator(text), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar character = _step.value;\n\n\t\t\tvar replacement = replacements[character.toUpperCase()];\n\n\t\t\tif (replacement !== undefined) {\n\t\t\t\treplaced += replacement;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn replaced;\n}\n\n// Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\nexport function is_viable_phone_number(number) {\n\treturn number.length >= MIN_LENGTH_FOR_NSN && matches_entirely(number, VALID_PHONE_NUMBER_PATTERN);\n}\n\nexport function extract_formatted_phone_number(text) {\n\tif (!text || text.length > MAX_INPUT_STRING_LENGTH) {\n\t\treturn '';\n\t}\n\n\t// Attempt to extract a possible number from the string passed in\n\n\tvar starts_at = text.search(PHONE_NUMBER_START_PATTERN);\n\n\tif (starts_at < 0) {\n\t\treturn '';\n\t}\n\n\treturn text\n\t// Trim everything to the left of the phone number\n\t.slice(starts_at)\n\t// Remove trailing non-numerical characters\n\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n\n// Parses a formatted phone number.\nexport function parse_phone_number(number) {\n\tif (!number) {\n\t\treturn '';\n\t}\n\n\tvar is_international = LEADING_PLUS_CHARS_PATTERN.test(number);\n\n\t// Remove non-digits\n\t// (and strip the possible leading '+')\n\tnumber = normalize(number);\n\n\tif (is_international) {\n\t\treturn '+' + number;\n\t}\n\n\treturn number;\n}\n\n// Parses a formatted phone number\n// and returns `{ country_phone_code, number }`\n// where `number` is the national (significant) phone number.\n//\n// (aka `maybeExtractCountryPhoneCode`)\n//\nexport function parse_phone_number_and_country_phone_code(number, metadata) {\n\tnumber = parse_phone_number(number);\n\n\tif (!number) {\n\t\treturn {};\n\t}\n\n\t// If this is not an international phone number,\n\t// then don't extract country phone code.\n\tif (number[0] !== '+') {\n\t\treturn { number: number };\n\t}\n\n\t// Strip the leading '+' sign\n\tnumber = number.slice(1);\n\n\t// Fast abortion: country codes do not begin with a '0'\n\tif (number[0] === '0') {\n\t\treturn {};\n\t}\n\n\t// The thing with country phone codes\n\t// is that they are orthogonal to each other\n\t// i.e. there's no such country phone code A\n\t// for which country phone code B exists\n\t// where B starts with A.\n\t// Therefore, while scanning digits,\n\t// if a valid country code is found,\n\t// that means that it is the country code.\n\t//\n\tvar i = 1;\n\twhile (i <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n\t\tvar country_phone_code = number.slice(0, i);\n\n\t\tif (metadata.country_phone_code_to_countries[country_phone_code]) {\n\t\t\treturn { country_phone_code: country_phone_code, number: number.slice(i) };\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn {};\n}\n\n// Strips any national prefix (such as 0, 1) present in the number provided\nexport function strip_national_prefix(number, country_metadata) {\n\tvar national_prefix_for_parsing = get_national_prefix_for_parsing(country_metadata);\n\n\tif (!number || !national_prefix_for_parsing) {\n\t\treturn number;\n\t}\n\n\t// Attempt to parse the first digits as a national prefix\n\tvar national_prefix_pattern = new RegExp('^(?:' + national_prefix_for_parsing + ')');\n\tvar national_prefix_matcher = national_prefix_pattern.exec(number);\n\n\t// If no national prefix is present in the phone number,\n\t// but if the national prefix is optional for this country,\n\t// then consider this phone number valid.\n\t//\n\t// Google's reference `libphonenumber` implementation\n\t// wouldn't recognize such phone numbers as valid,\n\t// but I think it would perfectly make sense\n\t// to consider such phone numbers as valid\n\t// because if a national phone number was originally\n\t// formatted without the national prefix\n\t// then it must be parseable back into the original national number.\n\t// In other words, `parse(format(number))`\n\t// must always be equal to `number`.\n\t//\n\tif (!national_prefix_matcher) {\n\t\treturn number;\n\t}\n\n\tvar national_prefix_transform_rule = get_national_prefix_transform_rule(country_metadata);\n\n\tvar national_significant_number = void 0;\n\n\t// `national_prefix_for_parsing` capturing groups\n\t// (used only for really messy cases: Argentina, Brazil, Mexico, Somalia)\n\tvar any_groups_were_captured = national_prefix_matcher[national_prefix_matcher.length - 1];\n\n\t// If the national number tranformation is needed then do it\n\tif (national_prefix_transform_rule && any_groups_were_captured) {\n\t\tnational_significant_number = number.replace(national_prefix_pattern, national_prefix_transform_rule);\n\t}\n\t// Else, no transformation is necessary,\n\t// and just strip the national prefix.\n\telse {\n\t\t\tnational_significant_number = number.slice(national_prefix_matcher[0].length);\n\t\t}\n\n\t// Verify the parsed national (significant) number for this country\n\tvar national_number_rule = new RegExp(get_national_number_pattern(country_metadata));\n\n\t// If the original number was viable, and the resultant number is not,\n\t// then prefer the original phone number.\n\tif (matches_entirely(number, national_number_rule) && !matches_entirely(national_significant_number, national_number_rule)) {\n\t\treturn number;\n\t}\n\n\t// Return the parsed national (significant) number\n\treturn national_significant_number;\n}\n\nexport function find_country_code(country_phone_code, national_phone_number, metadata) {\n\t// Is always non-empty, because `country_phone_code` is always valid\n\tvar possible_countries = metadata.country_phone_code_to_countries[country_phone_code];\n\n\t// If there's just one country corresponding to the country code,\n\t// then just return it, without further phone number digits validation.\n\tif (possible_countries.length === 1) {\n\t\treturn possible_countries[0];\n\t}\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = _getIterator(possible_countries), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar country_code = _step2.value;\n\n\t\t\tvar country = metadata.countries[country_code];\n\n\t\t\t// Leading digits check would be the simplest one\n\t\t\tif (get_leading_digits(country)) {\n\t\t\t\tif (national_phone_number && national_phone_number.search(get_leading_digits(country)) === 0) {\n\t\t\t\t\treturn country_code;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Else perform full validation with all of those bulky\n\t\t\t// fixed-line/mobile/etc regular expressions.\n\t\t\telse if (get_number_type(national_phone_number, country)) {\n\t\t\t\t\treturn country_code;\n\t\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Finds out national phone number type (fixed line, mobile, etc)\nexport function get_number_type(national_number, country_metadata) {\n\t// Is this national number even valid for this country\n\tif (!is_of_type(national_number, get_national_number_pattern(country_metadata))) {\n\t\treturn;\n\t}\n\n\tif (is_of_type(national_number, get_type_mobile(country_metadata))) {\n\t\t// Because duplicate regular expressions are removed\n\t\t// to reduce metadata size, if there's no \"fixed line\" pattern\n\t\t// then it means it was removed due to being a duplicate of some other pattern.\n\t\t//\n\t\t// (no such country in the metadata, therefore no unit test for this `if`)\n\t\t/* istanbul ignore if */\n\t\tif (!get_type_fixed_line(country_metadata)) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\treturn 'MOBILE';\n\t}\n\n\t// Is it fixed line number\n\tif (is_of_type(national_number, get_type_fixed_line(country_metadata))) {\n\t\t// Because duplicate regular expressions are removed\n\t\t// to reduce metadata size, if there's no \"mobile\" pattern\n\t\t// then it means it was removed due to being a duplicate of some other pattern.\n\t\tif (!get_type_mobile(country_metadata)) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\treturn 'FIXED_LINE';\n\t}\n\n\tif (is_of_type(national_number, get_type_toll_free(country_metadata))) {\n\t\treturn 'TOLL_FREE';\n\t}\n\n\tif (is_of_type(national_number, get_type_premium_rate(country_metadata))) {\n\t\treturn 'PREMIUM_RATE';\n\t}\n\n\tif (is_of_type(national_number, get_type_personal_number(country_metadata))) {\n\t\treturn 'PERSONAL_NUMBER';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_voice_mail(country_metadata))) {\n\t\treturn 'VOICEMAIL';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_uan(country_metadata))) {\n\t\treturn 'UAN';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_pager(country_metadata))) {\n\t\treturn 'PAGER';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_voip(country_metadata))) {\n\t\treturn 'VOIP';\n\t}\n\n\t/* istanbul ignore if */\n\tif (is_of_type(national_number, get_type_shared_cost(country_metadata))) {\n\t\treturn 'SHARED_COST';\n\t}\n}\n\nexport function is_of_type(national_number, type) {\n\t// // Check if any possible number lengths are present;\n\t// // if so, we use them to avoid checking\n\t// // the validation pattern if they don't match.\n\t// // If they are absent, this means they match\n\t// // the general description, which we have\n\t// // already checked before a specific number type.\n\t// if (get_possible_lengths(type) &&\n\t// \tget_possible_lengths(type).indexOf(national_number.length) === -1)\n\t// {\n\t// \treturn false\n\t// }\n\n\t// get_type_pattern(type) === type\n\treturn matches_entirely(national_number, type);\n}\n\nexport function is_national_prefix_required(national_number, country_metadata) {\n\tvar format = choose_format_for_number(get_formats(country_metadata), national_number);\n\n\tif (format) {\n\t\treturn get_format_national_prefix_is_mandatory_when_formatting(format, country_metadata);\n\t}\n}\n//# sourceMappingURL=parse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libphonenumber-js/es6/parse.js\n// module id = 11\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/get-iterator.js\n// module id = 12\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_defined.js\n// module id = 13\n// module chunks = 0","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 14\n// module chunks = 0","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 15\n// module chunks = 0","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 16\n// module chunks = 0","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared-key.js\n// module id = 17\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-integer.js\n// module id = 18\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-iobject.js\n// module id = 19\n// module chunks = 0","// Checks whether the entire input sequence can be matched\n// against the regular expression.\nexport function matches_entirely() {\n\tvar text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar regular_expression = arguments[1];\n\n\tif (typeof regular_expression === 'string') {\n\t\tregular_expression = '^(?:' + regular_expression + ')$';\n\t}\n\n\tvar matched_groups = text.match(regular_expression);\n\treturn matched_groups && matched_groups[0].length === text.length;\n}\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libphonenumber-js/es6/common.js\n// module id = 20\n// module chunks = 0","import _getIterator from 'babel-runtime/core-js/get-iterator';\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { matches_entirely } from './common';\n\nimport { parse_phone_number_and_country_phone_code } from './parse';\n\nimport { get_phone_code, get_formats, get_format_pattern, get_format_format, get_format_leading_digits_patterns, get_format_national_prefix_formatting_rule, get_format_national_prefix_is_optional_when_formatting, get_format_international_format, get_metadata_by_country_phone_code } from './metadata';\n\nexport default function format() {\n\tvar input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar format = arguments[1];\n\tvar third_argument = arguments[2];\n\n\t// If the first argument object is expanded\n\tif (typeof input === 'string') {\n\t\t// If number is passed not as an object\n\t\tif (typeof third_argument === 'string') {\n\t\t\tinput = { phone: input, country: format };\n\t\t\tformat = third_argument;\n\t\t} else {\n\t\t\tinput = { phone: input };\n\t\t}\n\t}\n\n\tvar country_metadata = void 0;\n\n\tif (input.country) {\n\t\tcountry_metadata = this.metadata.countries[input.country];\n\t}\n\n\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(input.phone, this.metadata),\n\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t    number = _parse_phone_number_a.number;\n\n\tif (country_phone_code) {\n\t\t// Check country restriction\n\t\tif (input.country && country_phone_code !== get_phone_code(country_metadata)) {\n\t\t\treturn input.phone;\n\t\t}\n\n\t\tcountry_metadata = get_metadata_by_country_phone_code(country_phone_code, this.metadata);\n\t}\n\n\tif (!country_metadata) {\n\t\treturn input.phone;\n\t}\n\n\tswitch (format) {\n\t\tcase 'International':\n\t\t\tif (!number) {\n\t\t\t\treturn '+' + get_phone_code(country_metadata);\n\t\t\t}\n\t\t\tvar national_number = format_national_number(number, 'International', false, country_metadata);\n\t\t\treturn '+' + get_phone_code(country_metadata) + ' ' + national_number;\n\n\t\tcase 'International_plaintext':\n\t\t\treturn '+' + get_phone_code(country_metadata) + input.phone;\n\n\t\tcase 'National':\n\t\t\tif (!number) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn format_national_number(number, 'National', false, country_metadata);\n\t}\n}\n\n// This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly.  Therefore, we use \\d, so that the first\n// group actually used in the pattern will be matched.\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\n\nexport function format_national_number_using_format(number, format, international, enforce_national_prefix, country_metadata) {\n\tvar format_pattern_matcher = new RegExp(get_format_pattern(format));\n\n\tvar national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format, country_metadata);\n\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\tvar national_prefix_may_be_omitted = !national_prefix_formatting_rule || national_prefix_formatting_rule && get_format_national_prefix_is_optional_when_formatting(format, country_metadata) && !enforce_national_prefix;\n\n\tif (!international && !national_prefix_may_be_omitted) {\n\t\treturn number.replace(format_pattern_matcher, get_format_format(format).replace(FIRST_GROUP_PATTERN, national_prefix_formatting_rule));\n\t}\n\n\tvar formatted_number = number.replace(format_pattern_matcher, international ? get_format_international_format(format) : get_format_format(format));\n\n\tif (international) {\n\t\treturn local_to_international_style(formatted_number);\n\t}\n\n\treturn formatted_number;\n}\n\nexport function format_national_number(number, format_as, enforce_national_prefix, country_metadata) {\n\tvar format = choose_format_for_number(get_formats(country_metadata), number);\n\n\tif (!format) {\n\t\treturn number;\n\t}\n\n\treturn format_national_number_using_format(number, format, format_as === 'International', enforce_national_prefix, country_metadata);\n}\n\nexport function choose_format_for_number(available_formats, national_number) {\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = _getIterator(available_formats), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _format = _step.value;\n\n\t\t\t// Validate leading digits\n\t\t\tif (get_format_leading_digits_patterns(_format).length > 0) {\n\t\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\n\t\t\t\tvar last_leading_digits_pattern = get_format_leading_digits_patterns(_format)[get_format_leading_digits_patterns(_format).length - 1];\n\n\t\t\t\t// If leading digits don't match then move on to the next phone number format\n\t\t\t\tif (national_number.search(last_leading_digits_pattern) !== 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check that the national number matches the phone number format regular expression\n\t\t\tif (matches_entirely(national_number, new RegExp(get_format_pattern(_format)))) {\n\t\t\t\treturn _format;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\nexport function local_to_international_style(local) {\n\treturn local\n\t// Remove brackets\n\t.replace(/[\\(\\)]/g, '')\n\t// Replace dashes with spaces\n\t.replace(/\\-/g, ' ').trim();\n}\n//# sourceMappingURL=format.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libphonenumber-js/es6/format.js\n// module id = 21\n// module chunks = 0","/**\n * Check if value is valid by RegExp\n *\n * @param {object} expression RegExp object\n * @returns {function}\n */\nexport const check = expression => value => expression.test(value);\n\n\n\n// WEBPACK FOOTER //\n// ./src/check.js","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_cof.js\n// module id = 23\n// module chunks = 0","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 24\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_enum-bug-keys.js\n// module id = 25\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iobject.js\n// module id = 26\n// module chunks = 0","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-define.js\n// module id = 27\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys.js\n// module id = 28\n// module chunks = 0","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 29\n// module chunks = 0","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_set-to-string-tag.js\n// module id = 30\n// module chunks = 0","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared.js\n// module id = 31\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-object.js\n// module id = 32\n// module chunks = 0","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_uid.js\n// module id = 33\n// module chunks = 0","import { pattern } from './pattern';\n\n/**\n * Check if value is alphanumeric\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport const alphanumeric = pattern('/^\\\\w+$/', 'i');\n\n\n\n// WEBPACK FOOTER //\n// ./src/alphanumeric.js","import { pattern } from './pattern';\n\n/**\n * Check if value is digits\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport const digits = pattern('/^\\\\d+$/');\n\n\n\n// WEBPACK FOOTER //\n// ./src/digits.js","import { check } from './check';\n\n/**\n * Check if value is valid e-mail\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport const email = check(new RegExp(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i));\n\n\n\n// WEBPACK FOOTER //\n// ./src/email.js","import { pattern } from './pattern';\n\n/**\n * Check if value is integer\n *\n * @param {integer} value\n * @returns {boolean}\n */\nexport const integer = pattern('/^-?\\\\d+$/');\n\n\n\n// WEBPACK FOOTER //\n// ./src/integer.js","import { pattern } from './pattern';\n\n/**\n * Check if value is number\n *\n * @param {integer} value\n * @returns {boolean}\n */\nexport const number = pattern('/^-?(\\\\d*\\\\.)?\\\\d+(e[-+]?\\\\d+)?$/', 'i');\n\n\n\n// WEBPACK FOOTER //\n// ./src/number.js","import { isValidNumber } from 'libphonenumber-js';\n\n/**\n * Check if phone number is valid\n * @param  {string} number Phone number\n * @return {boolean}\n */\nexport const phone = number => isValidNumber(number);\n\n\n\n// WEBPACK FOOTER //\n// ./src/phone.js","/**\n * Return RegExp object\n * @param  {string} string Regular expression\n * @return {object}\n */\nexport const express = expression => {\n  let flags = '';\n\n  // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n  if (/^\\/.*\\/(?:[gimy]*)$/.test(expression)) {\n    // Replace the regexp literal string with the first match group: ([gimy]*)\n    // If no flag is present, this will be a blank string\n    flags = expression.replace(/.*\\/([gimy]*)$/, '$1');\n    // Again, replace the regexp literal string with the first match group:\n    // everything excluding the opening and closing slashes and the flags\n    expression = expression.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n  } else {\n    // Anchor regexp:\n    expression = '^' + expression + '$';\n  }\n  return (new RegExp(expression, flags));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/express.js","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/assign.js\n// module id = 41\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 42\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 43\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 44\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/extends.js\n// module id = 45\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/get-iterator.js\n// module id = 46\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/assign.js\n// module id = 47\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 48\n// module chunks = 0","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 49\n// module chunks = 0","module.exports = function(){ /* empty */ };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_add-to-unscopables.js\n// module id = 50\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-includes.js\n// module id = 51\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_classof.js\n// module id = 52\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 53\n// module chunks = 0","module.exports = require('./_global').document && document.documentElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_html.js\n// module id = 54\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 55\n// module chunks = 0","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-create.js\n// module id = 56\n// module chunks = 0","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-step.js\n// module id = 57\n// module chunks = 0","module.exports = true;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_library.js\n// module id = 58\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-assign.js\n// module id = 59\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-create.js\n// module id = 60\n// module chunks = 0","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dps.js\n// module id = 61\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gops.js\n// module id = 62\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gpo.js\n// module id = 63\n// module chunks = 0","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys-internal.js\n// module id = 64\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-pie.js\n// module id = 65\n// module chunks = 0","module.exports = require('./_hide');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_redefine.js\n// module id = 66\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_string-at.js\n// module id = 67\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-index.js\n// module id = 68\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-length.js\n// module id = 69\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 70\n// module chunks = 0","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator-method.js\n// module id = 71\n// module chunks = 0","var anObject = require('./_an-object')\n  , get      = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator.js\n// module id = 72\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.array.iterator.js\n// module id = 73\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.assign.js\n// module id = 74\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 75\n// module chunks = 0","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.string.iterator.js\n// module id = 76\n// module chunks = 0","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/web.dom.iterable.js\n// module id = 77\n// module chunks = 0","import _getIterator from 'babel-runtime/core-js/get-iterator';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n// This is an enhanced port of Google Android `libphonenumber`'s\n// `asyoutypeformatter.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/blob/8d21a365061de2ba0675c878a710a7b24f74d2ae/javascript/i18n/phonenumbers/asyoutypeformatter.js\n\nimport { get_phone_code, get_national_prefix, get_national_prefix_for_parsing, get_formats, get_format_pattern, get_format_format as _get_format_format, get_format_international_format, get_format_national_prefix_formatting_rule, get_format_national_prefix_is_optional_when_formatting, get_format_national_prefix_is_mandatory_when_formatting, get_format_leading_digits_patterns, get_metadata_by_country_phone_code } from './metadata';\n\nimport { VALID_PUNCTUATION, PLUS_SIGN, PLUS_CHARS, VALID_DIGITS, extract_formatted_phone_number, parse_phone_number, parse_phone_number_and_country_phone_code, find_country_code } from './parse';\n\nimport { FIRST_GROUP_PATTERN, format_national_number_using_format, local_to_international_style } from './format';\n\nimport { matches_entirely } from './common';\n\n// Used in phone number format template creation.\n// Could be any digit, I guess.\nvar DUMMY_DIGIT = '9';\nvar DUMMY_DIGIT_MATCHER = new RegExp(DUMMY_DIGIT, 'g');\n// I don't know why is it exactly `15`\nvar LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15;\n// Create a phone number consisting only of the digit 9 that matches the\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\nvar LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH);\n\n// The digits that have not been entered yet will be represented by a \\u2008,\n// the punctuation space.\nvar DIGIT_PLACEHOLDER = 'x'; // '\\u2008' (punctuation space)\nvar DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER);\nvar DIGIT_PLACEHOLDER_MATCHER_GLOBAL = new RegExp(DIGIT_PLACEHOLDER, 'g');\n\n// A pattern that is used to match character classes in regular expressions.\n// An example of a character class is \"[1-4]\".\nvar CHARACTER_CLASS_PATTERN = /\\[([^\\[\\]])*\\]/g;\n\n// Any digit in a regular expression that actually denotes a digit. For\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\n// (8 and 0) are standalone digits, but the rest are not.\n// Two look-aheads are needed because the number following \\\\d could be a\n// two-digit number, since the phone number can be as long as 15 digits.\nvar STANDALONE_DIGIT_PATTERN = /\\d(?=[^,}][^,}])/g;\n\n// A pattern that is used to determine if a `format` is eligible\n// to be used by the \"as you type formatter\".\n// It is eligible when the `format` contains groups of the dollar sign\n// followed by a single digit, separated by valid phone number punctuation.\n// This prevents invalid punctuation (such as the star sign in Israeli star numbers)\n// getting into the output of the \"as you type formatter\".\nvar ELIGIBLE_FORMAT_PATTERN = new RegExp('^' + '[' + VALID_PUNCTUATION + ']*' + '(\\\\$\\\\d[' + VALID_PUNCTUATION + ']*)+' + '$');\n\n// This is the minimum length of the leading digits of a phone number\n// to guarantee the first \"leading digits pattern\" for a phone number format\n// to be preemptive.\nvar MIN_LEADING_DIGITS_LENGTH = 3;\n\nvar VALID_INCOMPLETE_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\nvar VALID_INCOMPLETE_PHONE_NUMBER_PATTERN = new RegExp('^' + VALID_INCOMPLETE_PHONE_NUMBER + '$', 'i');\n\nexport default function (metadata) {\n\tvar as_you_type = function () {\n\t\tfunction as_you_type(country_code) {\n\t\t\t_classCallCheck(this, as_you_type);\n\n\t\t\tif (country_code && metadata.countries[country_code]) {\n\t\t\t\tthis.default_country = country_code;\n\t\t\t}\n\n\t\t\tthis.reset();\n\t\t}\n\n\t\t_createClass(as_you_type, [{\n\t\t\tkey: 'input',\n\t\t\tvalue: function input(text) {\n\t\t\t\t// Parse input\n\n\t\t\t\tvar extracted_number = extract_formatted_phone_number(text);\n\n\t\t\t\t// Special case for a lone '+' sign\n\t\t\t\t// since it's not considered a possible phone number.\n\t\t\t\tif (!extracted_number) {\n\t\t\t\t\tif (text && text.indexOf('+') >= 0) {\n\t\t\t\t\t\textracted_number = '+';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Validate possible first part of a phone number\n\t\t\t\tif (!matches_entirely(extracted_number, VALID_INCOMPLETE_PHONE_NUMBER_PATTERN)) {\n\t\t\t\t\treturn this.current_output;\n\t\t\t\t}\n\n\t\t\t\treturn this.process_input(parse_phone_number(extracted_number));\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'process_input',\n\t\t\tvalue: function process_input(input) {\n\t\t\t\t// If an out of position '+' sign detected\n\t\t\t\t// (or a second '+' sign),\n\t\t\t\t// then just drop it from the input.\n\t\t\t\tif (input[0] === '+') {\n\t\t\t\t\tif (!this.parsed_input) {\n\t\t\t\t\t\tthis.parsed_input += '+';\n\n\t\t\t\t\t\t// If a default country was set\n\t\t\t\t\t\t// then reset it because an explicitly international\n\t\t\t\t\t\t// phone number is being entered\n\t\t\t\t\t\tthis.reset_countriness();\n\t\t\t\t\t}\n\n\t\t\t\t\tinput = input.slice(1);\n\t\t\t\t}\n\n\t\t\t\t// Raw phone number\n\t\t\t\tthis.parsed_input += input;\n\n\t\t\t\t// Reset phone number validation state\n\t\t\t\tthis.valid = false;\n\n\t\t\t\t// Add digits to the national number\n\t\t\t\tthis.national_number += input;\n\n\t\t\t\t// Try to format the parsed input\n\n\t\t\t\tif (this.is_international()) {\n\t\t\t\t\tif (!this.country_phone_code) {\n\t\t\t\t\t\t// If one looks at country phone codes\n\t\t\t\t\t\t// then he can notice that no one country phone code\n\t\t\t\t\t\t// is ever a (leftmost) substring of another country phone code.\n\t\t\t\t\t\t// So if a valid country code is extracted so far\n\t\t\t\t\t\t// then it means that this is the country code.\n\n\t\t\t\t\t\t// If no country phone code could be extracted so far,\n\t\t\t\t\t\t// then just return the raw phone number,\n\t\t\t\t\t\t// because it has no way of knowing\n\t\t\t\t\t\t// how to format the phone number so far.\n\t\t\t\t\t\tif (!this.extract_country_phone_code()) {\n\t\t\t\t\t\t\t// Return raw phone number\n\t\t\t\t\t\t\treturn this.parsed_input;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Initialize country-specific data\n\t\t\t\t\t\tthis.initialize_phone_number_formats_for_this_country_phone_code();\n\t\t\t\t\t\tthis.reset_format();\n\t\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t\t}\n\t\t\t\t\t// `this.country` could be `undefined`,\n\t\t\t\t\t// for instance, when there is ambiguity\n\t\t\t\t\t// in a form of several different countries\n\t\t\t\t\t// each corresponding to the same country phone code\n\t\t\t\t\t// (e.g. NANPA: USA, Canada, etc),\n\t\t\t\t\t// and there's not enough digits entered\n\t\t\t\t\t// to reliably determine the country\n\t\t\t\t\t// the phone number belongs to.\n\t\t\t\t\t// Therefore, in cases of such ambiguity,\n\t\t\t\t\t// each time something is input,\n\t\t\t\t\t// try to determine the country\n\t\t\t\t\t// (if it's not determined yet).\n\t\t\t\t\telse if (!this.country) {\n\t\t\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Some national prefixes are substrings of other national prefixes\n\t\t\t\t\t// (for the same country), therefore try to extract national prefix each time\n\t\t\t\t\t// because a longer national prefix might be available at some point in time.\n\n\t\t\t\t\tvar previous_national_prefix = this.national_prefix;\n\t\t\t\t\tthis.national_number = this.national_prefix + this.national_number;\n\n\t\t\t\t\t// Possibly extract a national prefix\n\t\t\t\t\tthis.extract_national_prefix();\n\n\t\t\t\t\tif (this.national_prefix !== previous_national_prefix) {\n\t\t\t\t\t\t// National number has changed\n\t\t\t\t\t\t// (due to another national prefix been extracted)\n\t\t\t\t\t\t// therefore national number has changed\n\t\t\t\t\t\t// therefore reset all previous formatting data.\n\t\t\t\t\t\t// (and leading digits matching state)\n\t\t\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t\t\t\tthis.reset_format();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Format the phone number (given the next digits)\n\t\t\t\tvar formatted_national_phone_number = this.format_national_phone_number(input);\n\n\t\t\t\t// If the phone number could be formatted,\n\t\t\t\t// then return it, possibly prepending with country phone code\n\t\t\t\t// (for international phone numbers only)\n\t\t\t\tif (formatted_national_phone_number) {\n\t\t\t\t\treturn this.full_phone_number(formatted_national_phone_number);\n\t\t\t\t}\n\n\t\t\t\t// If the phone number couldn't be formatted,\n\t\t\t\t// then just fall back to the raw phone number.\n\t\t\t\treturn this.parsed_input;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'format_national_phone_number',\n\t\t\tvalue: function format_national_phone_number(next_digits) {\n\t\t\t\t// Format the next phone number digits\n\t\t\t\t// using the previously chosen phone number format.\n\t\t\t\t//\n\t\t\t\t// This is done here because if `attempt_to_format_complete_phone_number`\n\t\t\t\t// was placed before this call then the `template`\n\t\t\t\t// wouldn't reflect the situation correctly (and would therefore be inconsistent)\n\t\t\t\t//\n\t\t\t\tvar national_number_formatted_with_previous_format = void 0;\n\t\t\t\tif (this.chosen_format) {\n\t\t\t\t\tnational_number_formatted_with_previous_format = this.format_next_national_number_digits(next_digits);\n\t\t\t\t}\n\n\t\t\t\t// See if the input digits can be formatted properly already. If not,\n\t\t\t\t// use the results from format_next_national_number_digits(), which does formatting\n\t\t\t\t// based on the formatting pattern chosen.\n\n\t\t\t\tvar formatted_number = this.attempt_to_format_complete_phone_number();\n\n\t\t\t\tif (formatted_number) {\n\t\t\t\t\tif (this.country) {\n\t\t\t\t\t\tthis.valid = true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn formatted_number;\n\t\t\t\t}\n\n\t\t\t\t// Check if the previously chosen phone number format still holds\n\t\t\t\tthis.match_formats_by_leading_digits();\n\n\t\t\t\t// If the previously chosen phone number format\n\t\t\t\t// didn't match the next (current) digit being input\n\t\t\t\t// (leading digits pattern didn't match).\n\t\t\t\tif (this.choose_another_format()) {\n\t\t\t\t\t// And a more appropriate phone number format\n\t\t\t\t\t// has been chosen for these `leading digits`,\n\t\t\t\t\t// then format the national phone number (so far)\n\t\t\t\t\t// using the newly selected phone number pattern.\n\n\t\t\t\t\t// Will return `undefined` if it couldn't format\n\t\t\t\t\t// the supplied national number\n\t\t\t\t\t// using the selected phone number pattern.\n\n\t\t\t\t\treturn this.reformat_national_number();\n\t\t\t\t}\n\n\t\t\t\t// If could format the next (current) digit\n\t\t\t\t// using the previously chosen phone number format\n\t\t\t\t// then return the formatted number so far.\n\n\t\t\t\t// If no new phone number format could be chosen,\n\t\t\t\t// and couldn't format the supplied national number\n\t\t\t\t// using the selected phone number pattern,\n\t\t\t\t// then it will return `undefined`.\n\n\t\t\t\treturn national_number_formatted_with_previous_format;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'reset',\n\t\t\tvalue: function reset() {\n\t\t\t\t// Input stripped of non-phone-number characters.\n\t\t\t\t// Can only contain a possible leading '+' sign and digits.\n\t\t\t\tthis.parsed_input = '';\n\n\t\t\t\tthis.current_output = '';\n\n\t\t\t\t// This contains the national prefix that has been extracted. It contains only\n\t\t\t\t// digits without formatting.\n\t\t\t\tthis.national_prefix = '';\n\n\t\t\t\tthis.national_number = '';\n\n\t\t\t\tthis.reset_countriness();\n\n\t\t\t\tthis.reset_format();\n\n\t\t\t\tthis.valid = false;\n\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'reset_country',\n\t\t\tvalue: function reset_country() {\n\t\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\t\tthis.country = this.default_country;\n\t\t\t\t} else {\n\t\t\t\t\tthis.country = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'reset_countriness',\n\t\t\tvalue: function reset_countriness() {\n\t\t\t\tthis.reset_country();\n\n\t\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\t\tthis.country_metadata = metadata.countries[this.default_country];\n\t\t\t\t\tthis.country_phone_code = this.country_metadata.phone_code;\n\n\t\t\t\t\tthis.initialize_phone_number_formats_for_this_country_phone_code();\n\t\t\t\t} else {\n\t\t\t\t\tthis.country_metadata = undefined;\n\t\t\t\t\tthis.country_phone_code = undefined;\n\n\t\t\t\t\tthis.available_formats = [];\n\t\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'reset_format',\n\t\t\tvalue: function reset_format() {\n\t\t\t\tthis.chosen_format = undefined;\n\t\t\t\tthis.template = undefined;\n\t\t\t\tthis.partially_populated_template = undefined;\n\t\t\t\tthis.last_match_position = -1;\n\t\t\t}\n\n\t\t\t// Format each digit of national phone number (so far)\n\t\t\t// using the newly selected phone number pattern.\n\n\t\t}, {\n\t\t\tkey: 'reformat_national_number',\n\t\t\tvalue: function reformat_national_number() {\n\t\t\t\t// Format each digit of national phone number (so far)\n\t\t\t\t// using the selected phone number pattern.\n\t\t\t\treturn this.format_next_national_number_digits(this.national_number);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'initialize_phone_number_formats_for_this_country_phone_code',\n\t\t\tvalue: function initialize_phone_number_formats_for_this_country_phone_code() {\n\t\t\t\t// Get all \"eligible\" phone number formats for this country\n\t\t\t\tthis.available_formats = get_formats(this.country_metadata).filter(function (format) {\n\t\t\t\t\treturn ELIGIBLE_FORMAT_PATTERN.test(get_format_international_format(format));\n\t\t\t\t})\n\t\t\t\t// Try the formats with \"leading digits\" defined first\n\t\t\t\t.sort(function (a, b) {\n\t\t\t\t\t// Leading digits are defined for most formats\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (get_format_leading_digits_patterns(a).length === 0 && get_format_leading_digits_patterns(b).length > 0) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Leading digits are defined for most formats\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (get_format_leading_digits_patterns(a).length > 0 && get_format_leading_digits_patterns(b).length === 0) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'match_formats_by_leading_digits',\n\t\t\tvalue: function match_formats_by_leading_digits() {\n\t\t\t\tvar leading_digits = this.national_number;\n\n\t\t\t\t// \"leading digits\" patterns start with a maximum 3 digits,\n\t\t\t\t// and then with each additional digit\n\t\t\t\t// a more precise \"leading digits\" pattern is specified.\n\t\t\t\t// They could make \"leading digits\" patterns start\n\t\t\t\t// with a maximum of a single digit, but they didn't,\n\t\t\t\t// so it's possible that some phone number formats\n\t\t\t\t// will be falsely rejected until there are at least\n\t\t\t\t// 3 digits in the national (significant) number being input.\n\n\t\t\t\tvar index_of_leading_digits_pattern = leading_digits.length - MIN_LEADING_DIGITS_LENGTH;\n\n\t\t\t\tif (index_of_leading_digits_pattern < 0) {\n\t\t\t\t\tindex_of_leading_digits_pattern = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.matching_formats = this.get_relevant_phone_number_formats().filter(function (format) {\n\t\t\t\t\tvar leading_digits_pattern_count = get_format_leading_digits_patterns(format).length;\n\n\t\t\t\t\t// Keep everything that isn't restricted by leading digits.\n\t\t\t\t\tif (leading_digits_pattern_count === 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar leading_digits_pattern_index = Math.min(index_of_leading_digits_pattern, leading_digits_pattern_count - 1);\n\t\t\t\t\tvar leading_digits_pattern = get_format_leading_digits_patterns(format)[leading_digits_pattern_index];\n\t\t\t\t\treturn new RegExp('^' + leading_digits_pattern).test(leading_digits);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'get_relevant_phone_number_formats',\n\t\t\tvalue: function get_relevant_phone_number_formats() {\n\t\t\t\tvar leading_digits = this.national_number;\n\n\t\t\t\t// \"leading digits\" patterns start with a maximum 3 digits,\n\t\t\t\t// and then with each additional digit\n\t\t\t\t// a more precise \"leading digits\" pattern is specified.\n\t\t\t\t// They could make \"leading digits\" patterns start\n\t\t\t\t// with a maximum of a single digit, but they didn't,\n\t\t\t\t// so it's possible that some phone number formats\n\t\t\t\t// will be falsely rejected until there are at least\n\t\t\t\t// 3 digits in the national (significant) number being input.\n\n\t\t\t\tif (leading_digits.length <= MIN_LEADING_DIGITS_LENGTH) {\n\t\t\t\t\treturn this.available_formats;\n\t\t\t\t}\n\n\t\t\t\treturn this.matching_formats;\n\t\t\t}\n\n\t\t\t// Check to see if there is an exact pattern match for these digits. If so, we\n\t\t\t// should use this instead of any other formatting template whose\n\t\t\t// leadingDigitsPattern also matches the input.\n\n\t\t}, {\n\t\t\tkey: 'attempt_to_format_complete_phone_number',\n\t\t\tvalue: function attempt_to_format_complete_phone_number() {\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = _getIterator(this.get_relevant_phone_number_formats()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar format = _step.value;\n\n\t\t\t\t\t\tvar matcher = new RegExp('^(?:' + get_format_pattern(format) + ')$');\n\n\t\t\t\t\t\tif (!matcher.test(this.national_number)) {\n\t\t\t\t\t\t\t// If the national prefix is optional\n\t\t\t\t\t\t\t// then also try to format the phone number\n\t\t\t\t\t\t\t// without the national prefix being extracted.\n\t\t\t\t\t\t\tif (this.national_prefix && get_format_national_prefix_is_optional_when_formatting(format, this.country_metadata)) {\n\t\t\t\t\t\t\t\tif (!matcher.test(this.national_prefix + this.national_number)) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.national_number = this.national_prefix + this.national_number;\n\t\t\t\t\t\t\t\tthis.national_prefix = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.validate_format(format)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// To leave the formatter in a consistent state\n\t\t\t\t\t\tthis.reset_format();\n\t\t\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t\t\tvar formatted_number = format_national_number_using_format(this.national_number, format, this.is_international(), this.national_prefix.length > 0, this.country_metadata);\n\n\t\t\t\t\t\t// Set `this.template` and `this.partially_populated_template`\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// `else` case doesn't ever happen\n\t\t\t\t\t\t// with the current metadata,\n\t\t\t\t\t\t// but just in case.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\t\tif (this.create_formatting_template(format)) {\n\t\t\t\t\t\t\t// Populate `this.partially_populated_template`\n\t\t\t\t\t\t\tthis.reformat_national_number();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar full_number = this.full_phone_number(formatted_number);\n\n\t\t\t\t\t\t\tthis.template = full_number.replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER);\n\t\t\t\t\t\t\tthis.partially_populated_template = full_number;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn formatted_number;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Combines the national number with the appropriate prefix\n\n\t\t}, {\n\t\t\tkey: 'full_phone_number',\n\t\t\tvalue: function full_phone_number(formatted_national_number) {\n\t\t\t\tif (this.is_international()) {\n\t\t\t\t\treturn '+' + this.country_phone_code + ' ' + formatted_national_number;\n\t\t\t\t}\n\n\t\t\t\treturn formatted_national_number;\n\t\t\t}\n\n\t\t\t// Extracts the country calling code from the beginning\n\t\t\t// of the entered `national_number` (so far),\n\t\t\t// and places the remaining input into the `national_number`.\n\n\t\t}, {\n\t\t\tkey: 'extract_country_phone_code',\n\t\t\tvalue: function extract_country_phone_code() {\n\t\t\t\tif (!this.national_number) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar _parse_phone_number_a = parse_phone_number_and_country_phone_code(this.parsed_input, metadata),\n\t\t\t\t    country_phone_code = _parse_phone_number_a.country_phone_code,\n\t\t\t\t    number = _parse_phone_number_a.number;\n\n\t\t\t\tif (!country_phone_code) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.country_phone_code = country_phone_code;\n\t\t\t\tthis.national_number = number;\n\n\t\t\t\treturn this.country_metadata = get_metadata_by_country_phone_code(country_phone_code, metadata);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'extract_national_prefix',\n\t\t\tvalue: function extract_national_prefix() {\n\t\t\t\tthis.national_prefix = '';\n\n\t\t\t\tif (!this.country_metadata) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar national_prefix_for_parsing = get_national_prefix_for_parsing(this.country_metadata);\n\n\t\t\t\tif (!national_prefix_for_parsing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar matches = this.national_number.match(new RegExp('^(?:' + national_prefix_for_parsing + ')'));\n\n\t\t\t\t// Since some national prefix patterns are entirely optional, check that a\n\t\t\t\t// national prefix could actually be extracted.\n\t\t\t\tif (!matches || !matches[0]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar national_number_starts_at = matches[0].length;\n\n\t\t\t\tthis.national_prefix = this.national_number.slice(0, national_number_starts_at);\n\t\t\t\tthis.national_number = this.national_number.slice(national_number_starts_at);\n\n\t\t\t\treturn this.national_prefix;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'choose_another_format',\n\t\t\tvalue: function choose_another_format() {\n\t\t\t\t// When there are multiple available formats, the formatter uses the first\n\t\t\t\t// format where a formatting template could be created.\n\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator2 = _getIterator(this.get_relevant_phone_number_formats()), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\tvar format = _step2.value;\n\n\t\t\t\t\t\t// If this format is currently being used\n\t\t\t\t\t\t// and is still possible, then stick to it.\n\t\t\t\t\t\tif (this.chosen_format === format) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this `format` is suitable for \"as you type\",\n\t\t\t\t\t\t// then extract the template from this format\n\t\t\t\t\t\t// and use it to format the phone number being input.\n\n\t\t\t\t\t\tif (!this.validate_format(format)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.create_formatting_template(format)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t\t\t// With a new formatting template, the matched position\n\t\t\t\t\t\t// using the old template needs to be reset.\n\t\t\t\t\t\tthis.last_match_position = -1;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// No format matches the phone number,\n\t\t\t\t\t// therefore set `country` to `undefined`\n\t\t\t\t\t// (or to the default country).\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.reset_country();\n\n\t\t\t\t// No format matches the national phone number entered\n\t\t\t\tthis.reset_format();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'validate_format',\n\t\t\tvalue: function validate_format(format) {\n\t\t\t\t// If national prefix is mandatory for this phone number format\n\t\t\t\t// and the user didn't input the national prefix,\n\t\t\t\t// then this phone number format isn't suitable.\n\t\t\t\tif (!this.is_international() && !this.national_prefix && get_format_national_prefix_is_mandatory_when_formatting(format, this.country_metadata)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'create_formatting_template',\n\t\t\tvalue: function create_formatting_template(format) {\n\t\t\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\n\t\t\t\t// (20|3)\\d{4}. In those cases we quickly return.\n\t\t\t\t// (Though there's no such format in current metadata)\n\t\t\t\t/* istanbul ignore if */\n\t\t\t\tif (get_format_pattern(format).indexOf('|') >= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format, this.country_metadata);\n\n\t\t\t\t// A very smart trick by the guys at Google\n\t\t\t\tvar number_pattern = get_format_pattern(format)\n\t\t\t\t// Replace anything in the form of [..] with \\d\n\t\t\t\t.replace(CHARACTER_CLASS_PATTERN, '\\\\d')\n\t\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\n\t\t\t\t.replace(STANDALONE_DIGIT_PATTERN, '\\\\d');\n\n\t\t\t\t// This match will always succeed,\n\t\t\t\t// because the \"longest dummy phone number\"\n\t\t\t\t// has enough length to accomodate any possible\n\t\t\t\t// national phone number format pattern.\n\t\t\t\tvar dummy_phone_number_matching_format_pattern = LONGEST_DUMMY_PHONE_NUMBER.match(number_pattern)[0];\n\n\t\t\t\t// If the national number entered is too long\n\t\t\t\t// for any phone number format, then abort.\n\t\t\t\tif (this.national_number.length > dummy_phone_number_matching_format_pattern.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Now prepare phone number format\n\t\t\t\tvar number_format = this.get_format_format(format);\n\n\t\t\t\t// If the user did input the national prefix\n\t\t\t\t// then maybe make it a part of the phone number template\n\t\t\t\tif (this.national_prefix) {\n\t\t\t\t\tvar _national_prefix_formatting_rule = get_format_national_prefix_formatting_rule(format, this.country_metadata);\n\n\t\t\t\t\t// If national prefix formatting rule is set\n\t\t\t\t\t// for this phone number format\n\t\t\t\t\tif (_national_prefix_formatting_rule) {\n\t\t\t\t\t\t// Make the national prefix a part of the phone number template\n\t\t\t\t\t\tnumber_format = number_format.replace(FIRST_GROUP_PATTERN, _national_prefix_formatting_rule);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get a formatting template which can be used to efficiently format\n\t\t\t\t// a partial number where digits are added one by one.\n\n\t\t\t\t// Create formatting template for this phone number format\n\t\t\t\tvar template = dummy_phone_number_matching_format_pattern\n\t\t\t\t// Format the dummy phone number according to the format\n\t\t\t\t.replace(new RegExp(number_pattern, 'g'), number_format)\n\t\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER\n\t\t\t\t.replace(DUMMY_DIGIT_MATCHER, DIGIT_PLACEHOLDER);\n\n\t\t\t\t// This one is for national number only\n\t\t\t\tthis.partially_populated_template = template;\n\n\t\t\t\t// For convenience, the public `.template` property\n\t\t\t\t// is gonna contain the whole international number\n\t\t\t\t// if the phone number being input is international.\n\t\t\t\tif (this.is_international()) {\n\t\t\t\t\ttemplate = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.country_phone_code.length) + ' ' + template;\n\t\t\t\t}\n\t\t\t\t// For local numbers, replace national prefix\n\t\t\t\t// with a digit placeholder.\n\t\t\t\telse {\n\t\t\t\t\t\ttemplate = template.replace(/\\d/g, DIGIT_PLACEHOLDER);\n\t\t\t\t\t}\n\n\t\t\t\t// This one is for the full phone number\n\t\t\t\treturn this.template = template;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'format_next_national_number_digits',\n\t\t\tvalue: function format_next_national_number_digits(digits) {\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = _getIterator(digits), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar digit = _step3.value;\n\n\t\t\t\t\t\t// If there is room for more digits in current `template`,\n\t\t\t\t\t\t// then set the next digit in the `template`,\n\t\t\t\t\t\t// and return the formatted digits so far.\n\n\t\t\t\t\t\t// If more digits are entered than the current format could handle\n\t\t\t\t\t\tif (this.partially_populated_template.slice(this.last_match_position + 1).search(DIGIT_PLACEHOLDER_MATCHER) === -1) {\n\t\t\t\t\t\t\t// Reset the current format,\n\t\t\t\t\t\t\t// so that the new format will be chosen\n\t\t\t\t\t\t\t// in a subsequent `this.choose_another_format()` call\n\t\t\t\t\t\t\t// later in code.\n\t\t\t\t\t\t\tthis.chosen_format = undefined;\n\t\t\t\t\t\t\tthis.template = undefined;\n\t\t\t\t\t\t\tthis.partially_populated_template = undefined;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.last_match_position = this.partially_populated_template.search(DIGIT_PLACEHOLDER_MATCHER);\n\t\t\t\t\t\tthis.partially_populated_template = this.partially_populated_template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return the formatted phone number so far\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn close_dangling_braces(this.partially_populated_template, this.last_match_position + 1).replace(DIGIT_PLACEHOLDER_MATCHER_GLOBAL, ' ');\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'is_international',\n\t\t\tvalue: function is_international() {\n\t\t\t\treturn this.parsed_input && this.parsed_input[0] === '+';\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'get_format_format',\n\t\t\tvalue: function get_format_format(format) {\n\t\t\t\tif (this.is_international()) {\n\t\t\t\t\treturn local_to_international_style(get_format_international_format(format));\n\t\t\t\t}\n\n\t\t\t\treturn _get_format_format(format);\n\t\t\t}\n\n\t\t\t// Determines the country of the phone number\n\t\t\t// entered so far based on the country phone code\n\t\t\t// and the national phone number.\n\n\t\t}, {\n\t\t\tkey: 'determine_the_country',\n\t\t\tvalue: function determine_the_country() {\n\t\t\t\tthis.country = find_country_code(this.country_phone_code, this.national_number, metadata);\n\t\t\t}\n\t\t}]);\n\n\t\treturn as_you_type;\n\t}();\n\n\tas_you_type.DIGIT_PLACEHOLDER = DIGIT_PLACEHOLDER;\n\n\treturn as_you_type;\n}\n\nexport function close_dangling_braces(template, cut_before) {\n\tvar retained_template = template.slice(0, cut_before);\n\n\tvar opening_braces = count_occurences('(', retained_template);\n\tvar closing_braces = count_occurences(')', retained_template);\n\n\tvar dangling_braces = opening_braces - closing_braces;\n\n\twhile (dangling_braces > 0 && cut_before < template.length) {\n\t\tif (template[cut_before] === ')') {\n\t\t\tdangling_braces--;\n\t\t}\n\t\tcut_before++;\n\t}\n\n\treturn template.slice(0, cut_before);\n}\n\n// Counts all occurences of a symbol in a string\nexport function count_occurences(symbol, string) {\n\tvar count = 0;\n\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\n\ttry {\n\t\tfor (var _iterator4 = _getIterator(string), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\tvar character = _step4.value;\n\n\t\t\tif (character === symbol) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError4 = true;\n\t\t_iteratorError4 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t_iterator4.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError4) {\n\t\t\t\tthrow _iteratorError4;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn count;\n}\n\n// Repeats a string (or a symbol) N times.\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\nexport function repeat(string, times) {\n\tif (times < 1) {\n\t\treturn '';\n\t}\n\n\tvar result = '';\n\n\twhile (times > 1) {\n\t\tif (times & 1) {\n\t\t\tresult += string;\n\t\t}\n\n\t\ttimes >>= 1;\n\t\tstring += string;\n\t}\n\n\treturn result + string;\n}\n//# sourceMappingURL=as you type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libphonenumber-js/es6/as you type.js\n// module id = 79\n// module chunks = 0","import parse, { get_number_type } from './parse';\n\nimport { get_types } from './metadata';\n\nexport default function is_valid(parsed, country_code) {\n\tif (!parsed) {\n\t\treturn false;\n\t}\n\n\tif (typeof parsed === 'string') {\n\t\tparsed = parse.call(this, parsed, country_code);\n\t}\n\n\tif (!parsed.country) {\n\t\treturn false;\n\t}\n\n\tvar country_metadata = this.metadata.countries[parsed.country];\n\n\tif (get_types(country_metadata)) {\n\t\tif (!get_number_type(parsed.phone, country_metadata)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n//# sourceMappingURL=validate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libphonenumber-js/es6/validate.js\n// module id = 80\n// module chunks = 0","import metadata from './metadata.min'\n\nimport\n{\n\tparse as _parse,\n\tformat as _format,\n\tis_valid_number as _is_valid_number,\n\tas_you_type as _as_you_type\n}\nfrom './custom.es6'\n\n// `const` is not supported in Internet Explorer 10\n\nvar context = { metadata: metadata }\n\nexport var parse  = _parse.bind(context)\nexport var format = _format.bind(context)\n\nexport var is_valid_number = _is_valid_number.bind(context)\nexport var isValidNumber   = is_valid_number\n\nexport var as_you_type = _as_you_type(metadata)\nexport var asYouType   = as_you_type\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libphonenumber-js/index.es6.js\n// module id = 81\n// module chunks = 0","module.exports = {\n\t\"country_phone_code_to_countries\": {\n\t\t\"1\": [\n\t\t\t\"US\",\n\t\t\t\"AG\",\n\t\t\t\"AI\",\n\t\t\t\"AS\",\n\t\t\t\"BB\",\n\t\t\t\"BM\",\n\t\t\t\"BS\",\n\t\t\t\"CA\",\n\t\t\t\"DM\",\n\t\t\t\"DO\",\n\t\t\t\"GD\",\n\t\t\t\"GU\",\n\t\t\t\"JM\",\n\t\t\t\"KN\",\n\t\t\t\"KY\",\n\t\t\t\"LC\",\n\t\t\t\"MP\",\n\t\t\t\"MS\",\n\t\t\t\"PR\",\n\t\t\t\"SX\",\n\t\t\t\"TC\",\n\t\t\t\"TT\",\n\t\t\t\"VC\",\n\t\t\t\"VG\",\n\t\t\t\"VI\"\n\t\t],\n\t\t\"7\": [\n\t\t\t\"RU\",\n\t\t\t\"KZ\"\n\t\t],\n\t\t\"20\": [\n\t\t\t\"EG\"\n\t\t],\n\t\t\"27\": [\n\t\t\t\"ZA\"\n\t\t],\n\t\t\"30\": [\n\t\t\t\"GR\"\n\t\t],\n\t\t\"31\": [\n\t\t\t\"NL\"\n\t\t],\n\t\t\"32\": [\n\t\t\t\"BE\"\n\t\t],\n\t\t\"33\": [\n\t\t\t\"FR\"\n\t\t],\n\t\t\"34\": [\n\t\t\t\"ES\"\n\t\t],\n\t\t\"36\": [\n\t\t\t\"HU\"\n\t\t],\n\t\t\"39\": [\n\t\t\t\"IT\",\n\t\t\t\"VA\"\n\t\t],\n\t\t\"40\": [\n\t\t\t\"RO\"\n\t\t],\n\t\t\"41\": [\n\t\t\t\"CH\"\n\t\t],\n\t\t\"43\": [\n\t\t\t\"AT\"\n\t\t],\n\t\t\"44\": [\n\t\t\t\"GB\",\n\t\t\t\"GG\",\n\t\t\t\"IM\",\n\t\t\t\"JE\"\n\t\t],\n\t\t\"45\": [\n\t\t\t\"DK\"\n\t\t],\n\t\t\"46\": [\n\t\t\t\"SE\"\n\t\t],\n\t\t\"47\": [\n\t\t\t\"NO\",\n\t\t\t\"SJ\"\n\t\t],\n\t\t\"48\": [\n\t\t\t\"PL\"\n\t\t],\n\t\t\"49\": [\n\t\t\t\"DE\"\n\t\t],\n\t\t\"51\": [\n\t\t\t\"PE\"\n\t\t],\n\t\t\"52\": [\n\t\t\t\"MX\"\n\t\t],\n\t\t\"53\": [\n\t\t\t\"CU\"\n\t\t],\n\t\t\"54\": [\n\t\t\t\"AR\"\n\t\t],\n\t\t\"55\": [\n\t\t\t\"BR\"\n\t\t],\n\t\t\"56\": [\n\t\t\t\"CL\"\n\t\t],\n\t\t\"57\": [\n\t\t\t\"CO\"\n\t\t],\n\t\t\"58\": [\n\t\t\t\"VE\"\n\t\t],\n\t\t\"60\": [\n\t\t\t\"MY\"\n\t\t],\n\t\t\"61\": [\n\t\t\t\"AU\",\n\t\t\t\"CC\",\n\t\t\t\"CX\"\n\t\t],\n\t\t\"62\": [\n\t\t\t\"ID\"\n\t\t],\n\t\t\"63\": [\n\t\t\t\"PH\"\n\t\t],\n\t\t\"64\": [\n\t\t\t\"NZ\"\n\t\t],\n\t\t\"65\": [\n\t\t\t\"SG\"\n\t\t],\n\t\t\"66\": [\n\t\t\t\"TH\"\n\t\t],\n\t\t\"81\": [\n\t\t\t\"JP\"\n\t\t],\n\t\t\"82\": [\n\t\t\t\"KR\"\n\t\t],\n\t\t\"84\": [\n\t\t\t\"VN\"\n\t\t],\n\t\t\"86\": [\n\t\t\t\"CN\"\n\t\t],\n\t\t\"90\": [\n\t\t\t\"TR\"\n\t\t],\n\t\t\"91\": [\n\t\t\t\"IN\"\n\t\t],\n\t\t\"92\": [\n\t\t\t\"PK\"\n\t\t],\n\t\t\"93\": [\n\t\t\t\"AF\"\n\t\t],\n\t\t\"94\": [\n\t\t\t\"LK\"\n\t\t],\n\t\t\"95\": [\n\t\t\t\"MM\"\n\t\t],\n\t\t\"98\": [\n\t\t\t\"IR\"\n\t\t],\n\t\t\"211\": [\n\t\t\t\"SS\"\n\t\t],\n\t\t\"212\": [\n\t\t\t\"MA\",\n\t\t\t\"EH\"\n\t\t],\n\t\t\"213\": [\n\t\t\t\"DZ\"\n\t\t],\n\t\t\"216\": [\n\t\t\t\"TN\"\n\t\t],\n\t\t\"218\": [\n\t\t\t\"LY\"\n\t\t],\n\t\t\"220\": [\n\t\t\t\"GM\"\n\t\t],\n\t\t\"221\": [\n\t\t\t\"SN\"\n\t\t],\n\t\t\"222\": [\n\t\t\t\"MR\"\n\t\t],\n\t\t\"223\": [\n\t\t\t\"ML\"\n\t\t],\n\t\t\"224\": [\n\t\t\t\"GN\"\n\t\t],\n\t\t\"225\": [\n\t\t\t\"CI\"\n\t\t],\n\t\t\"226\": [\n\t\t\t\"BF\"\n\t\t],\n\t\t\"227\": [\n\t\t\t\"NE\"\n\t\t],\n\t\t\"228\": [\n\t\t\t\"TG\"\n\t\t],\n\t\t\"229\": [\n\t\t\t\"BJ\"\n\t\t],\n\t\t\"230\": [\n\t\t\t\"MU\"\n\t\t],\n\t\t\"231\": [\n\t\t\t\"LR\"\n\t\t],\n\t\t\"232\": [\n\t\t\t\"SL\"\n\t\t],\n\t\t\"233\": [\n\t\t\t\"GH\"\n\t\t],\n\t\t\"234\": [\n\t\t\t\"NG\"\n\t\t],\n\t\t\"235\": [\n\t\t\t\"TD\"\n\t\t],\n\t\t\"236\": [\n\t\t\t\"CF\"\n\t\t],\n\t\t\"237\": [\n\t\t\t\"CM\"\n\t\t],\n\t\t\"238\": [\n\t\t\t\"CV\"\n\t\t],\n\t\t\"239\": [\n\t\t\t\"ST\"\n\t\t],\n\t\t\"240\": [\n\t\t\t\"GQ\"\n\t\t],\n\t\t\"241\": [\n\t\t\t\"GA\"\n\t\t],\n\t\t\"242\": [\n\t\t\t\"CG\"\n\t\t],\n\t\t\"243\": [\n\t\t\t\"CD\"\n\t\t],\n\t\t\"244\": [\n\t\t\t\"AO\"\n\t\t],\n\t\t\"245\": [\n\t\t\t\"GW\"\n\t\t],\n\t\t\"246\": [\n\t\t\t\"IO\"\n\t\t],\n\t\t\"247\": [\n\t\t\t\"AC\"\n\t\t],\n\t\t\"248\": [\n\t\t\t\"SC\"\n\t\t],\n\t\t\"249\": [\n\t\t\t\"SD\"\n\t\t],\n\t\t\"250\": [\n\t\t\t\"RW\"\n\t\t],\n\t\t\"251\": [\n\t\t\t\"ET\"\n\t\t],\n\t\t\"252\": [\n\t\t\t\"SO\"\n\t\t],\n\t\t\"253\": [\n\t\t\t\"DJ\"\n\t\t],\n\t\t\"254\": [\n\t\t\t\"KE\"\n\t\t],\n\t\t\"255\": [\n\t\t\t\"TZ\"\n\t\t],\n\t\t\"256\": [\n\t\t\t\"UG\"\n\t\t],\n\t\t\"257\": [\n\t\t\t\"BI\"\n\t\t],\n\t\t\"258\": [\n\t\t\t\"MZ\"\n\t\t],\n\t\t\"260\": [\n\t\t\t\"ZM\"\n\t\t],\n\t\t\"261\": [\n\t\t\t\"MG\"\n\t\t],\n\t\t\"262\": [\n\t\t\t\"RE\",\n\t\t\t\"YT\"\n\t\t],\n\t\t\"263\": [\n\t\t\t\"ZW\"\n\t\t],\n\t\t\"264\": [\n\t\t\t\"NA\"\n\t\t],\n\t\t\"265\": [\n\t\t\t\"MW\"\n\t\t],\n\t\t\"266\": [\n\t\t\t\"LS\"\n\t\t],\n\t\t\"267\": [\n\t\t\t\"BW\"\n\t\t],\n\t\t\"268\": [\n\t\t\t\"SZ\"\n\t\t],\n\t\t\"269\": [\n\t\t\t\"KM\"\n\t\t],\n\t\t\"290\": [\n\t\t\t\"SH\",\n\t\t\t\"TA\"\n\t\t],\n\t\t\"291\": [\n\t\t\t\"ER\"\n\t\t],\n\t\t\"297\": [\n\t\t\t\"AW\"\n\t\t],\n\t\t\"298\": [\n\t\t\t\"FO\"\n\t\t],\n\t\t\"299\": [\n\t\t\t\"GL\"\n\t\t],\n\t\t\"350\": [\n\t\t\t\"GI\"\n\t\t],\n\t\t\"351\": [\n\t\t\t\"PT\"\n\t\t],\n\t\t\"352\": [\n\t\t\t\"LU\"\n\t\t],\n\t\t\"353\": [\n\t\t\t\"IE\"\n\t\t],\n\t\t\"354\": [\n\t\t\t\"IS\"\n\t\t],\n\t\t\"355\": [\n\t\t\t\"AL\"\n\t\t],\n\t\t\"356\": [\n\t\t\t\"MT\"\n\t\t],\n\t\t\"357\": [\n\t\t\t\"CY\"\n\t\t],\n\t\t\"358\": [\n\t\t\t\"FI\",\n\t\t\t\"AX\"\n\t\t],\n\t\t\"359\": [\n\t\t\t\"BG\"\n\t\t],\n\t\t\"370\": [\n\t\t\t\"LT\"\n\t\t],\n\t\t\"371\": [\n\t\t\t\"LV\"\n\t\t],\n\t\t\"372\": [\n\t\t\t\"EE\"\n\t\t],\n\t\t\"373\": [\n\t\t\t\"MD\"\n\t\t],\n\t\t\"374\": [\n\t\t\t\"AM\"\n\t\t],\n\t\t\"375\": [\n\t\t\t\"BY\"\n\t\t],\n\t\t\"376\": [\n\t\t\t\"AD\"\n\t\t],\n\t\t\"377\": [\n\t\t\t\"MC\"\n\t\t],\n\t\t\"378\": [\n\t\t\t\"SM\"\n\t\t],\n\t\t\"380\": [\n\t\t\t\"UA\"\n\t\t],\n\t\t\"381\": [\n\t\t\t\"RS\"\n\t\t],\n\t\t\"382\": [\n\t\t\t\"ME\"\n\t\t],\n\t\t\"385\": [\n\t\t\t\"HR\"\n\t\t],\n\t\t\"386\": [\n\t\t\t\"SI\"\n\t\t],\n\t\t\"387\": [\n\t\t\t\"BA\"\n\t\t],\n\t\t\"389\": [\n\t\t\t\"MK\"\n\t\t],\n\t\t\"420\": [\n\t\t\t\"CZ\"\n\t\t],\n\t\t\"421\": [\n\t\t\t\"SK\"\n\t\t],\n\t\t\"423\": [\n\t\t\t\"LI\"\n\t\t],\n\t\t\"500\": [\n\t\t\t\"FK\"\n\t\t],\n\t\t\"501\": [\n\t\t\t\"BZ\"\n\t\t],\n\t\t\"502\": [\n\t\t\t\"GT\"\n\t\t],\n\t\t\"503\": [\n\t\t\t\"SV\"\n\t\t],\n\t\t\"504\": [\n\t\t\t\"HN\"\n\t\t],\n\t\t\"505\": [\n\t\t\t\"NI\"\n\t\t],\n\t\t\"506\": [\n\t\t\t\"CR\"\n\t\t],\n\t\t\"507\": [\n\t\t\t\"PA\"\n\t\t],\n\t\t\"508\": [\n\t\t\t\"PM\"\n\t\t],\n\t\t\"509\": [\n\t\t\t\"HT\"\n\t\t],\n\t\t\"590\": [\n\t\t\t\"GP\",\n\t\t\t\"BL\",\n\t\t\t\"MF\"\n\t\t],\n\t\t\"591\": [\n\t\t\t\"BO\"\n\t\t],\n\t\t\"592\": [\n\t\t\t\"GY\"\n\t\t],\n\t\t\"593\": [\n\t\t\t\"EC\"\n\t\t],\n\t\t\"594\": [\n\t\t\t\"GF\"\n\t\t],\n\t\t\"595\": [\n\t\t\t\"PY\"\n\t\t],\n\t\t\"596\": [\n\t\t\t\"MQ\"\n\t\t],\n\t\t\"597\": [\n\t\t\t\"SR\"\n\t\t],\n\t\t\"598\": [\n\t\t\t\"UY\"\n\t\t],\n\t\t\"599\": [\n\t\t\t\"CW\",\n\t\t\t\"BQ\"\n\t\t],\n\t\t\"670\": [\n\t\t\t\"TL\"\n\t\t],\n\t\t\"672\": [\n\t\t\t\"NF\"\n\t\t],\n\t\t\"673\": [\n\t\t\t\"BN\"\n\t\t],\n\t\t\"674\": [\n\t\t\t\"NR\"\n\t\t],\n\t\t\"675\": [\n\t\t\t\"PG\"\n\t\t],\n\t\t\"676\": [\n\t\t\t\"TO\"\n\t\t],\n\t\t\"677\": [\n\t\t\t\"SB\"\n\t\t],\n\t\t\"678\": [\n\t\t\t\"VU\"\n\t\t],\n\t\t\"679\": [\n\t\t\t\"FJ\"\n\t\t],\n\t\t\"680\": [\n\t\t\t\"PW\"\n\t\t],\n\t\t\"681\": [\n\t\t\t\"WF\"\n\t\t],\n\t\t\"682\": [\n\t\t\t\"CK\"\n\t\t],\n\t\t\"683\": [\n\t\t\t\"NU\"\n\t\t],\n\t\t\"685\": [\n\t\t\t\"WS\"\n\t\t],\n\t\t\"686\": [\n\t\t\t\"KI\"\n\t\t],\n\t\t\"687\": [\n\t\t\t\"NC\"\n\t\t],\n\t\t\"688\": [\n\t\t\t\"TV\"\n\t\t],\n\t\t\"689\": [\n\t\t\t\"PF\"\n\t\t],\n\t\t\"690\": [\n\t\t\t\"TK\"\n\t\t],\n\t\t\"691\": [\n\t\t\t\"FM\"\n\t\t],\n\t\t\"692\": [\n\t\t\t\"MH\"\n\t\t],\n\t\t\"800\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"808\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"850\": [\n\t\t\t\"KP\"\n\t\t],\n\t\t\"852\": [\n\t\t\t\"HK\"\n\t\t],\n\t\t\"853\": [\n\t\t\t\"MO\"\n\t\t],\n\t\t\"855\": [\n\t\t\t\"KH\"\n\t\t],\n\t\t\"856\": [\n\t\t\t\"LA\"\n\t\t],\n\t\t\"870\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"878\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"880\": [\n\t\t\t\"BD\"\n\t\t],\n\t\t\"881\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"882\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"883\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"886\": [\n\t\t\t\"TW\"\n\t\t],\n\t\t\"888\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"960\": [\n\t\t\t\"MV\"\n\t\t],\n\t\t\"961\": [\n\t\t\t\"LB\"\n\t\t],\n\t\t\"962\": [\n\t\t\t\"JO\"\n\t\t],\n\t\t\"963\": [\n\t\t\t\"SY\"\n\t\t],\n\t\t\"964\": [\n\t\t\t\"IQ\"\n\t\t],\n\t\t\"965\": [\n\t\t\t\"KW\"\n\t\t],\n\t\t\"966\": [\n\t\t\t\"SA\"\n\t\t],\n\t\t\"967\": [\n\t\t\t\"YE\"\n\t\t],\n\t\t\"968\": [\n\t\t\t\"OM\"\n\t\t],\n\t\t\"970\": [\n\t\t\t\"PS\"\n\t\t],\n\t\t\"971\": [\n\t\t\t\"AE\"\n\t\t],\n\t\t\"972\": [\n\t\t\t\"IL\"\n\t\t],\n\t\t\"973\": [\n\t\t\t\"BH\"\n\t\t],\n\t\t\"974\": [\n\t\t\t\"QA\"\n\t\t],\n\t\t\"975\": [\n\t\t\t\"BT\"\n\t\t],\n\t\t\"976\": [\n\t\t\t\"MN\"\n\t\t],\n\t\t\"977\": [\n\t\t\t\"NP\"\n\t\t],\n\t\t\"979\": [\n\t\t\t\"001\"\n\t\t],\n\t\t\"992\": [\n\t\t\t\"TJ\"\n\t\t],\n\t\t\"993\": [\n\t\t\t\"TM\"\n\t\t],\n\t\t\"994\": [\n\t\t\t\"AZ\"\n\t\t],\n\t\t\"995\": [\n\t\t\t\"GE\"\n\t\t],\n\t\t\"996\": [\n\t\t\t\"KG\"\n\t\t],\n\t\t\"998\": [\n\t\t\t\"UZ\"\n\t\t]\n\t},\n\t\"countries\": {\n\t\t\"AC\": [\n\t\t\t\"247\",\n\t\t\t\"[46]\\\\d{4}|[01589]\\\\d{5}\"\n\t\t],\n\t\t\"AD\": [\n\t\t\t\"376\",\n\t\t\t\"[16]\\\\d{5,8}|[37-9]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[137-9]|6[0-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"180[02]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"690\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"AE\": [\n\t\t\t\"971\",\n\t\t\t\"[2-79]\\\\d{7,8}|800\\\\d{2,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-4679])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-4679][2-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([479]00)(\\\\d)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[479]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([68]00)(\\\\d{2,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"60|8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"AF\": [\n\t\t\t\"93\",\n\t\t\t\"[2-7]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-7]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-7]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"AG\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"268\"\n\t\t],\n\t\t\"AI\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"264\"\n\t\t],\n\t\t\"AL\": [\n\t\t\t\"355\",\n\t\t\t\"[2-57]\\\\d{7}|6\\\\d{8}|8\\\\d{5,7}|9\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(4)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[0-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6[6-9])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2358][2-5]|4[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235][16-9]|8[016-9]|[79]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"AM\": [\n\t\t\t\"374\",\n\t\t\t\"[1-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|47\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[1349]|[5-7]|9[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8|90\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0 $1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"AO\": [\n\t\t\t\"244\",\n\t\t\t\"[29]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"AR\": [\n\t\t\t\"54\",\n\t\t\t\"11\\\\d{8}|[2368]\\\\d{9}|9\\\\d{10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([68]\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[68]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(11)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$2 15-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"911\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3-$4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$2 15-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9(?:2[234689]|3[3-8])\",\n\t\t\t\t\t\t\"9(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578]))\",\n\t\t\t\t\t\t\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\",\n\t\t\t\t\t\t\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3-$4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$2 15-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[23]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3-$4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(11)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578])\",\n\t\t\t\t\t\t\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[456]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\",\n\t\t\t\t\t\t\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1239])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\t\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?\",\n\t\t\t\"9$1\"\n\t\t],\n\t\t\"AS\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"684\"\n\t\t],\n\t\t\"AT\": [\n\t\t\t\"43\",\n\t\t\t\"[1-9]\\\\d{3,12}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(116\\\\d{3})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"116\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3,12})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5[079]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5[079]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{4})(\\\\d{4,7})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5[079]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"316|46|51|732|6(?:5[0-3579]|[6-9])|7(?:[28]0)|[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:2[1-8]|35|4[1-8]|[5-79])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"AU\": [\n\t\t\t\"61\",\n\t\t\t\"[1-578]\\\\d{5,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2378])(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2378]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[45]|14\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(16)(\\\\d{3})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"16\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[38]0|90)\",\n\t\t\t\t\t\t\"1(?:[38]00|90)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(180)(2\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"1802\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[13]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[679]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(13)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"[237]\\\\d{8}|8(?:[6-8]\\\\d{3}|9(?:[02-9]\\\\d{2}|1(?:[0-57-9]\\\\d|6[0135-9])))\\\\d{4}\",\n\t\t\t\t\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\",\n\t\t\t\t\"180(?:0\\\\d{3}|2)\\\\d{3}\",\n\t\t\t\t\"19(?:0[0126]\\\\d|[679])\\\\d{5}\",\n\t\t\t\t\"500\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"16\\\\d{3,7}\",\n\t\t\t\t\"550\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"AW\": [\n\t\t\t\"297\",\n\t\t\t\"[25-9]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"AX\": [\n\t\t\t\"358\",\n\t\t\t\"[135]\\\\d{5,9}|[27]\\\\d{4,9}|4\\\\d{5,10}|6\\\\d{7,8}|8\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[1-3]00|[6-8]0)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(116\\\\d{3})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"116\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[14]|2[09]|50|7[135]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[25689][1-8]|3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"18[1-8]\\\\d{3,9}\",\n\t\t\t\t\"4\\\\d{5,10}|50\\\\d{4,8}\",\n\t\t\t\t\"800\\\\d{4,7}\",\n\t\t\t\t\"[67]00\\\\d{5,6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\"\n\t\t\t]\n\t\t],\n\t\t\"AZ\": [\n\t\t\t\"994\",\n\t\t\t\"[1-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:1[28]|2(?:[45]2|[0-36])|365)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-8]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"BA\": [\n\t\t\t\"387\",\n\t\t\t\"[3-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[1-356]|[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[047]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"BB\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"246\"\n\t\t],\n\t\t\"BD\": [\n\t\t\t\"880\",\n\t\t\t\"[2-79]\\\\d{5,9}|1\\\\d{9}|8[0-7]\\\\d{4,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{7,8})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-79]1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3,6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[016])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-79][2-9]|8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"BE\": [\n\t\t\t\"32\",\n\t\t\t\"[1-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[6-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]|4[23]|9[2-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[156]|7[018]|8(?:0[1-9]|[1-79])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:80|9)0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"BF\": [\n\t\t\t\"226\",\n\t\t\t\"[25-7]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BG\": [\n\t\t\t\"359\",\n\t\t\t\"[23567]\\\\d{5,7}|[489]\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"43[124-7]|70[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"43[124-7]|70[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[78]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"999\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"48|8[7-9]|9[08]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"BH\": [\n\t\t\t\"973\",\n\t\t\t\"[136-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BI\": [\n\t\t\t\"257\",\n\t\t\t\"[267]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BJ\": [\n\t\t\t\"229\",\n\t\t\t\"[2689]\\\\d{7}|7\\\\d{3}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BL\": [\n\t\t\t\"590\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([56]90)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"590(?:2[7-9]|5[12]|87)\\\\d{4}\",\n\t\t\t\t\"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\"\n\t\t\t]\n\t\t],\n\t\t\"BM\": [\n\t\t\t\"1\",\n\t\t\t\"[4589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"441\"\n\t\t],\n\t\t\"BN\": [\n\t\t\t\"673\",\n\t\t\t\"[2-578]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-578]\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BO\": [\n\t\t\t\"591\",\n\t\t\t\"[23467]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([234])(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[234]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([67]\\\\d{7})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[67]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"0(1\\\\d)?\"\n\t\t],\n\t\t\"BQ\": [\n\t\t\t\"599\",\n\t\t\t\"[347]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:318[023]|416[023]|7(?:1[578]|50)\\\\d)\\\\d{3}\",\n\t\t\t\t\"(?:318[14-68]|416[15-9]|7(?:0[01]|7[07]|[89]\\\\d)\\\\d)\\\\d{3}\"\n\t\t\t]\n\t\t],\n\t\t\"BR\": [\n\t\t\t\"55\",\n\t\t\t\"[1-46-9]\\\\d{7,10}|5(?:[0-4]\\\\d{7,9}|5(?:[2-8]\\\\d{7}|9\\\\d{7,8}))\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[14689][1-9]|2[12478]|3[1-578]|5[1-5]|7[13-579])9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-9][1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:300|40(?:0|20))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3589]00)(\\\\d{2,3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3589]00\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\n\t\t\t\"$2\"\n\t\t],\n\t\t\"BS\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"242\"\n\t\t],\n\t\t\"BT\": [\n\t\t\t\"975\",\n\t\t\t\"[1-8]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|77\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-8])(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-68]|7[246]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BW\": [\n\t\t\t\"267\",\n\t\t\t\"[2-79]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(90)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"BY\": [\n\t\t\t\"375\",\n\t\t\t\"[1-4]\\\\d{8}|800\\\\d{3,7}|[89]\\\\d{9,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"17[0-3589]|2[4-9]|[34]\",\n\t\t\t\t\t\t\"17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])\",\n\t\t\t\t\t\t\"1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\n\t\t\t\t\t\t\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[01]|9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(82\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"82\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{2})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\tnull,\n\t\t\t\"8?0?\"\n\t\t],\n\t\t\"BZ\": [\n\t\t\t\"501\",\n\t\t\t\"[2-8]\\\\d{6}|0\\\\d{10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0)(800)(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CA\": [\n\t\t\t\"1\",\n\t\t\t\"[2-9]\\\\d{9}|3\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}|310\\\\d{4}\",\n\t\t\t\t\"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",\n\t\t\t\t\"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}|310\\\\d{4}\",\n\t\t\t\t\"900[2-9]\\\\d{6}\",\n\t\t\t\t\"5(?:00|22|33|44|66|77|88)[2-9]\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"CC\": [\n\t\t\t\"61\",\n\t\t\t\"[1458]\\\\d{5,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2378])(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2378]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[45]|14\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(16)(\\\\d{3})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"16\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[38]0|90)\",\n\t\t\t\t\t\t\"1(?:[38]00|90)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(180)(2\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"1802\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[13]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[679]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(13)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"89162\\\\d{4}\",\n\t\t\t\t\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-2]\\\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\",\n\t\t\t\t\"180(?:0\\\\d{3}|2)\\\\d{3}\",\n\t\t\t\t\"190[0126]\\\\d{6}\",\n\t\t\t\t\"500\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"550\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"CD\": [\n\t\t\t\"243\",\n\t\t\t\"[2-6]\\\\d{6}|[18]\\\\d{6,8}|9\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"12\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[0-2459]|9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"88\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-6]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"CF\": [\n\t\t\t\"236\",\n\t\t\t\"[278]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CG\": [\n\t\t\t\"242\",\n\t\t\t\"[028]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[02]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CH\": [\n\t\t\t\"41\",\n\t\t\t\"[2-9]\\\\d{8}|860\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-9]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-7]|[89]1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[047]|90\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"860\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"CI\": [\n\t\t\t\"225\",\n\t\t\t\"[02-8]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CK\": [\n\t\t\t\"682\",\n\t\t\t\"[2-8]\\\\d{4}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CL\": [\n\t\t\t\"56\",\n\t\t\t\"(?:[2-9]|600|123)\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[23]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[357]|4[1-35]|6[13-57]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(44)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"44\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([68]00)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"60|8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"60\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1230)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"219\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\t\"0|(1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))\"\n\t\t],\n\t\t\"CM\": [\n\t\t\t\"237\",\n\t\t\t\"[2368]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([26])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]|88\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CN\": [\n\t\t\t\"86\",\n\t\t\t\"[1-7]\\\\d{6,11}|8[0-357-9]\\\\d{6,9}|9\\\\d{7,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80[2678]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([48]00)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[48]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:10|2\\\\d)[19]\",\n\t\t\t\t\t\t\"(?:10|2\\\\d)(?:10|9[56])\",\n\t\t\t\t\t\t\"(?:10|2\\\\d)(?:100|9[56])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-9]\",\n\t\t\t\t\t\t\"[3-9]\\\\d{2}[19]\",\n\t\t\t\t\t\t\"[3-9]\\\\d{2}(?:10|9[56])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(21)(\\\\d{4})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([12]\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"10[1-9]|2[02-9]\",\n\t\t\t\t\t\t\"10[1-9]|2[02-9]\",\n\t\t\t\t\t\t\"10(?:[1-79]|8(?:[1-9]|0[1-9]))|2[02-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[4789]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"807\",\n\t\t\t\t\t\t\"8078\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[3-578]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(10800)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"108\",\n\t\t\t\t\t\t\"1080\",\n\t\t\t\t\t\t\"10800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"950\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"(1(?:[129]\\\\d{3}|79\\\\d{2}))|0\"\n\t\t],\n\t\t\"CO\": [\n\t\t\t\"57\",\n\t\t\t\"(?:[13]\\\\d{0,3}|[24-8])\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:8[2-9]|9[0-3]|[2-7])|[24-8]\",\n\t\t\t\t\t\t\"1(?:8[2-9]|9(?:09|[1-3])|[2-7])|[24-8]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"($1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3})(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:80|9[04])\",\n\t\t\t\t\t\t\"1(?:800|9(?:0[01]|4[78]))\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"0([3579]|4(?:44|56))?\"\n\t\t],\n\t\t\"CR\": [\n\t\t\t\"506\",\n\t\t\t\"[24-9]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24-7]|8[3-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"(19(?:0[012468]|1[09]|20|66|77|99))\"\n\t\t],\n\t\t\"CU\": [\n\t\t\t\"53\",\n\t\t\t\"[2-57]\\\\d{5,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{6,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"CV\": [\n\t\t\t\"238\",\n\t\t\t\"[259]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CW\": [\n\t\t\t\"599\",\n\t\t\t\"[169]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"9(?:[48]\\\\d{2}|50\\\\d|7(?:2[0-24]|[34]\\\\d|6[35-7]|77|8[7-9]))\\\\d{4}\",\n\t\t\t\t\"9(?:5(?:[12467]\\\\d|3[01])|6(?:[15-9]\\\\d|3[01]))\\\\d{4}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"955\\\\d{5}\"\n\t\t\t]\n\t\t],\n\t\t\"CX\": [\n\t\t\t\"61\",\n\t\t\t\"[1458]\\\\d{5,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2378])(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2378]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[45]|14\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(16)(\\\\d{3})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"16\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[38]0|90)\",\n\t\t\t\t\t\t\"1(?:[38]00|90)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(180)(2\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"1802\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[13]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(19\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"19[679]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(13)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"89164\\\\d{4}\",\n\t\t\t\t\"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-2]\\\\d|3[0-57-9]|4[47-9]|5[0-25-9]|6[6-9]|7[02-9]|8[147-9]|9[017-9])\\\\d{6}\",\n\t\t\t\t\"180(?:0\\\\d{3}|2)\\\\d{3}\",\n\t\t\t\t\"190[0126]\\\\d{6}\",\n\t\t\t\t\"500\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"550\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"CY\": [\n\t\t\t\"357\",\n\t\t\t\"[257-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"CZ\": [\n\t\t\t\"420\",\n\t\t\t\"[2-8]\\\\d{8}|9\\\\d{8,11}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-8]|9[015-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(96\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"96\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[36]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"DE\": [\n\t\t\t\"49\",\n\t\t\t\"[1-35-9]\\\\d{3,14}|4(?:[0-8]\\\\d{4,12}|9(?:[0-37]\\\\d|4(?:[1-35-8]|4\\\\d?)|5\\\\d{1,2}|6[1-8]\\\\d?)\\\\d{2,8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{2})(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(15\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15[0568]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3[02]|40|[68]9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:\\\\d1|0[2389]|1[24]|28|34)|3(?:[3-9][15]|40)|[4-8][1-9]1|9(?:06|[1-9]1)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{2,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24-6]|[7-9](?:\\\\d[1-9]|[1-9]\\\\d)|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])\",\n\t\t\t\t\t\t\"[24-6]|[7-9](?:\\\\d[1-9]|[1-9]\\\\d)|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|4[1246]|6[1-4]|7[1346]|8[13568]|9[1246])|6(?:0[356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(3\\\\d{4})(\\\\d{1,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{7,12})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:18|90)0|137\",\n\t\t\t\t\t\t\"1(?:37|80)|900[1359]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{2})(\\\\d{5,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"181\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(18\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"185\",\n\t\t\t\t\t\t\"1850\",\n\t\t\t\t\t\t\"18500\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(18\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"18[68]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(18\\\\d)(\\\\d{8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"18[2-579]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(700)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"700\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(138)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"138\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(15[013-68])(\\\\d{2})(\\\\d{8})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15[013-68]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(15[279]\\\\d)(\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15[279]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[67]\\\\d)(\\\\d{2})(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:6[023]|7)\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"DJ\": [\n\t\t\t\"253\",\n\t\t\t\"[27]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"DK\": [\n\t\t\t\"45\",\n\t\t\t\"[2-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"DM\": [\n\t\t\t\"1\",\n\t\t\t\"[57-9]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"767\"\n\t\t],\n\t\t\"DO\": [\n\t\t\t\"1\",\n\t\t\t\"[589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"8[024]9\"\n\t\t],\n\t\t\"DZ\": [\n\t\t\t\"213\",\n\t\t\t\"(?:[1-4]|[5-9]\\\\d)\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-4]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([5-8]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[5-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"EC\": [\n\t\t\t\"593\",\n\t\t\t\"1\\\\d{9,10}|[2-8]\\\\d{7}|9\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[247]|[356][2-8]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1800)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"EE\": [\n\t\t\t\"372\",\n\t\t\t\"1\\\\d{3,4}|[3-9]\\\\d{6,7}|800\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3-79]\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]\",\n\t\t\t\t\t\t\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(70)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8000)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8000\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([458]\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"40|5|8(?:00|[1-5])\",\n\t\t\t\t\t\t\"40|5|8(?:00[1-9]|[1-5])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"EG\": [\n\t\t\t\"20\",\n\t\t\t\"1\\\\d{4,9}|[2456]\\\\d{8}|3\\\\d{7}|[89]\\\\d{8,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[012]|[89]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[35]|[4-6]|[89][2-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"EH\": [\n\t\t\t\"212\",\n\t\t\t\"[5-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([5-7]\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:2[015-7]|3[0-4])|[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:2[2-489]|3[5-9]|92)|892\",\n\t\t\t\t\t\t\"5(?:2(?:[2-48]|90)|3(?:[5-79]|80)|924)|892\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:29|38)\",\n\t\t\t\t\t\t\"5(?:29|38)[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:4[067]|5[03])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8[09])(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:0|9[013-9])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"528[89]\"\n\t\t],\n\t\t\"ER\": [\n\t\t\t\"291\",\n\t\t\t\"[178]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ES\": [\n\t\t\t\"34\",\n\t\t\t\"[5-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([89]00)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([5-9]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[568]|[79][0-8]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"ET\": [\n\t\t\t\"251\",\n\t\t\t\"[1-59]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-59]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"FI\": [\n\t\t\t\"358\",\n\t\t\t\"1\\\\d{4,11}|[2-9]\\\\d{4,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[1-3]00|[6-8]0)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(116\\\\d{3})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"116\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[14]|2[09]|50|7[135]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4,11})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[25689][1-8]|3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"1(?:[3569][1-8]\\\\d{3,9}|[47]\\\\d{5,10})|2[1-8]\\\\d{3,9}|3(?:[1-8]\\\\d{3,9}|9\\\\d{4,8})|[5689][1-8]\\\\d{3,9}\",\n\t\t\t\t\"4\\\\d{5,10}|50\\\\d{4,8}\",\n\t\t\t\t\"800\\\\d{4,7}\",\n\t\t\t\t\"[67]00\\\\d{5,6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\"\n\t\t\t]\n\t\t],\n\t\t\"FJ\": [\n\t\t\t\"679\",\n\t\t\t\"[36-9]\\\\d{6}|0\\\\d{10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[36-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"FK\": [\n\t\t\t\"500\",\n\t\t\t\"[2-7]\\\\d{4}\"\n\t\t],\n\t\t\"FM\": [\n\t\t\t\"691\",\n\t\t\t\"[39]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"FO\": [\n\t\t\t\"298\",\n\t\t\t\"[2-9]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{6})\",\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"(10(?:01|[12]0|88))\"\n\t\t],\n\t\t\"FR\": [\n\t\t\t\"33\",\n\t\t\t\"[1-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-79]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0 $1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"GA\": [\n\t\t\t\"241\",\n\t\t\t\"0?\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-7]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GB\": [\n\t\t\t\"44\",\n\t\t\t\"\\\\d{7,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6[013-9])\",\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:1|\\\\d1)|3|9[018]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:38|5[23]|69|76|94)\",\n\t\t\t\t\t\t\"1(?:387|5(?:24|39)|697|768|946)\",\n\t\t\t\t\t\t\"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[1-5789]|62)\",\n\t\t\t\t\t\t\"7(?:[1-5789]|624)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8001\",\n\t\t\t\t\t\t\"80011\",\n\t\t\t\t\t\t\"800111\",\n\t\t\t\t\t\t\"8001111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(845)(46)(4\\\\d)\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"845\",\n\t\t\t\t\t\t\"8454\",\n\t\t\t\t\t\t\"84546\",\n\t\t\t\t\t\t\"845464\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:4[2-5]|7[0-3])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[012])\\\\d{7}|1(?:(?:1(?:3[0-48]|[46][0-4]|5[012789]|7[0-49]|8[01349])|21[0-7]|31[0-8]|[459]1\\\\d|61[0-46-9]))\\\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-4789]|7[013-9]|9\\\\d)|3(?:0\\\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1235679]|9[24578])|4(?:0[03-9]|[28][02-5789]|[37]\\\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1235-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\\\d|7[0-35-9]|8[0-468]|9[0-5789])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\\\d|3[023678]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-5789]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-5789]|4[2-9]|5[0-579]|6[234789]|7[0124578]|8\\\\d|9[2-57]))\\\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-4789]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[015789]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\\\d)|276\\\\d|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[567]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}|176888[234678]\\\\d{2}|16977[23]\\\\d{3}\",\n\t\t\t\t\"7(?:[1-4]\\\\d\\\\d|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[04-9]\\\\d|1[02-9]|2[0-35-9]|3[0-689]))\\\\d{6}\",\n\t\t\t\t\"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})|500\\\\d{6}\",\n\t\t\t\t\"(?:87[123]|9(?:[01]\\\\d|8[2349]))\\\\d{7}\",\n\t\t\t\t\"70\\\\d{8}\",\n\t\t\t\tnull,\n\t\t\t\t\"(?:3[0347]|55)\\\\d{8}\",\n\t\t\t\t\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\n\t\t\t\t\"56\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"GD\": [\n\t\t\t\"1\",\n\t\t\t\"[4589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"473\"\n\t\t],\n\t\t\"GE\": [\n\t\t\t\"995\",\n\t\t\t\"[34578]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[348]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"GF\": [\n\t\t\t\"594\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"GG\": [\n\t\t\t\"44\",\n\t\t\t\"[135789]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6[013-9])\",\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:1|\\\\d1)|3|9[018]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:38|5[23]|69|76|94)\",\n\t\t\t\t\t\t\"1(?:387|5(?:24|39)|697|768|946)\",\n\t\t\t\t\t\t\"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[1-5789]|62)\",\n\t\t\t\t\t\t\"7(?:[1-5789]|624)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8001\",\n\t\t\t\t\t\t\"80011\",\n\t\t\t\t\t\t\"800111\",\n\t\t\t\t\t\t\"8001111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(845)(46)(4\\\\d)\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"845\",\n\t\t\t\t\t\t\"8454\",\n\t\t\t\t\t\t\"84546\",\n\t\t\t\t\t\t\"845464\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:4[2-5]|7[0-3])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"1481\\\\d{6}\",\n\t\t\t\t\"7(?:781|839|911)\\\\d{6}\",\n\t\t\t\t\"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})|500\\\\d{6}\",\n\t\t\t\t\"(?:87[123]|9(?:[01]\\\\d|8[0-3]))\\\\d{7}\",\n\t\t\t\t\"70\\\\d{8}\",\n\t\t\t\tnull,\n\t\t\t\t\"(?:3[0347]|55)\\\\d{8}\",\n\t\t\t\t\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\n\t\t\t\t\"56\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"GH\": [\n\t\t\t\"233\",\n\t\t\t\"[235]\\\\d{8}|8\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"GI\": [\n\t\t\t\"350\",\n\t\t\t\"[2568]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GL\": [\n\t\t\t\"299\",\n\t\t\t\"[1-689]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GM\": [\n\t\t\t\"220\",\n\t\t\t\"[2-9]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GN\": [\n\t\t\t\"224\",\n\t\t\t\"[367]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[67]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GP\": [\n\t\t\t\"590\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([56]90)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"590(?:0[13468]|1[012]|2[0-68]|3[28]|4[0-8]|5[579]|6[0189]|70|8[0-689]|9\\\\d)\\\\d{4}\",\n\t\t\t\t\"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\"\n\t\t\t]\n\t\t],\n\t\t\"GQ\": [\n\t\t\t\"240\",\n\t\t\t\"[23589]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GR\": [\n\t\t\t\"30\",\n\t\t\t\"[26-9]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([27]\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21|7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[2-9]1|[689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[2-9][02-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GT\": [\n\t\t\t\"502\",\n\t\t\t\"[2-7]\\\\d{7}|1[89]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GU\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"671\"\n\t\t],\n\t\t\"GW\": [\n\t\t\t\"245\",\n\t\t\t\"(?:4(?:0\\\\d{5}|4\\\\d{7})|9\\\\d{8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"44|9[567]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"40\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"GY\": [\n\t\t\t\"592\",\n\t\t\t\"[2-4679]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"HK\": [\n\t\t\t\"852\",\n\t\t\t\"[235-7]\\\\d{7}|8\\\\d{7,8}|9\\\\d{4,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235-7]|[89](?:0[1-9]|[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(900)(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"900\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(900)(\\\\d{2,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"900\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"HN\": [\n\t\t\t\"504\",\n\t\t\t\"[237-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"HR\": [\n\t\t\t\"385\",\n\t\t\t\"[1-7]\\\\d{5,8}|[89]\\\\d{6,11}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6[09])(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[09]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([67]2)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[67]2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-5]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d)(\\\\d{3,4})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[0145]|7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[0145]|7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80[01])(\\\\d{2})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80[01])(\\\\d{3,4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"HT\": [\n\t\t\t\"509\",\n\t\t\t\"[2-489]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"HU\": [\n\t\t\t\"36\",\n\t\t\t\"[1-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"06\",\n\t\t\t\"($1)\"\n\t\t],\n\t\t\"ID\": [\n\t\t\t\"62\",\n\t\t\t\"(?:[1-79]\\\\d{6,10}|8\\\\d{7,11})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[124]|[36]1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4579]|2[035-9]|[36][02-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3,4})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[1-35-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)(500)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(177)(\\\\d{6,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"17\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{5,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(804)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"804\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80[79]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"IE\": [\n\t\t\t\"353\",\n\t\t\t\"[124-9]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[24-9]|47|58|6[237-9]|9[35-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"40[24]|50[45]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(48)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"48\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(818)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"81\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24-69]|7[14]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([78]\\\\d)(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"76|8[35-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(700)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:8[059]|5)\",\n\t\t\t\t\t\t\"1(?:8[059]0|5)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"IL\": [\n\t\t\t\"972\",\n\t\t\t\"[17]\\\\d{6,9}|[2-589]\\\\d{3}(?:\\\\d{3,6})?|6\\\\d{3}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-489])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-489]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([57]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[57]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1255)(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"125\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1200)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"120\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1212)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"121\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1599)(\\\\d{6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})\",\n\t\t\t\t\t\"*$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-689]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"$1\"\n\t\t],\n\t\t\"IM\": [\n\t\t\t\"44\",\n\t\t\t\"[135789]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6[013-9])\",\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:1|\\\\d1)|3|9[018]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:38|5[23]|69|76|94)\",\n\t\t\t\t\t\t\"1(?:387|5(?:24|39)|697|768|946)\",\n\t\t\t\t\t\t\"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[1-5789]|62)\",\n\t\t\t\t\t\t\"7(?:[1-5789]|624)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8001\",\n\t\t\t\t\t\t\"80011\",\n\t\t\t\t\t\t\"800111\",\n\t\t\t\t\t\t\"8001111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(845)(46)(4\\\\d)\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"845\",\n\t\t\t\t\t\t\"8454\",\n\t\t\t\t\t\t\"84546\",\n\t\t\t\t\t\t\"845464\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:4[2-5]|7[0-3])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"1624\\\\d{6}\",\n\t\t\t\t\"7[569]24\\\\d{6}\",\n\t\t\t\t\"808162\\\\d{4}\",\n\t\t\t\t\"(?:872299|90[0167]624)\\\\d{4}\",\n\t\t\t\t\"70\\\\d{8}\",\n\t\t\t\tnull,\n\t\t\t\t\"3(?:08162\\\\d|3\\\\d{5}|4(?:40[49]06|5624\\\\d)|7(?:0624\\\\d|2299\\\\d))\\\\d{3}|55\\\\d{8}\",\n\t\t\t\tnull,\n\t\t\t\t\"56\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"IN\": [\n\t\t\t\"91\",\n\t\t\t\"008\\\\d{9}|1\\\\d{7,12}|[2-9]\\\\d{9,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[02-578]|19|6[0-35-9]|9[07-9])|8(?:0[015-9]|2[02356-9]|3[0-57-9]|[1459]|6[02-9]|7[01-69]|8[0-24-9])|9\",\n\t\t\t\t\t\t\"7(?:[078]|19[0-5]|2(?:[02356-9]|[14][017-9]|9[389])|3(?:[025-9]|1[07-9]|[34][017-9])|4(?:[0-35689]|[47][017-9])|5(?:[02346-9]|1[019]|5[017-9])|6(?:[06-9]|1[0-257-9]|2[0-5]|3[19]|5[4589])|9(?:0|7[2-9]|8[0246-9]|9[0-24-9]))|8(?:0(?:[01589]|6[67]|7[2-9])|1(?:[02-57-9]|1[0135-9]|6[089])|2(?:0[08]|[236-9]|5[1-9])|3(?:[0357-9]|17|28|4[1-9])|[45]|6(?:[02457-9]|6[07-9])|7(?:0[07]|[1-69])|8(?:[0-26-9]|44|5[2-9])|9(?:[035-9]|19|2[2-9]|4[0-8]))|9\",\n\t\t\t\t\t\t\"7(?:0|19[0-5]|2(?:[0235679]|[14][017-9]|8(?:[0-569]|78|8[089])|9[389])|3(?:[05-8]|1(?:[089]|7[5-9])|2(?:[5-8]|[0-49][089])|3[017-9]|4(?:[07-9]|11)|9(?:[01689]|[2345][089]|40|7[0189]))|4(?:[056]|1(?:[0135-9]|[23][089]|2[089]|4[089])|2(?:0[089]|[1-7][089]|[89])|3(?:[0-8][089]|9)|4(?:[089]|11|7[02-8])|7(?:[089]|11|7[02-8])|8(?:[0-24-7][089]|[389])|9(?:[0-7][089]|[89]))|5(?:[0346-9]|1[019]|2(?:[03-9]|[12][089])|5[017-9])|6(?:[06-9]|1[0-257-9]|2[0-5]|3[19]|5[4589])|7(?:0(?:[02-9]|10)|[1-9])|8(?:[0-79]|8(?:0[0189]|11|8[013-9]|9[012]))|9(?:0|7(?:[2-8]|9[7-9])|8[0246-9]|9(?:[04-9]|11|2[234])))|8(?:0(?:[01589]|6[67]|7(?:[2-7]|86|90))|1(?:[02-57-9]|1(?:[0135-9]|22|44)|6[089])|2(?:0[08]|[236-9]|5[1-9])|3(?:[0357-9]|170|28[0-6]|4[1-9])|[45]|6(?:[02457-9]|6(?:[08]|7[02-8]|9[01]))|7(?:0[07]|[1-69])|8(?:[0-26-9]|44|5[2-9])|9(?:[035-9]|19|2[2-9]|4[0-8]))|9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"11|2[02]|33|4[04]|79[1-9]|80[2-46]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:2[0-249]|3[0-25]|4[145]|[569][14]|7[1257]|8[1346]|[68][1-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|[36][25]|22|4[28]|5[12]|[78]1|9[15])|6(?:12|[2345]1|57|6[13]|7[14]|80)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)\",\n\t\t\t\t\t\t\"7(?:12|2[14]|3[134]|4[47]|5(?:1|5[2-6])|[67]1|88)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[23579]|[468][1-9])|[2-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"008\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1600)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"160\",\n\t\t\t\t\t\t\"1600\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1800)(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"180\",\n\t\t\t\t\t\t\"1800\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(18[06]0)(\\\\d{2,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"18[06]\",\n\t\t\t\t\t\t\"18[06]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(140)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"140\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"18[06]\",\n\t\t\t\t\t\t\"18(?:0[03]|6[12])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"IO\": [\n\t\t\t\"246\",\n\t\t\t\"3\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"IQ\": [\n\t\t\t\"964\",\n\t\t\t\"[1-7]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-6]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"IR\": [\n\t\t\t\"98\",\n\t\t\t\"[1-8]\\\\d{9}|9(?:[0-4]\\\\d{8}|9\\\\d{2,8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(21)(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"IS\": [\n\t\t\t\"354\",\n\t\t\t\"[4-9]\\\\d{6}|38\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(3\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"IT\": [\n\t\t\t\"39\",\n\t\t\t\"[01589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]|55\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0[26])(\\\\d{4})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0[26])(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][0159]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\",\n\t\t\t\t\t\t\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][2-46-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{3})(\\\\d{2,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][2-46-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13]|8(?:00|4[08]|9[59])\",\n\t\t\t\t\t\t\"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"894\",\n\t\t\t\t\t\t\"894[5-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"0(?:[26]\\\\d{4,9}|(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7})\",\n\t\t\t\t\"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\",\n\t\t\t\t\"80(?:0\\\\d{6}|3\\\\d{3})\",\n\t\t\t\t\"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\",\n\t\t\t\t\"1(?:78\\\\d|99)\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"55\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"JE\": [\n\t\t\t\"44\",\n\t\t\t\"[135789]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6[013-9])\",\n\t\t\t\t\t\t\"2|5[56]|7(?:0|6(?:[013-9]|2[0-35-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:1|\\\\d1)|3|9[018]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:38|5[23]|69|76|94)\",\n\t\t\t\t\t\t\"1(?:387|5(?:24|39)|697|768|946)\",\n\t\t\t\t\t\t\"1(?:3873|5(?:242|39[456])|697[347]|768[347]|9467)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7(?:[1-5789]|62)\",\n\t\t\t\t\t\t\"7(?:[1-5789]|624)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\",\n\t\t\t\t\t\t\"8001\",\n\t\t\t\t\t\t\"80011\",\n\t\t\t\t\t\t\"800111\",\n\t\t\t\t\t\t\"8001111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(845)(46)(4\\\\d)\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"845\",\n\t\t\t\t\t\t\"8454\",\n\t\t\t\t\t\t\"84546\",\n\t\t\t\t\t\t\"845464\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:4[2-5]|7[0-3])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"1534\\\\d{6}\",\n\t\t\t\t\"7(?:509|7(?:00|97)|829|937)\\\\d{6}\",\n\t\t\t\t\"80(?:07(?:35|81)|8901)\\\\d{4}\",\n\t\t\t\t\"(?:871206|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\",\n\t\t\t\t\"701511\\\\d{4}\",\n\t\t\t\tnull,\n\t\t\t\t\"3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\\\d{4}|55\\\\d{8}\",\n\t\t\t\t\"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\",\n\t\t\t\t\"56\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"JM\": [\n\t\t\t\"1\",\n\t\t\t\"[589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"876\"\n\t\t],\n\t\t\"JO\": [\n\t\t\t\"962\",\n\t\t\t\"[235-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2356]|87\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[457-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70|8[0158]|9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"JP\": [\n\t\t\t\"81\",\n\t\t\t\"[1-9]\\\\d{8,9}|00(?:[36]\\\\d{7,14}|7\\\\d{5,7}|8\\\\d{7})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:12|57|99)0\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"800\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2579]0|80[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|5(?:76|97)|499|746|8(?:3[89]|63|47|51)|9(?:49|80|9[16])\",\n\t\t\t\t\t\t\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:76|97)9|499[2468]|7468|8(?:3(?:8[78]|96)|636|477|51[24])|9(?:496|802|9(?:1[23]|69))\",\n\t\t\t\t\t\t\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|5(?:769|979[2-69])|499[2468]|7468|8(?:3(?:8[78]|96[2457-9])|636[2-57-9]|477|51[24])|9(?:496|802|9(?:1[23]|69))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])\",\n\t\t\t\t\t\t\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:7[2-6]|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|[4-7]))\",\n\t\t\t\t\t\t\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6[56]))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\",\n\t\t\t\t\t\t\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:5[78]|7[2-4]|[0468][2-9])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[89][2-8]|[4-7]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:[3578]|20|4[04-9]|6(?:5[25]|60)))|3(?:7(?:[2-5]|6[0-59])|[3-6][2-9]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5(?:[2-589]|39)|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93)\",\n\t\t\t\t\t\t\"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93[34])\",\n\t\t\t\t\t\t\"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:[68]|20|9[178])|64|7[347])|5(?:[2-589]|39[67])|60|8(?:[46-9]|3[279]|2[124589])|9(?:[235-8]|93(?:31|4))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:9[14-79]|74|[34]7|[56]9)|82|993\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3|4(?:2[09]|7[01])|6[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2479][1-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"KE\": [\n\t\t\t\"254\",\n\t\t\t\"20\\\\d{6,7}|[4-9]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\t\"005|0\"\n\t\t],\n\t\t\"KG\": [\n\t\t\t\"996\",\n\t\t\t\"[235-8]\\\\d{8,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[25-7]|31[25]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:1[36]|[2-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"KH\": [\n\t\t\t\"855\",\n\t\t\t\"[1-9]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\\\\d[1-9]|[2-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[89]00)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[89]0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"KI\": [\n\t\t\t\"686\",\n\t\t\t\"[2458]\\\\d{4}|3\\\\d{4,7}|7\\\\d{7}\",\n\t\t\t[],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"0\"\n\t\t],\n\t\t\"KM\": [\n\t\t\t\"269\",\n\t\t\t\"[379]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"KN\": [\n\t\t\t\"1\",\n\t\t\t\"[589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"869\"\n\t\t],\n\t\t\"KP\": [\n\t\t\t\"850\",\n\t\t\t\"1\\\\d{9}|[28]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"KR\": [\n\t\t\t\"82\",\n\t\t\t\"007\\\\d{9,11}|[1-7]\\\\d{3,9}|8\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:0|1[19]|[69]9|5[458])|[57]0\",\n\t\t\t\t\t\t\"1(?:0|1[19]|[69]9|5(?:44|59|8))|[57]0\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[01]|5[1-4]|6[2-8]|[7-9])|[68]0|[3-6][1-9][1-9]\",\n\t\t\t\t\t\t\"1(?:[01]|5(?:[1-3]|4[56])|6[2-8]|[7-9])|[68]0|[3-6][1-9][1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"131\",\n\t\t\t\t\t\t\"1312\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"131\",\n\t\t\t\t\t\t\"131[13-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"30\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3,4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21[0-46-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-6][1-9]1\",\n\t\t\t\t\t\t\"[3-6][1-9]1(?:[0-46-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:5[246-9]|6[04678]|8[03579])\",\n\t\t\t\t\t\t\"1(?:5(?:22|44|66|77|88|99)|6(?:00|44|6[16]|70|88)|8(?:00|33|55|77|99))\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\t\"0(8[1-46-8]|85\\\\d{2})?\"\n\t\t],\n\t\t\"KW\": [\n\t\t\t\"965\",\n\t\t\t\"[12569]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[16]|2(?:[0-35-9]|4[0-35-9])|9[024-9]|52[25]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"244|5(?:[015]|66)\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"KY\": [\n\t\t\t\"1\",\n\t\t\t\"[3589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"345\"\n\t\t],\n\t\t\"KZ\": [\n\t\t\t\"7\",\n\t\t\t\"(?:33\\\\d|7\\\\d{2}|80[09])\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[34689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"33622\\\\d{5}|7(?:1(?:0(?:[23]\\\\d|4[023]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[1-79]|4[0-35-9]|59)|4(?:2\\\\d|3[013-79]|4[0-8]|5[1-79])|5(?:2\\\\d|3[1-8]|4[1-7]|59)|6(?:[234]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[234]\\\\d|5[139])|4(?:2\\\\d|3[1235-9]|59)|5(?:[23]\\\\d|4[01246-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59)))\\\\d{5}\",\n\t\t\t\t\"7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\\\d{7}\",\n\t\t\t\t\"800\\\\d{7}\",\n\t\t\t\t\"809\\\\d{7}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"751\\\\d{7}\"\n\t\t\t]\n\t\t],\n\t\t\"LA\": [\n\t\t\t\"856\",\n\t\t\t\"[2-8]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(20)(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-8]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[13]|3[14]|[4-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(30)(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"30\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"LB\": [\n\t\t\t\"961\",\n\t\t\t\"[13-9]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13-6]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]|9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([7-9]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89][01]|7(?:[01]|6[013-9]|8[89]|9[1-3])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"LC\": [\n\t\t\t\"1\",\n\t\t\t\"[5789]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"758\"\n\t\t],\n\t\t\"LI\": [\n\t\t\t\"423\",\n\t\t\t\"6\\\\d{8}|[23789]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23789]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[56]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(69)(7\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"697\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\t\"0|10(?:01|20|66)\"\n\t\t],\n\t\t\"LK\": [\n\t\t\t\"94\",\n\t\t\t\"[1-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{1})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"LR\": [\n\t\t\t\"231\",\n\t\t\t\"2\\\\d{7,8}|[378]\\\\d{8}|4\\\\d{6}|5\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([4-5])(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[45]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23578]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"LS\": [\n\t\t\t\"266\",\n\t\t\t\"[2568]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"LT\": [\n\t\t\t\"370\",\n\t\t\t\"[3-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([34]\\\\d)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"37|4(?:1|5[45]|6[2-4])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-6]\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3[148]|4(?:[24]|6[09])|528|6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([7-9]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[7-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5)(2\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"52[0-79]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"(8-$1)\",\n\t\t\t\"[08]\",\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"LU\": [\n\t\t\t\"352\",\n\t\t\t\"[24-9]\\\\d{3,10}|3(?:[0-46-9]\\\\d{2,9}|5[013-9]\\\\d{1,8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-5]|7[1-9]|[89](?:[1-9]|0[2-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-5]|7[1-9]|[89](?:[1-9]|0[2-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:[0367]|4[3-8])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:[0367]|4[3-8])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,4})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:[1-9]|0[2-9])|9(?:[1-9]|0[2-46-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70|80[01]|90[015]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\\\d)\"\n\t\t],\n\t\t\"LV\": [\n\t\t\t\"371\",\n\t\t\t\"[2689]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2689]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"LY\": [\n\t\t\t\"218\",\n\t\t\t\"[25679]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([25679]\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MA\": [\n\t\t\t\"212\",\n\t\t\t\"[5-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([5-7]\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:2[015-7]|3[0-4])|[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:2[2-489]|3[5-9]|92)|892\",\n\t\t\t\t\t\t\"5(?:2(?:[2-48]|90)|3(?:[5-79]|80)|924)|892\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:29|38)\",\n\t\t\t\t\t\t\"5(?:29|38)[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5(?:4[067]|5[03])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8[09])(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8(?:0|9[013-9])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"5(?:2(?:(?:[015-7]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\\\d|9(?:0\\\\d|[89]0))|3(?:(?:[0-4]\\\\d|[57][2-9]|6[2-8]|9[3-9])\\\\d|8(?:0\\\\d|[89]0))|(?:4[067]|5[03])\\\\d{2})\\\\d{4}\",\n\t\t\t\t\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[07][07]|6[12]))\\\\d{6}\",\n\t\t\t\t\"80\\\\d{7}\",\n\t\t\t\t\"89\\\\d{7}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"5924[01]\\\\d{4}\"\n\t\t\t]\n\t\t],\n\t\t\"MC\": [\n\t\t\t\"377\",\n\t\t\t\"[34689]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[39]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MD\": [\n\t\t\t\"373\",\n\t\t\t\"[235-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"22|3\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([25-7]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[13-9]|[5-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ME\": [\n\t\t\t\"382\",\n\t\t\t\"[2-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-57-9]|6[036-9]\",\n\t\t\t\t\t\t\"[2-57-9]|6(?:[03689]|7(?:[0-8]|9[3-9]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(67)(9)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"679\",\n\t\t\t\t\t\t\"679[0-2]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MF\": [\n\t\t\t\"590\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([56]90)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"590(?:[02][79]|13|5[0-268]|[78]7)\\\\d{4}\",\n\t\t\t\t\"690(?:0[0-7]|[1-9]\\\\d)\\\\d{4}\"\n\t\t\t]\n\t\t],\n\t\t\"MG\": [\n\t\t\t\"261\",\n\t\t\t\"[23]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([23]\\\\d)(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MH\": [\n\t\t\t\"692\",\n\t\t\t\"[2-6]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\"\n\t\t],\n\t\t\"MK\": [\n\t\t\t\"389\",\n\t\t\t\"[2-578]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([347]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[347]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]\\\\d{2})(\\\\d)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ML\": [\n\t\t\t\"223\",\n\t\t\t\"[246-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[246-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MM\": [\n\t\t\t\"95\",\n\t\t\t\"[1478]\\\\d{5,7}|[256]\\\\d{5,8}|9(?:[279]\\\\d{0,2}|[58]|[34]\\\\d{1,2}|6\\\\d?)\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|2[245]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"251\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"16|2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"67|81\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9(?:2[0-4]|[35-9]|4[137-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)([34]\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9(?:3[0-36]|4[0-57-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"92[56]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"93\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MN\": [\n\t\t\t\"976\",\n\t\t\t\"[12]\\\\d{7,9}|[57-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([12]\\\\d)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([12]2\\\\d)(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]2[1-3]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([12]\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12](?:27|[3-5])\",\n\t\t\t\t\t\t\"[12](?:27|[3-5]\\\\d)2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[57-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([12]\\\\d{4})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12](?:27|[3-5])\",\n\t\t\t\t\t\t\"[12](?:27|[3-5]\\\\d)[4-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MO\": [\n\t\t\t\"853\",\n\t\t\t\"[268]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([268]\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MP\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"670\"\n\t\t],\n\t\t\"MQ\": [\n\t\t\t\"596\",\n\t\t\t\"[56]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MR\": [\n\t\t\t\"222\",\n\t\t\t\"[2-48]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-48]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MS\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"664\"\n\t\t],\n\t\t\"MT\": [\n\t\t\t\"356\",\n\t\t\t\"[2357-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MU\": [\n\t\t\t\"230\",\n\t\t\t\"[2-9]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2-46-9]\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-46-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MV\": [\n\t\t\t\"960\",\n\t\t\t\"[346-8]\\\\d{6,9}|9(?:00\\\\d{7}|\\\\d{6})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3467]|9(?:[1-9]|0[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]00\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"MW\": [\n\t\t\t\"265\",\n\t\t\t\"(?:1(?:\\\\d{2})?|[2789]\\\\d{2})\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1789]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"MX\": [\n\t\t\t\"52\",\n\t\t\t\"[1-9]\\\\d{9,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([358]\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"33|55|81\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"044 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:33|55|81)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"044 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"01\",\n\t\t\t\"01 $1\",\n\t\t\t\"0[12]|04[45](\\\\d{10})\",\n\t\t\t\"1$1\",\n\t\t\ttrue\n\t\t],\n\t\t\"MY\": [\n\t\t\t\"60\",\n\t\t\t\"[13-9]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([4-79])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-79]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(3)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([18]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[02-46-9][1-9]|8\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1)([36-8]00)(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[36-8]0\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(11)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"11\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(15[49])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"MZ\": [\n\t\t\t\"258\",\n\t\t\t\"[28]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([28]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2|8[2-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NA\": [\n\t\t\t\"264\",\n\t\t\t\"[68]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[1235]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(88)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"88\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(870)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"870\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"NC\": [\n\t\t\t\"687\",\n\t\t\t\"[2-57-9]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1.$2.$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-46-9]|5[0-4]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NE\": [\n\t\t\t\"227\",\n\t\t\t\"[0289]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[289]|09\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(08)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"08\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NF\": [\n\t\t\t\"672\",\n\t\t\t\"[13]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NG\": [\n\t\t\t\"234\",\n\t\t\t\"[1-6]\\\\d{5,8}|9\\\\d{5,9}|[78]\\\\d{5,13}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]|9(?:0[3-9]|[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-6]|7(?:[1-79]|0[1-9])|8[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70|8[01]|90[2357-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([78]00)(\\\\d{4})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[78]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([78]00)(\\\\d{5})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[78]00\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(78)(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"78\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"NI\": [\n\t\t\t\"505\",\n\t\t\t\"[12578]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NL\": [\n\t\t\t\"31\",\n\t\t\t\"1\\\\d{4,8}|[2-7]\\\\d{8}|[89]\\\\d{6,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-578]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-5]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6)(\\\\d{8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6[0-57-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(66)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"66\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(14)(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"14\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]0\\\\d)(\\\\d{4,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80|9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"NO\": [\n\t\t\t\"47\",\n\t\t\t\"0\\\\d{4}|[2-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[489]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235-7]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\",\n\t\t\t\t\"(?:4[015-8]|5[89]|87|9\\\\d)\\\\d{6}\",\n\t\t\t\t\"80[01]\\\\d{5}\",\n\t\t\t\t\"82[09]\\\\d{5}\",\n\t\t\t\t\"880\\\\d{5}\",\n\t\t\t\t\"81[23]\\\\d{5}\",\n\t\t\t\t\"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\",\n\t\t\t\tnull,\n\t\t\t\t\"85[0-5]\\\\d{5}\"\n\t\t\t]\n\t\t],\n\t\t\"NP\": [\n\t\t\t\"977\",\n\t\t\t\"[1-8]\\\\d{7}|9(?:[1-69]\\\\d{6,8}|7[2-6]\\\\d{5,7}|8\\\\d{8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[2-6]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[01]|[2-8]|9(?:[1-69]|7[15-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9(?:6[013]|7[245]|8)\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"NR\": [\n\t\t\t\"674\",\n\t\t\t\"[458]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"NU\": [\n\t\t\t\"683\",\n\t\t\t\"[1-5]\\\\d{3}\"\n\t\t],\n\t\t\"NZ\": [\n\t\t\t\"64\",\n\t\t\t\"6[235-9]\\\\d{6}|[2-57-9]\\\\d{7,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([34679])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[346]|7[2-57-9]|9[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(24099)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"240\",\n\t\t\t\t\t\t\"2409\",\n\t\t\t\t\t\t\"24099\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:1[1-9]|[69]|7[0-35-9])|70|86\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d)(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[028]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:10|74)|5|[89]0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"OM\": [\n\t\t\t\"968\",\n\t\t\t\"(?:5|[279]\\\\d)\\\\d{6}|800\\\\d{5,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([79]\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[79]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]00)(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[58]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PA\": [\n\t\t\t\"507\",\n\t\t\t\"[1-9]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-57-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PE\": [\n\t\t\t\"51\",\n\t\t\t\"[14-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(1)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([4-8]\\\\d)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[4-7]|8[2-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"PF\": [\n\t\t\t\"689\",\n\t\t\t\"4\\\\d{5,7}|8\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[09]|8[79]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"44\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PG\": [\n\t\t\t\"675\",\n\t\t\t\"[1-9]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13-689]|27\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20|7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PH\": [\n\t\t\t\"63\",\n\t\t\t\"2\\\\d{5,7}|[3-9]\\\\d{7,9}|1800\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])\",\n\t\t\t\t\t\t\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"346|4(?:27|9[35])|883\",\n\t\t\t\t\t\t\"3469|4(?:279|9(?:30|56))|8834\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-8]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-8]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"81|9\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1800)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1800)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"PK\": [\n\t\t\t\"92\",\n\t\t\t\"1\\\\d{8}|[2-8]\\\\d{5,11}|9(?:[013-9]\\\\d{4,9}|2\\\\d(?:111\\\\d{6}|\\\\d{3,7}))\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(111)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1\",\n\t\t\t\t\t\t\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11\",\n\t\t\t\t\t\t\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(111)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[349]|45|54|60|72|8[2-5]|9[2-9]\",\n\t\t\t\t\t\t\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d1\",\n\t\t\t\t\t\t\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d11\",\n\t\t\t\t\t\t\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d111\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{7,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[349]|45|54|60|72|8[2-5]|9[2-9]\",\n\t\t\t\t\t\t\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(3\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([15]\\\\d{3})(\\\\d{5,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"58[12]|1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(586\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"586\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]00)(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]00\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"PL\": [\n\t\t\t\"48\",\n\t\t\t\"[12]\\\\d{6,8}|[3-57-9]\\\\d{8}|6\\\\d{5,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{1})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"26|39|5[0137]|6[0469]|7[02389]|8[08]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"64\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"64\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PM\": [\n\t\t\t\"508\",\n\t\t\t\"[45]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([45]\\\\d)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"PR\": [\n\t\t\t\"1\",\n\t\t\t\"[5789]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"787|939\"\n\t\t],\n\t\t\"PS\": [\n\t\t\t\"970\",\n\t\t\t\"[24589]\\\\d{7,8}|1(?:[78]\\\\d{8}|[49]\\\\d{2,3})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([2489])(2\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2489]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5[69]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[78]00)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[78]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"PT\": [\n\t\t\t\"351\",\n\t\t\t\"[2-46-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[12]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-46-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[3-9]|[346-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PW\": [\n\t\t\t\"680\",\n\t\t\t\"[2-8]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"PY\": [\n\t\t\t\"595\",\n\t\t\t\"5[0-5]\\\\d{4,7}|[2-46-9]\\\\d{5,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[26]1|3[289]|4[124678]|7[123]|8[1236])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:[26]1|3[289]|4[124678]|7[123]|8[1236])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-9]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8700\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-8][1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-8][1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"QA\": [\n\t\t\t\"974\",\n\t\t\t\"[2-8]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([28]\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[28]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-7]\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-7]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"RE\": [\n\t\t\t\"262\",\n\t\t\t\"[268]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"262|6[49]|8\"\n\t\t],\n\t\t\"RO\": [\n\t\t\t\"40\",\n\t\t\t\"2\\\\d{5,8}|[37-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]1\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(21)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"21\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23][3-7]|[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[3-6]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"RS\": [\n\t\t\t\"381\",\n\t\t\t\"[126-9]\\\\d{4,11}|3(?:[0-79]\\\\d{3,10}|8[2-9]\\\\d{2,9})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([23]\\\\d{2})(\\\\d{4,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:2[389]|39)0\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-3]\\\\d)(\\\\d{5,10})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(6\\\\d)(\\\\d{6,8})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7[26])(\\\\d{4,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7[08]\\\\d)(\\\\d{4,9})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[08]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"RU\": [\n\t\t\t\"7\",\n\t\t\t\"[3489]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[34689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"8 ($1)\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\",\n\t\t\t\t\"9\\\\d{9}\",\n\t\t\t\t\"80[04]\\\\d{7}\",\n\t\t\t\t\"80[39]\\\\d{7}\"\n\t\t\t]\n\t\t],\n\t\t\"RW\": [\n\t\t\t\"250\",\n\t\t\t\"[027-9]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[7-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"SA\": [\n\t\t\t\"966\",\n\t\t\t\"1\\\\d{7,8}|(?:[2-467]|92)\\\\d{7}|5\\\\d{8}|8\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-467])(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-467]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[1-467]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(5\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(92\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"92\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(811)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"81\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SB\": [\n\t\t\t\"677\",\n\t\t\t\"[1-9]\\\\d{4,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[7-9]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SC\": [\n\t\t\t\"248\",\n\t\t\t\"[2468]\\\\d{5,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[246]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SD\": [\n\t\t\t\"249\",\n\t\t\t\"[19]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SE\": [\n\t\t\t\"46\",\n\t\t\t\"[1-35-9]\\\\d{5,11}|4\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-469]\\\\d)(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[136]|2[136]|3[356]|4[0246]|6[03]|90\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(77)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(20)(\\\\d{2,3})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[034]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9[034]\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[034]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2 $3 $4 $5\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"25[245]|67[3-6]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1 $2 $3 $4 $5\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SG\": [\n\t\t\t\"65\",\n\t\t\t\"[36]\\\\d{7}|[17-9]\\\\d{7,10}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3689]\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[369]|8[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[89]00)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7000)(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SH\": [\n\t\t\t\"290\",\n\t\t\t\"[256]\\\\d{4}\",\n\t\t\t[],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"2(?:[0-57-9]\\\\d|6[4-9])\\\\d{2}\",\n\t\t\t\t\"[56]\\\\d{4}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"262\\\\d{2}\"\n\t\t\t]\n\t\t],\n\t\t\"SI\": [\n\t\t\t\"386\",\n\t\t\t\"[1-7]\\\\d{6,7}|[89]\\\\d{4,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[12]|3[24-8]|4[24-8]|5[2-8]|7[3-8]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-7]\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[37][01]|4[0139]|51|6\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89][09])(\\\\d{3,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89][09]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([58]\\\\d{2})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"59|8[1-3]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SJ\": [\n\t\t\t\"47\",\n\t\t\t\"0\\\\d{4}|[4789]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[489]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[235-7]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"79\\\\d{6}\",\n\t\t\t\t\"(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}\",\n\t\t\t\t\"80[01]\\\\d{5}\",\n\t\t\t\t\"82[09]\\\\d{5}\",\n\t\t\t\t\"880\\\\d{5}\",\n\t\t\t\t\"81[23]\\\\d{5}\",\n\t\t\t\t\"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\",\n\t\t\t\tnull,\n\t\t\t\t\"85[0-5]\\\\d{5}\"\n\t\t\t]\n\t\t],\n\t\t\"SK\": [\n\t\t\t\"421\",\n\t\t\t\"(?:[2-68]\\\\d{5,8}|9\\\\d{6,8})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(16)(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"216\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-5]\\\\d)(16)(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\n\t\t\t\t\t\"$1/$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-5]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1/$2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[3-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([689]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[689]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9090)(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9090\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"SL\": [\n\t\t\t\"232\",\n\t\t\t\"[2-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"(0$1)\"\n\t\t],\n\t\t\"SM\": [\n\t\t\t\"378\",\n\t\t\t\"[05-7]\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[5-7]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0549)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"($1) $2\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{6})\",\n\t\t\t\t\t\"0549 $1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t],\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"(0549) $1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"(?:0549)?([89]\\\\d{5})\",\n\t\t\t\"0549$1\"\n\t\t],\n\t\t\"SN\": [\n\t\t\t\"221\",\n\t\t\t\"[3789]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[379]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SO\": [\n\t\t\t\"252\",\n\t\t\t\"[1-79]\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[0-79]|[13-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"24|[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{5,7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"15|28|6[1-35-9]|799|9[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(90\\\\d)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"90\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"SR\": [\n\t\t\t\"597\",\n\t\t\t\"[2-8]\\\\d{5,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-4]|5[2-58]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1-$2-$3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"56\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"59|[6-8]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SS\": [\n\t\t\t\"211\",\n\t\t\t\"[19]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\tnull,\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"ST\": [\n\t\t\t\"239\",\n\t\t\t\"[29]\\\\d{6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SV\": [\n\t\t\t\"503\",\n\t\t\t\"[267]\\\\d{7}|[89]\\\\d{6}(?:\\\\d{4})?\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[267]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"SX\": [\n\t\t\t\"1\",\n\t\t\t\"[5789]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"721\"\n\t\t],\n\t\t\"SY\": [\n\t\t\t\"963\",\n\t\t\t\"[1-59]\\\\d{7,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-5]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"SZ\": [\n\t\t\t\"268\",\n\t\t\t\"[027]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[027]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TA\": [\n\t\t\t\"290\",\n\t\t\t\"8\\\\d{3}\",\n\t\t\t[],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"8\\\\d{3}\"\n\t\t\t]\n\t\t],\n\t\t\"TC\": [\n\t\t\t\"1\",\n\t\t\t\"[5689]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"649\"\n\t\t],\n\t\t\"TD\": [\n\t\t\t\"235\",\n\t\t\t\"[2679]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TG\": [\n\t\t\t\"228\",\n\t\t\t\"[29]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TH\": [\n\t\t\t\"66\",\n\t\t\t\"[2-9]\\\\d{7,8}|1\\\\d{3}(?:\\\\d{5,6})?\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(2)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([13-9]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"14|[3-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[89]00)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"TJ\": [\n\t\t\t\"992\",\n\t\t\t\"[3-589]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([349]\\\\d{2})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[34]7|91[78]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([4589]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4[148]|[58]|9(?:1[59]|[0235-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(331700)(\\\\d)(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"331\",\n\t\t\t\t\t\t\"3317\",\n\t\t\t\t\t\t\"33170\",\n\t\t\t\t\t\t\"331700\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3[1-5]\",\n\t\t\t\t\t\t\"3(?:[1245]|3(?:[02-9]|1[0-589]))\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"(8) $1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"TK\": [\n\t\t\t\"690\",\n\t\t\t\"[2-47]\\\\d{3,6}\"\n\t\t],\n\t\t\"TL\": [\n\t\t\t\"670\",\n\t\t\t\"[2-489]\\\\d{6}|7\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-489]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TM\": [\n\t\t\t\"993\",\n\t\t\t\"[1-6]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"12\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"6\"\n\t\t\t\t\t],\n\t\t\t\t\t\"8 $1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2-$3-$4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"13|[2-5]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"(8 $1)\"\n\t\t],\n\t\t\"TN\": [\n\t\t\t\"216\",\n\t\t\t\"[2-57-9]\\\\d{7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TO\": [\n\t\t\t\"676\",\n\t\t\t\"[02-8]\\\\d{4,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})\",\n\t\t\t\t\t\"$1-$2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-6]|7[0-4]|8[05]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[5-9]|8[47-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"TR\": [\n\t\t\t\"90\",\n\t\t\t\"[2-589]\\\\d{9}|444\\\\d{4}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]|4(?:[0-35-9]|4[0-35-9])\"\n\t\t\t\t\t],\n\t\t\t\t\t\"(0$1)\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"5[02-69]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"51|[89]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\",\n\t\t\t\t\t\"true\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(444)(\\\\d{1})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"444\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"TT\": [\n\t\t\t\"1\",\n\t\t\t\"[589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"868\"\n\t\t],\n\t\t\"TV\": [\n\t\t\t\"688\",\n\t\t\t\"[279]\\\\d{4,6}\"\n\t\t],\n\t\t\"TW\": [\n\t\t\t\"886\",\n\t\t\t\"2\\\\d{6,8}|[3-689]\\\\d{7,8}|7\\\\d{7,9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(20)(\\\\d)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"202\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(20)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"20[013-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2-8])(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[23-8]|[3-6]|[78][1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80|9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(70)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"70\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"TZ\": [\n\t\t\t\"255\",\n\t\t\t\"\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([24]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([67]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[67]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d{2})(\\\\d{2})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"UA\": [\n\t\t\t\"380\",\n\t\t\t\"[3-9]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([3-9]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[38]9|4(?:[45][0-5]|87)|5(?:0|6[37]|7[37])|6[36-8]|73|9[1-9]\",\n\t\t\t\t\t\t\"[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|73|9[1-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-689]\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3[1-8]2|4[13678]2|5(?:[12457]2|6[24])|6(?:[49]2|[12][29]|5[24])|8[0-8]|90\",\n\t\t\t\t\t\t\"3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[49]2|[12][29]|5[24])|8[0-8]|90\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([3-6]\\\\d{3})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3(?:5[013-9]|[1-46-8])|4(?:[137][013-9]|6|[45][6-9]|8[4-6])|5(?:[1245][013-9]|6[0135-9]|3|7[4-6])|6(?:[49][013-9]|5[0135-9]|[12][13-8])\",\n\t\t\t\t\t\t\"3(?:5[013-9]|[1-46-8](?:22|[013-9]))|4(?:[137][013-9]|6(?:[013-9]|22)|[45][6-9]|8[4-6])|5(?:[1245][013-9]|6(?:3[02389]|[015689])|3|7[4-6])|6(?:[49][013-9]|5[0135-9]|[12][13-8])\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"UG\": [\n\t\t\t\"256\",\n\t\t\t\"\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[7-9]|20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3|4(?:[1-5]|6[0-36-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(2024)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2024\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"US\": [\n\t\t\t\"1\",\n\t\t\t\"[2-9]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"(?:2(?:0[1-35-9]|1[02-9]|2[04589]|3[149]|4[08]|5[1-46]|6[0279]|7[026]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[014679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-37]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[12])|7(?:0[1-46-8]|1[02-9]|2[0457]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-25]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[014678]|4[0179]|5[12469]|7[0-3589]|8[0459]))[2-9]\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\t\"8(?:00|44|55|66|77|88)[2-9]\\\\d{6}\",\n\t\t\t\t\"900[2-9]\\\\d{6}\",\n\t\t\t\t\"5(?:00|22|33|44|66|77|88)[2-9]\\\\d{6}\"\n\t\t\t]\n\t\t],\n\t\t\"UY\": [\n\t\t\t\"598\",\n\t\t\t\"[2489]\\\\d{6,7}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[24]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"9[1-9]\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[89]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"0$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\"\n\t\t],\n\t\t\"UZ\": [\n\t\t\t\"998\",\n\t\t\t\"[679]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([679]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"8\",\n\t\t\t\"8 $1\"\n\t\t],\n\t\t\"VA\": [\n\t\t\t\"39\",\n\t\t\t\"(?:0(?:878\\\\d{5}|6698\\\\d{5})|[1589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9}))\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]|55\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0[26])(\\\\d{4})(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0[26])(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[26]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][0159]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\",\n\t\t\t\t\t\t\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][2-46-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(0\\\\d{3})(\\\\d{2,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"0[13-57-9][2-46-8]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[13]|8(?:00|4[08]|9[59])\",\n\t\t\t\t\t\t\"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"894\",\n\t\t\t\t\t\t\"894[5-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"3\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t[\n\t\t\t\t\"06698\\\\d{5}\",\n\t\t\t\t\"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\",\n\t\t\t\t\"80(?:0\\\\d{6}|3\\\\d{3})\",\n\t\t\t\t\"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\",\n\t\t\t\t\"1(?:78\\\\d|99)\\\\d{6}\",\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\t\"55\\\\d{8}\"\n\t\t\t]\n\t\t],\n\t\t\"VC\": [\n\t\t\t\"1\",\n\t\t\t\"[5789]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"784\"\n\t\t],\n\t\t\"VE\": [\n\t\t\t\"58\",\n\t\t\t\"[24589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{7})\",\n\t\t\t\t\t\"$1-$2\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"VG\": [\n\t\t\t\"1\",\n\t\t\t\"[2589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"284\"\n\t\t],\n\t\t\"VI\": [\n\t\t\t\"1\",\n\t\t\t\"[3589]\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"($1) $2-$3\",\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\"$1-$2-$3\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"340\"\n\t\t],\n\t\t\"VN\": [\n\t\t\t\"84\",\n\t\t\t\"[17]\\\\d{6,9}|[2-69]\\\\d{7,9}|8\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([17]99)(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[17]99\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([48])(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4|8(?:[1-57]|[689][0-79])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235-7]\\\\d)(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[025-79]|3[0136-9]|5[2-9]|6[0-46-8]|7[02-79]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(69\\\\d)(\\\\d{4,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"69\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235-7]\\\\d{2})(\\\\d{4})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2[1348]|3[25]|5[01]|65|7[18]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([89]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[689]8|9\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[2689]\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1(?:[26]|8[68]|99)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(1[89]00)(\\\\d{4,6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[89]0\"\n\t\t\t\t\t],\n\t\t\t\t\t\"$1\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\ttrue\n\t\t],\n\t\t\"VU\": [\n\t\t\t\"678\",\n\t\t\t\"[2-57-9]\\\\d{4,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[579]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"WF\": [\n\t\t\t\"681\",\n\t\t\t\"[4-8]\\\\d{5}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"WS\": [\n\t\t\t\"685\",\n\t\t\t\"[2-8]\\\\d{4,6}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{2})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d)(\\\\d{5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{5})\",\n\t\t\t\t\t\"$1\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[2-6]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"YE\": [\n\t\t\t\"967\",\n\t\t\t\"[1-7]\\\\d{6,8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([1-7])(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-6]|7[24-68]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7[0137]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"YT\": [\n\t\t\t\"262\",\n\t\t\t\"[268]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\n\t\t\t\t\t\"$1 $2 $3 $4\"\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\",\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t\"269|63\"\n\t\t],\n\t\t\"ZA\": [\n\t\t\t\"27\",\n\t\t\t\"[1-79]\\\\d{8}|8(?:[067]\\\\d{7}|[1-4]\\\\d{3,7})\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(860)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"860\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[1-79]|8(?:[0-47]|6[1-9])\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[1-4]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8[1-4]\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ZM\": [\n\t\t\t\"260\",\n\t\t\t\"[289]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([29]\\\\d)(\\\\d{7})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[29]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(800)(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"8\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"ZW\": [\n\t\t\t\"263\",\n\t\t\t\"2(?:[012457-9]\\\\d{3,8}|6(?:[14]\\\\d{7}|\\\\d{4}))|[13-79]\\\\d{4,9}|8[06]\\\\d{8}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"([49])(\\\\d{3})(\\\\d{2,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"4|9[2-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(7\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"7\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(86\\\\d{2})(\\\\d{3})(\\\\d{3})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"86[24]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([2356]\\\\d{2})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:0[45]|2[278]|[49]8|[78])|3(?:08|17|3[78]|7[1569]|8[37]|98)|5[15][78]|6(?:[29]8|[38]7|6[78]|75|[89]8)\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"2(?:1[39]|2[0157]|6[14]|7[35]|84)|329\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([1-356]\\\\d)(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"1[3-9]|2[0569]|3[0-69]|5[05689]|6[0-46-9]\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([235]\\\\d)(\\\\d{3})(\\\\d{3,4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"[23]9|54\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"([25]\\\\d{3})(\\\\d{3,5})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"(?:25|54)8\",\n\t\t\t\t\t\t\"258[23]|5483\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(8\\\\d{3})(\\\\d{6})\",\n\t\t\t\t\t\"$1 $2\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"86\"\n\t\t\t\t\t]\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t\"(80\\\\d)(\\\\d{3})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\",\n\t\t\t\t\t[\n\t\t\t\t\t\t\"80\"\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t],\n\t\t\t\"0\",\n\t\t\t\"0$1\"\n\t\t],\n\t\t\"001\": [\n\t\t\t\"979\",\n\t\t\t\"\\\\d{9}\",\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\n\t\t\t\t\t\"$1 $2 $3\"\n\t\t\t\t]\n\t\t\t]\n\t\t]\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/libphonenumber-js/metadata.min.json\n// module id = 82\n// module chunks = 0","import { alphanumeric } from './alphanumeric';\nimport { digits } from './digits';\nimport { email } from './email';\nimport { integer } from './integer';\nimport { number } from './number';\nimport { pattern } from './pattern';\nimport { phone } from './phone';\n\nclass Validator {\n  constructor() {\n    this.name = 'v.js';\n    this.alphanumeric = alphanumeric;\n    this.digits = digits;\n    this.email = email;\n    this.integer = integer;\n    this.number = number;\n    this.pattern = pattern;\n    this.phone = phone;\n  }\n  getName() {\n    return this.name;\n  }\n}\n\nexport default Validator;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}